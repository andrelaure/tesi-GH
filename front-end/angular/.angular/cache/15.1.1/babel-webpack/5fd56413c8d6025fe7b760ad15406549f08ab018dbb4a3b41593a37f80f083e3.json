{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i4 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i5 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i6 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nconst _c0 = [\"container\"];\nconst _c1 = [\"in\"];\nconst _c2 = [\"multiIn\"];\nconst _c3 = [\"multiContainer\"];\nconst _c4 = [\"ddBtn\"];\nconst _c5 = [\"items\"];\nconst _c6 = [\"scroller\"];\nconst _c7 = function (a0, a1) {\n  return {\n    \"p-autocomplete-dd-input\": a0,\n    \"p-disabled\": a1\n  };\n};\nfunction AutoComplete_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 8, 9);\n    i0.ɵɵlistener(\"click\", function AutoComplete_input_2_Template_input_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onInputClick($event));\n    })(\"input\", function AutoComplete_input_2_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onInput($event));\n    })(\"keydown\", function AutoComplete_input_2_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onKeydown($event));\n    })(\"keyup\", function AutoComplete_input_2_Template_input_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onKeyup($event));\n    })(\"focus\", function AutoComplete_input_2_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onInputFocus($event));\n    })(\"blur\", function AutoComplete_input_2_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onInputBlur($event));\n    })(\"change\", function AutoComplete_input_2_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onInputChange($event));\n    })(\"paste\", function AutoComplete_input_2_Template_input_paste_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onInputPaste($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.inputStyleClass);\n    i0.ɵɵproperty(\"autofocus\", ctx_r1.autofocus)(\"ngStyle\", ctx_r1.inputStyle)(\"autocomplete\", ctx_r1.autocomplete)(\"ngClass\", i0.ɵɵpureFunction2(20, _c7, ctx_r1.dropdown, ctx_r1.disabled))(\"value\", ctx_r1.inputFieldValue)(\"readonly\", ctx_r1.readonly)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵattribute(\"type\", ctx_r1.type)(\"id\", ctx_r1.inputId)(\"required\", ctx_r1.required)(\"name\", ctx_r1.name)(\"placeholder\", ctx_r1.placeholder)(\"size\", ctx_r1.size)(\"maxlength\", ctx_r1.maxlength)(\"tabindex\", ctx_r1.tabindex)(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-required\", ctx_r1.required);\n  }\n}\nfunction AutoComplete_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_i_3_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoComplete_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_i_4_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AutoComplete_ul_5_li_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_ul_5_li_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const val_r25 = i0.ɵɵnextContext().$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r28.resolveFieldData(val_r25));\n  }\n}\nfunction AutoComplete_ul_5_li_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_5_li_2_span_4_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n      i0.ɵɵnextContext();\n      const _r26 = i0.ɵɵreference(1);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.removeItem(_r26));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c8 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction AutoComplete_ul_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17, 18);\n    i0.ɵɵtemplate(2, AutoComplete_ul_5_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵtemplate(3, AutoComplete_ul_5_li_2_span_3_Template, 2, 1, \"span\", 20);\n    i0.ɵɵtemplate(4, AutoComplete_ul_5_li_2_span_4_Template, 1, 0, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const val_r25 = ctx.$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r23.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c8, val_r25));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.selectedItemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.disabled && !ctx_r23.readonly);\n  }\n}\nconst _c9 = function (a0, a1) {\n  return {\n    \"p-disabled\": a0,\n    \"p-focus\": a1\n  };\n};\nfunction AutoComplete_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 11, 12);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_5_Template_ul_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const _r24 = i0.ɵɵreference(5);\n      return i0.ɵɵresetView(_r24.focus());\n    });\n    i0.ɵɵtemplate(2, AutoComplete_ul_5_li_2_Template, 5, 6, \"li\", 13);\n    i0.ɵɵelementStart(3, \"li\", 14)(4, \"input\", 15, 16);\n    i0.ɵɵlistener(\"input\", function AutoComplete_ul_5_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.onInput($event));\n    })(\"click\", function AutoComplete_ul_5_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.onInputClick($event));\n    })(\"keydown\", function AutoComplete_ul_5_Template_input_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.onKeydown($event));\n    })(\"keyup\", function AutoComplete_ul_5_Template_input_keyup_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.onKeyup($event));\n    })(\"focus\", function AutoComplete_ul_5_Template_input_focus_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onInputFocus($event));\n    })(\"blur\", function AutoComplete_ul_5_Template_input_blur_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.onInputBlur($event));\n    })(\"change\", function AutoComplete_ul_5_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onInputChange($event));\n    })(\"paste\", function AutoComplete_ul_5_Template_input_paste_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onInputPaste($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(20, _c9, ctx_r4.disabled, ctx_r4.focus));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r4.inputStyleClass);\n    i0.ɵɵproperty(\"autofocus\", ctx_r4.autofocus)(\"disabled\", ctx_r4.disabled)(\"readonly\", ctx_r4.readonly)(\"autocomplete\", ctx_r4.autocomplete)(\"ngStyle\", ctx_r4.inputStyle);\n    i0.ɵɵattribute(\"type\", ctx_r4.type)(\"id\", ctx_r4.inputId)(\"placeholder\", ctx_r4.value && ctx_r4.value.length ? null : ctx_r4.placeholder)(\"tabindex\", ctx_r4.tabindex)(\"maxlength\", ctx_r4.maxlength)(\"aria-label\", ctx_r4.ariaLabel)(\"aria-labelledby\", ctx_r4.ariaLabelledBy)(\"aria-required\", ctx_r4.required)(\"aria-controls\", ctx_r4.listId)(\"aria-expanded\", ctx_r4.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\");\n  }\n}\nfunction AutoComplete_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 24);\n  }\n}\nfunction AutoComplete_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25, 26);\n    i0.ɵɵlistener(\"click\", function AutoComplete_button_7_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.handleDropdownClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r6.dropdownIcon)(\"disabled\", ctx_r6.disabled);\n    i0.ɵɵattribute(\"aria-label\", ctx_r6.dropdownAriaLabel)(\"tabindex\", ctx_r6.tabindex);\n  }\n}\nfunction AutoComplete_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_div_8_p_scroller_3_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c10 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\nfunction AutoComplete_div_8_p_scroller_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_p_scroller_3_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 19);\n  }\n  if (rf & 2) {\n    const items_r56 = ctx.$implicit;\n    const scrollerOptions_r57 = ctx.options;\n    i0.ɵɵnextContext(2);\n    const _r50 = i0.ɵɵreference(6);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r50)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c10, items_r56, scrollerOptions_r57));\n  }\n}\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c11 = function (a0) {\n  return {\n    options: a0\n  };\n};\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 19);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r60 = ctx.options;\n    const ctx_r59 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r59.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c11, scrollerOptions_r60));\n  }\n}\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 36);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    height: a0\n  };\n};\nfunction AutoComplete_div_8_p_scroller_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r63 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-scroller\", 33, 34);\n    i0.ɵɵlistener(\"onLazyLoad\", function AutoComplete_div_8_p_scroller_3_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r63);\n      const ctx_r62 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r62.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_8_p_scroller_3_ng_template_2_Template, 1, 5, \"ng-template\", 35);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_p_scroller_3_ng_container_3_Template, 2, 0, \"ng-container\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c12, ctx_r48.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r48.suggestions)(\"itemSize\", ctx_r48.virtualScrollItemSize || ctx_r48._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r48.lazy)(\"options\", ctx_r48.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r48.loaderTemplate);\n  }\n}\nfunction AutoComplete_div_8_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c13 = function () {\n  return {};\n};\nfunction AutoComplete_div_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r50 = i0.ɵɵreference(6);\n    const ctx_r49 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r50)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c10, ctx_r49.suggestions, i0.ɵɵpureFunction0(2, _c13)));\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const optgroup_r74 = i0.ɵɵnextContext().$implicit;\n    const ctx_r75 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r75.getOptionGroupLabel(optgroup_r74) || \"empty\");\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 42);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_span_1_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 19);\n  }\n  if (rf & 2) {\n    const optgroup_r74 = ctx.$implicit;\n    const scrollerOptions_r66 = i0.ɵɵnextContext(2).options;\n    const _r70 = i0.ɵɵreference(5);\n    const ctx_r73 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c12, scrollerOptions_r66.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r73.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r73.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c8, optgroup_r74));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r70)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c8, ctx_r73.getOptionGroupChildren(optgroup_r74)));\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_Template, 4, 12, \"ng-template\", 41);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const items_r65 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", items_r65);\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const items_r65 = i0.ɵɵnextContext().$implicit;\n    const _r70 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r70)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c8, items_r65));\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r85 = i0.ɵɵnextContext().$implicit;\n    const ctx_r87 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r87.resolveFieldData(option_r85));\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c14 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\nconst _c15 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r91 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 44);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r91);\n      const option_r85 = restoredCtx.$implicit;\n      const ctx_r90 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r90.selectItem(option_r85));\n    });\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_span_1_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r85 = ctx.$implicit;\n    const idx_r86 = ctx.index;\n    const scrollerOptions_r66 = i0.ɵɵnextContext(2).options;\n    const ctx_r84 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c12, scrollerOptions_r66.itemSize + \"px\"))(\"ngClass\", i0.ɵɵpureFunction1(8, _c14, option_r85 === ctx_r84.highlightOption))(\"id\", ctx_r84.highlightOption == option_r85 ? \"p-highlighted-option\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r84.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r84.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c15, option_r85, scrollerOptions_r66.getOptions ? scrollerOptions_r66.getOptions(idx_r86) : idx_r86));\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template, 3, 13, \"li\", 43);\n  }\n  if (rf & 2) {\n    const suggestionsToDisplay_r83 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngForOf\", suggestionsToDisplay_r83);\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_li_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r93 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r93.emptyMessageLabel, \" \");\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_li_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 47);\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 45);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_li_6_ng_container_1_Template, 2, 1, \"ng-container\", 46);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_li_6_ng_container_2_Template, 2, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r66 = i0.ɵɵnextContext().options;\n    const ctx_r72 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c12, scrollerOptions_r66.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r72.emptyTemplate)(\"ngIfElse\", ctx_r72.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r72.emptyTemplate);\n  }\n}\nfunction AutoComplete_div_8_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 37, 38);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_container_2_Template, 2, 1, \"ng-container\", 31);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_template_5_ng_container_3_Template, 2, 4, \"ng-container\", 31);\n    i0.ɵɵtemplate(4, AutoComplete_div_8_ng_template_5_ng_template_4_Template, 1, 1, \"ng-template\", null, 39, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, AutoComplete_div_8_ng_template_5_li_6_Template, 3, 6, \"li\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r66 = ctx.options;\n    const ctx_r51 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(scrollerOptions_r66.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r66.contentStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r51.listId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r51.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r51.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r51.noResults && ctx_r51.showEmptyMessage);\n  }\n}\nfunction AutoComplete_div_8_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c16 = function () {\n  return [\"p-autocomplete-panel p-component\"];\n};\nconst _c17 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\nconst _c18 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\nfunction AutoComplete_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r98 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27, 28);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      const ctx_r97 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r97.onOverlayClick($event));\n    })(\"@overlayAnimation.start\", function AutoComplete_div_8_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      const ctx_r99 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r99.onOverlayAnimationStart($event));\n    })(\"@overlayAnimation.done\", function AutoComplete_div_8_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      const ctx_r100 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r100.onOverlayAnimationEnd($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_container_2_Template, 1, 0, \"ng-container\", 29);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_p_scroller_3_Template, 4, 10, \"p-scroller\", 30);\n    i0.ɵɵtemplate(4, AutoComplete_div_8_ng_container_4_Template, 2, 6, \"ng-container\", 31);\n    i0.ɵɵtemplate(5, AutoComplete_div_8_ng_template_5_Template, 7, 7, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, AutoComplete_div_8_ng_container_7_Template, 1, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r7.panelStyleClass);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r7.virtualScroll ? \"auto\" : ctx_r7.scrollHeight);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(11, _c16))(\"ngStyle\", ctx_r7.panelStyle)(\"@overlayAnimation\", i0.ɵɵpureFunction1(15, _c18, i0.ɵɵpureFunction2(12, _c17, ctx_r7.showTransitionOptions, ctx_r7.hideTransitionOptions)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.virtualScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.virtualScroll);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.footerTemplate);\n  }\n}\nconst _c19 = function (a1, a2) {\n  return {\n    \"p-autocomplete p-component\": true,\n    \"p-autocomplete-dd\": a1,\n    \"p-autocomplete-multiple\": a2\n  };\n};\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AutoComplete),\n  multi: true\n};\nclass AutoComplete {\n  constructor(el, renderer, cd, differs, config, overlayService) {\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.differs = differs;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.minLength = 1;\n    this.delay = 300;\n    this.scrollHeight = '200px';\n    this.lazy = false;\n    this.type = 'text';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.dropdownIcon = 'pi pi-chevron-down';\n    this.unique = true;\n    this.completeOnFocus = false;\n    this.showClear = false;\n    this.dropdownMode = 'blank';\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.autocomplete = 'off';\n    this.completeMethod = new EventEmitter();\n    this.onSelect = new EventEmitter();\n    this.onUnselect = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onDropdownClick = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.onKeyUp = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.onLazyLoad = new EventEmitter();\n    this.onModelChange = () => {};\n    this.onModelTouched = () => {};\n    this.overlayVisible = false;\n    this.focus = false;\n    this.inputFieldValue = null;\n    this.inputValue = null;\n    this.differ = differs.find([]).create(null);\n    this.listId = UniqueComponentId() + '_list';\n  }\n  get itemSize() {\n    return this._itemSize;\n  }\n  set itemSize(val) {\n    this._itemSize = val;\n    console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n  }\n  get suggestions() {\n    return this._suggestions;\n  }\n  set suggestions(val) {\n    this._suggestions = val;\n    this.handleSuggestionsChange();\n  }\n  ngAfterViewChecked() {\n    //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n    if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n      setTimeout(() => {\n        if (this.overlay) {\n          this.alignOverlay();\n        }\n      }, 1);\n      this.suggestionsUpdated = false;\n    }\n    if (this.highlightOptionChanged) {\n      setTimeout(() => {\n        if (this.overlay && this.itemsWrapper) {\n          let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n          if (listItem) {\n            DomHandler.scrollInView(this.itemsWrapper, listItem);\n          }\n        }\n      }, 1);\n      this.highlightOptionChanged = false;\n    }\n  }\n  handleSuggestionsChange() {\n    if (this._suggestions != null && this.loading) {\n      this.highlightOption = null;\n      if (this._suggestions.length) {\n        this.noResults = false;\n        this.show();\n        this.suggestionsUpdated = true;\n        if (this.autoHighlight) {\n          this.highlightOption = this._suggestions[0];\n        }\n      } else {\n        this.noResults = true;\n        if (this.showEmptyMessage) {\n          this.show();\n          this.suggestionsUpdated = true;\n        } else {\n          this.hide();\n        }\n      }\n      this.loading = false;\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n  writeValue(value) {\n    this.value = value;\n    this.filled = this.value && this.value != '';\n    this.updateInputField();\n    this.cd.markForCheck();\n  }\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  onInput(event) {\n    // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n    if (!this.inputKeyDown && DomHandler.isIE()) {\n      return;\n    }\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    let value = event.target.value;\n    this.inputValue = value;\n    if (!this.multiple && !this.forceSelection) {\n      this.onModelChange(value);\n    }\n    if (value.length === 0 && !this.multiple) {\n      this.value = null;\n      this.hide();\n      this.onClear.emit(event);\n      this.onModelChange(value);\n    }\n    if (value.length >= this.minLength) {\n      this.timeout = setTimeout(() => {\n        this.search(event, value);\n      }, this.delay);\n    } else {\n      this.hide();\n    }\n    this.updateFilledState();\n    this.inputKeyDown = false;\n  }\n  onInputClick(event) {\n    if (this.documentClickListener) {\n      this.inputClick = true;\n    }\n  }\n  search(event, query) {\n    //allow empty string but not undefined or null\n    if (query === undefined || query === null) {\n      return;\n    }\n    this.loading = true;\n    this.completeMethod.emit({\n      originalEvent: event,\n      query: query\n    });\n  }\n  selectItem(option, focus = true) {\n    if (this.forceSelectionUpdateModelTimeout) {\n      clearTimeout(this.forceSelectionUpdateModelTimeout);\n      this.forceSelectionUpdateModelTimeout = null;\n    }\n    if (this.multiple) {\n      this.multiInputEL.nativeElement.value = '';\n      this.value = this.value || [];\n      if (!this.isSelected(option) || !this.unique) {\n        this.value = [...this.value, option];\n        this.onModelChange(this.value);\n      }\n    } else {\n      this.inputEL.nativeElement.value = this.resolveFieldData(option);\n      this.value = option;\n      this.onModelChange(this.value);\n    }\n    this.onSelect.emit(option);\n    this.updateFilledState();\n    if (focus) {\n      this.itemClicked = true;\n      this.focusInput();\n    }\n  }\n  show() {\n    if (this.multiInputEL || this.inputEL) {\n      let hasFocus = this.multiple ? this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement : this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n      if (!this.overlayVisible && hasFocus) {\n        this.overlayVisible = true;\n      }\n    }\n  }\n  clear() {\n    if (this.multiple) {\n      this.value = null;\n    } else {\n      this.inputValue = null;\n      this.inputEL.nativeElement.value = '';\n    }\n    this.updateFilledState();\n    this.onModelChange(this.value);\n    this.onClear.emit();\n  }\n  onOverlayAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.p-scroller') : this.overlay;\n        this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild.nativeElement);\n        this.appendOverlay();\n        if (this.autoZIndex) {\n          ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n        }\n        this.alignOverlay();\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n        this.onShow.emit(event);\n        break;\n      case 'void':\n        this.onOverlayHide();\n        break;\n    }\n  }\n  onOverlayAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        if (this.autoZIndex) {\n          ZIndexUtils.clear(event.element);\n        }\n        break;\n    }\n  }\n  onOverlayClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.el.nativeElement\n    });\n  }\n  appendOverlay() {\n    if (this.appendTo) {\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n      if (!this.overlay.style.minWidth) {\n        this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n      }\n    }\n  }\n  resolveFieldData(value) {\n    let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n    return data !== (null || undefined) ? data : '';\n  }\n  restoreOverlayAppend() {\n    if (this.overlay && this.appendTo) {\n      this.el.nativeElement.appendChild(this.overlay);\n    }\n  }\n  alignOverlay() {\n    if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);else DomHandler.relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n  }\n  hide() {\n    this.overlayVisible = false;\n    this.cd.markForCheck();\n  }\n  handleDropdownClick(event) {\n    if (!this.overlayVisible) {\n      this.focusInput();\n      let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n      if (this.dropdownMode === 'blank') this.search(event, '');else if (this.dropdownMode === 'current') this.search(event, queryValue);\n      this.onDropdownClick.emit({\n        originalEvent: event,\n        query: queryValue\n      });\n    } else {\n      this.hide();\n    }\n  }\n  focusInput() {\n    if (this.multiple) this.multiInputEL.nativeElement.focus();else this.inputEL.nativeElement.focus();\n  }\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n  removeItem(item) {\n    let itemIndex = DomHandler.index(item);\n    let removedValue = this.value[itemIndex];\n    this.value = this.value.filter((val, i) => i != itemIndex);\n    this.onModelChange(this.value);\n    this.updateFilledState();\n    this.onUnselect.emit(removedValue);\n  }\n  onKeydown(event) {\n    if (this.overlayVisible) {\n      switch (event.which) {\n        //down\n        case 40:\n          if (this.group) {\n            let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n            if (highlightItemIndex !== -1) {\n              let nextItemIndex = highlightItemIndex.itemIndex + 1;\n              if (nextItemIndex < this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                this.highlightOptionChanged = true;\n              } else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                this.highlightOptionChanged = true;\n              }\n            } else {\n              this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n            }\n          } else {\n            let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n            if (highlightItemIndex != -1) {\n              var nextItemIndex = highlightItemIndex + 1;\n              if (nextItemIndex != this.suggestions.length) {\n                this.highlightOption = this.suggestions[nextItemIndex];\n                this.highlightOptionChanged = true;\n              }\n            } else {\n              this.highlightOption = this.suggestions[0];\n            }\n          }\n          event.preventDefault();\n          break;\n        //up\n        case 38:\n          if (this.group) {\n            let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n            if (highlightItemIndex !== -1) {\n              let prevItemIndex = highlightItemIndex.itemIndex - 1;\n              if (prevItemIndex >= 0) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                this.highlightOptionChanged = true;\n              } else if (prevItemIndex < 0) {\n                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n                if (prevGroup) {\n                  this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                  this.highlightOptionChanged = true;\n                }\n              }\n            }\n          } else {\n            let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n            if (highlightItemIndex > 0) {\n              let prevItemIndex = highlightItemIndex - 1;\n              this.highlightOption = this.suggestions[prevItemIndex];\n              this.highlightOptionChanged = true;\n            }\n          }\n          event.preventDefault();\n          break;\n        //enter\n        case 13:\n          if (this.highlightOption) {\n            this.selectItem(this.highlightOption);\n            this.hide();\n          }\n          event.preventDefault();\n          break;\n        //escape\n        case 27:\n          this.hide();\n          event.preventDefault();\n          break;\n        //tab\n        case 9:\n          if (this.highlightOption) {\n            this.selectItem(this.highlightOption);\n          }\n          this.hide();\n          break;\n      }\n    } else {\n      if (event.which === 40 && this.suggestions) {\n        this.search(event, event.target.value);\n      } else if (event.ctrlKey && event.key === 'z' && !this.multiple) {\n        this.inputEL.nativeElement.value = this.resolveFieldData(null);\n        this.value = '';\n        this.onModelChange(this.value);\n      } else if (event.ctrlKey && event.key === 'z' && this.multiple) {\n        this.value.pop();\n        this.onModelChange(this.value);\n        this.updateFilledState();\n      }\n    }\n    if (this.multiple) {\n      switch (event.which) {\n        //backspace\n        case 8:\n          if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n            this.value = [...this.value];\n            const removedValue = this.value.pop();\n            this.onModelChange(this.value);\n            this.updateFilledState();\n            this.onUnselect.emit(removedValue);\n          }\n          break;\n      }\n    }\n    this.inputKeyDown = true;\n  }\n  onKeyup(event) {\n    this.onKeyUp.emit(event);\n  }\n  onInputFocus(event) {\n    if (!this.itemClicked && this.completeOnFocus) {\n      let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n      this.search(event, queryValue);\n    }\n    this.focus = true;\n    this.onFocus.emit(event);\n    this.itemClicked = false;\n  }\n  onInputBlur(event) {\n    this.focus = false;\n    this.onModelTouched();\n    this.onBlur.emit(event);\n  }\n  onInputChange(event) {\n    if (this.forceSelection) {\n      let valid = false;\n      let inputValue = event.target.value.trim();\n      if (this.suggestions) {\n        for (let suggestion of this.suggestions) {\n          let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n          if (itemValue && inputValue === itemValue.trim()) {\n            valid = true;\n            this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n              this.selectItem(suggestion, false);\n            }, 250);\n            break;\n          }\n        }\n      }\n      if (!valid) {\n        if (this.multiple) {\n          this.multiInputEL.nativeElement.value = '';\n        } else {\n          this.value = null;\n          this.inputEL.nativeElement.value = '';\n        }\n        this.onClear.emit(event);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n      }\n    }\n  }\n  onInputPaste(event) {\n    this.onKeydown(event);\n  }\n  isSelected(val) {\n    let selected = false;\n    if (this.value && this.value.length) {\n      for (let i = 0; i < this.value.length; i++) {\n        if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n          selected = true;\n          break;\n        }\n      }\n    }\n    return selected;\n  }\n  findOptionIndex(option, suggestions) {\n    let index = -1;\n    if (suggestions) {\n      for (let i = 0; i < suggestions.length; i++) {\n        if (ObjectUtils.equals(option, suggestions[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n    return index;\n  }\n  findOptionGroupIndex(val, opts) {\n    let groupIndex, itemIndex;\n    if (opts) {\n      for (let i = 0; i < opts.length; i++) {\n        groupIndex = i;\n        itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n        if (itemIndex !== -1) {\n          break;\n        }\n      }\n    }\n    if (itemIndex !== -1) {\n      return {\n        groupIndex: groupIndex,\n        itemIndex: itemIndex\n      };\n    } else {\n      return -1;\n    }\n  }\n  updateFilledState() {\n    if (this.multiple) this.filled = this.value && this.value.length || this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '';else this.filled = this.inputFieldValue && this.inputFieldValue != '' || this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '';\n  }\n  updateInputField() {\n    let formattedValue = this.resolveFieldData(this.value);\n    this.inputFieldValue = formattedValue;\n    if (this.inputEL && this.inputEL.nativeElement) {\n      this.inputEL.nativeElement.value = formattedValue;\n    }\n    this.updateFilledState();\n  }\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentClickListener = this.renderer.listen(documentTarget, 'click', event => {\n        if (event.which === 3) {\n          return;\n        }\n        if (!this.inputClick && !this.isDropdownClick(event)) {\n          this.hide();\n        }\n        this.inputClick = false;\n        this.cd.markForCheck();\n      });\n    }\n  }\n  isDropdownClick(event) {\n    if (this.dropdown) {\n      let target = event.target;\n      return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;\n    } else {\n      return false;\n    }\n  }\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n  bindDocumentResizeListener() {\n    this.documentResizeListener = this.onWindowResize.bind(this);\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n  onWindowResize() {\n    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n      this.hide();\n    }\n  }\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.hide();\n        }\n      });\n    }\n    this.scrollHandler.bindScrollListener();\n  }\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n  onOverlayHide() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    if (this.overlay) {\n      this.overlay = null;\n      this.onHide.emit();\n    }\n  }\n  ngOnDestroy() {\n    if (this.forceSelectionUpdateModelTimeout) {\n      clearTimeout(this.forceSelectionUpdateModelTimeout);\n      this.forceSelectionUpdateModelTimeout = null;\n    }\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n    if (this.overlay) {\n      ZIndexUtils.clear(this.overlay);\n    }\n    this.restoreOverlayAppend();\n    this.onOverlayHide();\n  }\n}\nAutoComplete.ɵfac = function AutoComplete_Factory(t) {\n  return new (t || AutoComplete)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\nAutoComplete.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AutoComplete,\n  selectors: [[\"p-autoComplete\"]],\n  contentQueries: function AutoComplete_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function AutoComplete_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiInputEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiContainerEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 6,\n  hostBindings: function AutoComplete_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus && !ctx.disabled || ctx.autofocus || ctx.overlayVisible)(\"p-autocomplete-clearable\", ctx.showClear && !ctx.disabled);\n    }\n  },\n  inputs: {\n    minLength: \"minLength\",\n    delay: \"delay\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    inputStyle: \"inputStyle\",\n    inputId: \"inputId\",\n    inputStyleClass: \"inputStyleClass\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    disabled: \"disabled\",\n    scrollHeight: \"scrollHeight\",\n    lazy: \"lazy\",\n    virtualScroll: \"virtualScroll\",\n    virtualScrollItemSize: \"virtualScrollItemSize\",\n    virtualScrollOptions: \"virtualScrollOptions\",\n    maxlength: \"maxlength\",\n    name: \"name\",\n    required: \"required\",\n    size: \"size\",\n    appendTo: \"appendTo\",\n    autoHighlight: \"autoHighlight\",\n    forceSelection: \"forceSelection\",\n    type: \"type\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    ariaLabel: \"ariaLabel\",\n    dropdownAriaLabel: \"dropdownAriaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    dropdownIcon: \"dropdownIcon\",\n    unique: \"unique\",\n    group: \"group\",\n    completeOnFocus: \"completeOnFocus\",\n    showClear: \"showClear\",\n    field: \"field\",\n    dropdown: \"dropdown\",\n    showEmptyMessage: \"showEmptyMessage\",\n    dropdownMode: \"dropdownMode\",\n    multiple: \"multiple\",\n    tabindex: \"tabindex\",\n    dataKey: \"dataKey\",\n    emptyMessage: \"emptyMessage\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    autofocus: \"autofocus\",\n    autocomplete: \"autocomplete\",\n    optionGroupChildren: \"optionGroupChildren\",\n    optionGroupLabel: \"optionGroupLabel\",\n    itemSize: \"itemSize\",\n    suggestions: \"suggestions\"\n  },\n  outputs: {\n    completeMethod: \"completeMethod\",\n    onSelect: \"onSelect\",\n    onUnselect: \"onUnselect\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onDropdownClick: \"onDropdownClick\",\n    onClear: \"onClear\",\n    onKeyUp: \"onKeyUp\",\n    onShow: \"onShow\",\n    onHide: \"onHide\",\n    onLazyLoad: \"onLazyLoad\"\n  },\n  features: [i0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR])],\n  decls: 9,\n  vars: 14,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"pAutoFocus\", \"\", \"class\", \"p-autocomplete-input p-inputtext p-component\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", 3, \"autofocus\", \"ngStyle\", \"class\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-multiple-container p-component p-inputtext\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-loader pi pi-spinner pi-spin\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-autocomplete-dropdown\", \"pRipple\", \"\", 3, \"icon\", \"disabled\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"max-height\", \"ngStyle\", \"class\", \"click\", 4, \"ngIf\"], [\"pAutoFocus\", \"\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", 1, \"p-autocomplete-input\", \"p-inputtext\", \"p-component\", 3, \"autofocus\", \"ngStyle\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"in\", \"\"], [1, \"p-autocomplete-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"], [1, \"p-autocomplete-multiple-container\", \"p-component\", \"p-inputtext\", 3, \"ngClass\", \"click\"], [\"multiContainer\", \"\"], [\"class\", \"p-autocomplete-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-autocomplete-input-token\"], [\"pAutoFocus\", \"\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"autofocus\", \"disabled\", \"readonly\", \"autocomplete\", \"ngStyle\", \"input\", \"click\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"multiIn\", \"\"], [1, \"p-autocomplete-token\"], [\"token\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-autocomplete-token-label\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-autocomplete-token-label\"], [1, \"p-autocomplete-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [1, \"p-autocomplete-loader\", \"pi\", \"pi-spinner\", \"pi-spin\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-autocomplete-dropdown\", 3, \"icon\", \"disabled\", \"click\"], [\"ddBtn\", \"\"], [3, \"ngClass\", \"ngStyle\", \"click\"], [\"panel\", \"\"], [4, \"ngTemplateOutlet\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [4, \"ngIf\"], [\"buildInItems\", \"\"], [3, \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"content\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-autocomplete-items\", 3, \"ngClass\"], [\"items\", \"\"], [\"itemslist\", \"\"], [\"class\", \"p-autocomplete-empty-message\", 3, \"ngStyle\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-autocomplete-item-group\", 3, \"ngStyle\"], [\"role\", \"option\", \"class\", \"p-autocomplete-item\", \"pRipple\", \"\", 3, \"ngStyle\", \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngStyle\", \"ngClass\", \"id\", \"click\"], [1, \"p-autocomplete-empty-message\", 3, \"ngStyle\"], [4, \"ngIf\", \"ngIfElse\"], [\"empty\", \"\"]],\n  template: function AutoComplete_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0, 1);\n      i0.ɵɵtemplate(2, AutoComplete_input_2_Template, 2, 23, \"input\", 2);\n      i0.ɵɵtemplate(3, AutoComplete_i_3_Template, 1, 0, \"i\", 3);\n      i0.ɵɵtemplate(4, AutoComplete_i_4_Template, 1, 0, \"i\", 3);\n      i0.ɵɵtemplate(5, AutoComplete_ul_5_Template, 6, 23, \"ul\", 4);\n      i0.ɵɵtemplate(6, AutoComplete_i_6_Template, 1, 0, \"i\", 5);\n      i0.ɵɵtemplate(7, AutoComplete_button_7_Template, 2, 4, \"button\", 6);\n      i0.ɵɵtemplate(8, AutoComplete_div_8_Template, 8, 17, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c19, ctx.dropdown, ctx.multiple))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.multiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.multiple && ctx.filled && !ctx.disabled && ctx.showClear);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple && ctx.filled && !ctx.disabled && ctx.showClear);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dropdown);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i3.ButtonDirective, i1.PrimeTemplate, i4.Ripple, i5.Scroller, i6.AutoFocus],\n  styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoComplete, [{\n    type: Component,\n    args: [{\n      selector: 'p-autoComplete',\n      template: `\n        <span #container [ngClass]=\"{ 'p-autocomplete p-component': true, 'p-autocomplete-dd': dropdown, 'p-autocomplete-multiple': multiple }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                *ngIf=\"!multiple\"\n                #in\n                [attr.type]=\"type\"\n                [attr.id]=\"inputId\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                [autocomplete]=\"autocomplete\"\n                [attr.required]=\"required\"\n                [attr.name]=\"name\"\n                class=\"p-autocomplete-input p-inputtext p-component\"\n                [ngClass]=\"{ 'p-autocomplete-dd-input': dropdown, 'p-disabled': disabled }\"\n                [value]=\"inputFieldValue\"\n                aria-autocomplete=\"list\"\n                role=\"searchbox\"\n                (click)=\"onInputClick($event)\"\n                (input)=\"onInput($event)\"\n                (keydown)=\"onKeydown($event)\"\n                (keyup)=\"onKeyup($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (change)=\"onInputChange($event)\"\n                (paste)=\"onInputPaste($event)\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.size]=\"size\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-required]=\"required\"\n            />\n            <i *ngIf=\"!multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{ 'p-disabled': disabled, 'p-focus': focus }\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: val }\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{ resolveFieldData(val) }}</span>\n                    <span class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input\n                        pAutoFocus\n                        [autofocus]=\"autofocus\"\n                        #multiIn\n                        [attr.type]=\"type\"\n                        [attr.id]=\"inputId\"\n                        [disabled]=\"disabled\"\n                        [attr.placeholder]=\"value && value.length ? null : placeholder\"\n                        [attr.tabindex]=\"tabindex\"\n                        [attr.maxlength]=\"maxlength\"\n                        (input)=\"onInput($event)\"\n                        (click)=\"onInputClick($event)\"\n                        (keydown)=\"onKeydown($event)\"\n                        [readonly]=\"readonly\"\n                        (keyup)=\"onKeyup($event)\"\n                        (focus)=\"onInputFocus($event)\"\n                        (blur)=\"onInputBlur($event)\"\n                        (change)=\"onInputChange($event)\"\n                        (paste)=\"onInputPaste($event)\"\n                        [autocomplete]=\"autocomplete\"\n                        [ngStyle]=\"inputStyle\"\n                        [class]=\"inputStyleClass\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-labelledby]=\"ariaLabelledBy\"\n                        [attr.aria-required]=\"required\"\n                        aria-autocomplete=\"list\"\n                        [attr.aria-controls]=\"listId\"\n                        role=\"searchbox\"\n                        [attr.aria-expanded]=\"overlayVisible\"\n                        aria-haspopup=\"true\"\n                        [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n                    />\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i\n            ><button\n                #ddBtn\n                type=\"button\"\n                pButton\n                [icon]=\"dropdownIcon\"\n                [attr.aria-label]=\"dropdownAriaLabel\"\n                class=\"p-autocomplete-dropdown\"\n                [disabled]=\"disabled\"\n                pRipple\n                (click)=\"handleDropdownClick($event)\"\n                *ngIf=\"dropdown\"\n                [attr.tabindex]=\"tabindex\"\n            ></button>\n            <div\n                #panel\n                *ngIf=\"overlayVisible\"\n                (click)=\"onOverlayClick($event)\"\n                [ngClass]=\"['p-autocomplete-panel p-component']\"\n                [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\"\n                [ngStyle]=\"panelStyle\"\n                [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions } }\"\n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\"\n            >\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <p-scroller\n                    *ngIf=\"virtualScroll\"\n                    #scroller\n                    [items]=\"suggestions\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                    [autoSize]=\"true\"\n                    [lazy]=\"lazy\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                    [options]=\"virtualScrollOptions\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: suggestions, options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul #items role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                <li class=\"p-autocomplete-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items }\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-suggestionsToDisplay>\n                            <li\n                                role=\"option\"\n                                *ngFor=\"let option of suggestionsToDisplay; let idx = index\"\n                                class=\"p-autocomplete-item\"\n                                pRipple\n                                [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                [ngClass]=\"{ 'p-highlight': option === highlightOption }\"\n                                [id]=\"highlightOption == option ? 'p-highlighted-option' : ''\"\n                                (click)=\"selectItem(option)\"\n                            >\n                                <span *ngIf=\"!itemTemplate\">{{ resolveFieldData(option) }}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: scrollerOptions.getOptions ? scrollerOptions.getOptions(idx) : idx }\"></ng-container>\n                            </li>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessageLabel }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])],\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': '((focus && !disabled) || autofocus) || overlayVisible',\n        '[class.p-autocomplete-clearable]': 'showClear && !disabled'\n      },\n      providers: [AUTOCOMPLETE_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.IterableDiffers\n    }, {\n      type: i1.PrimeNGConfig\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    minLength: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollItemSize: [{\n      type: Input\n    }],\n    virtualScrollOptions: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    autoHighlight: [{\n      type: Input\n    }],\n    forceSelection: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    dropdownAriaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    unique: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    completeOnFocus: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    field: [{\n      type: Input\n    }],\n    dropdown: [{\n      type: Input\n    }],\n    showEmptyMessage: [{\n      type: Input\n    }],\n    dropdownMode: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    containerEL: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    inputEL: [{\n      type: ViewChild,\n      args: ['in']\n    }],\n    multiInputEL: [{\n      type: ViewChild,\n      args: ['multiIn']\n    }],\n    multiContainerEL: [{\n      type: ViewChild,\n      args: ['multiContainer']\n    }],\n    dropdownButton: [{\n      type: ViewChild,\n      args: ['ddBtn']\n    }],\n    itemsViewChild: [{\n      type: ViewChild,\n      args: ['items']\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: ['scroller']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    completeMethod: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onUnselect: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onDropdownClick: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    suggestions: [{\n      type: Input\n    }]\n  });\n})();\nclass AutoCompleteModule {}\nAutoCompleteModule.ɵfac = function AutoCompleteModule_Factory(t) {\n  return new (t || AutoCompleteModule)();\n};\nAutoCompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AutoCompleteModule,\n  declarations: [AutoComplete],\n  imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule],\n  exports: [AutoComplete, SharedModule, ScrollerModule, AutoFocusModule]\n});\nAutoCompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule, SharedModule, ScrollerModule, AutoFocusModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule],\n      exports: [AutoComplete, SharedModule, ScrollerModule, AutoFocusModule],\n      declarations: [AutoComplete]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };","map":{"version":3,"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ViewChild","ContentChildren","Output","NgModule","i2","CommonModule","trigger","transition","style","animate","InputTextModule","i3","ButtonModule","i4","RippleModule","i1","TranslationKeys","PrimeTemplate","SharedModule","DomHandler","ConnectedOverlayScrollHandler","UniqueComponentId","ObjectUtils","ZIndexUtils","NG_VALUE_ACCESSOR","i5","ScrollerModule","i6","AutoFocusModule","AUTOCOMPLETE_VALUE_ACCESSOR","provide","useExisting","AutoComplete","multi","constructor","el","renderer","cd","differs","config","overlayService","minLength","delay","scrollHeight","lazy","type","autoZIndex","baseZIndex","dropdownIcon","unique","completeOnFocus","showClear","dropdownMode","showTransitionOptions","hideTransitionOptions","autocomplete","completeMethod","onSelect","onUnselect","onFocus","onBlur","onDropdownClick","onClear","onKeyUp","onShow","onHide","onLazyLoad","onModelChange","onModelTouched","overlayVisible","focus","inputFieldValue","inputValue","differ","find","create","listId","itemSize","_itemSize","val","console","warn","suggestions","_suggestions","handleSuggestionsChange","ngAfterViewChecked","suggestionsUpdated","overlay","offsetParent","setTimeout","alignOverlay","highlightOptionChanged","itemsWrapper","listItem","findSingle","scrollInView","loading","highlightOption","length","noResults","show","autoHighlight","showEmptyMessage","hide","ngAfterContentInit","templates","forEach","item","getType","itemTemplate","template","groupTemplate","selectedItemTemplate","headerTemplate","emptyTemplate","footerTemplate","loaderTemplate","writeValue","value","filled","updateInputField","markForCheck","getOptionGroupChildren","optionGroup","optionGroupChildren","resolveFieldData","items","getOptionGroupLabel","optionGroupLabel","label","undefined","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","onInput","event","inputKeyDown","isIE","timeout","clearTimeout","target","multiple","forceSelection","emit","search","updateFilledState","onInputClick","documentClickListener","inputClick","query","originalEvent","selectItem","option","forceSelectionUpdateModelTimeout","multiInputEL","nativeElement","isSelected","inputEL","itemClicked","focusInput","hasFocus","ownerDocument","activeElement","clear","onOverlayAnimationStart","toState","element","virtualScroll","scroller","setContentEl","itemsViewChild","appendOverlay","set","zIndex","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","onOverlayAnimationEnd","onOverlayClick","add","appendTo","document","body","appendChild","minWidth","getWidth","children","data","field","restoreOverlayAppend","absolutePosition","multiContainerEL","relativePosition","handleDropdownClick","queryValue","emptyMessageLabel","emptyMessage","getTranslation","EMPTY_MESSAGE","removeItem","itemIndex","index","removedValue","filter","i","onKeydown","which","group","highlightItemIndex","findOptionGroupIndex","nextItemIndex","groupIndex","findOptionIndex","preventDefault","prevItemIndex","prevGroup","ctrlKey","key","pop","onKeyup","onInputFocus","onInputBlur","onInputChange","valid","trim","suggestion","itemValue","onInputPaste","selected","equals","dataKey","opts","formattedValue","documentTarget","listen","isDropdownClick","dropdown","dropdownButton","parentNode","unbindDocumentClickListener","documentResizeListener","onWindowResize","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","isTouchDevice","scrollHandler","containerEL","unbindScrollListener","ngOnDestroy","destroy","ɵfac","ElementRef","Renderer2","ChangeDetectorRef","IterableDiffers","PrimeNGConfig","OverlayService","ɵcmp","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","ButtonDirective","Ripple","Scroller","AutoFocus","opacity","transform","args","selector","animations","host","class","providers","changeDetection","OnPush","encapsulation","None","styles","panelStyle","styleClass","panelStyleClass","inputStyle","inputId","inputStyleClass","placeholder","readonly","virtualScrollItemSize","virtualScrollOptions","maxlength","name","required","size","ariaLabel","dropdownAriaLabel","ariaLabelledBy","tabindex","autofocus","AutoCompleteModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/andrea/Desktop/TESI/SIGLA/tesi/tesi-andrea-lauretta/front-end/angular/node_modules/primeng/fesm2020/primeng-autocomplete.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i4 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i5 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i6 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\n\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoComplete),\n    multi: true\n};\nclass AutoComplete {\n    constructor(el, renderer, cd, differs, config, overlayService) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.differs = differs;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.minLength = 1;\n        this.delay = 300;\n        this.scrollHeight = '200px';\n        this.lazy = false;\n        this.type = 'text';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.dropdownIcon = 'pi pi-chevron-down';\n        this.unique = true;\n        this.completeOnFocus = false;\n        this.showClear = false;\n        this.dropdownMode = 'blank';\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.autocomplete = 'off';\n        this.completeMethod = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onUnselect = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onDropdownClick = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onLazyLoad = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.overlayVisible = false;\n        this.focus = false;\n        this.inputFieldValue = null;\n        this.inputValue = null;\n        this.differ = differs.find([]).create(null);\n        this.listId = UniqueComponentId() + '_list';\n    }\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(val) {\n        this._itemSize = val;\n        console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    get suggestions() {\n        return this._suggestions;\n    }\n    set suggestions(val) {\n        this._suggestions = val;\n        this.handleSuggestionsChange();\n    }\n    ngAfterViewChecked() {\n        //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n        if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n            setTimeout(() => {\n                if (this.overlay) {\n                    this.alignOverlay();\n                }\n            }, 1);\n            this.suggestionsUpdated = false;\n        }\n        if (this.highlightOptionChanged) {\n            setTimeout(() => {\n                if (this.overlay && this.itemsWrapper) {\n                    let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n                    if (listItem) {\n                        DomHandler.scrollInView(this.itemsWrapper, listItem);\n                    }\n                }\n            }, 1);\n            this.highlightOptionChanged = false;\n        }\n    }\n    handleSuggestionsChange() {\n        if (this._suggestions != null && this.loading) {\n            this.highlightOption = null;\n            if (this._suggestions.length) {\n                this.noResults = false;\n                this.show();\n                this.suggestionsUpdated = true;\n                if (this.autoHighlight) {\n                    this.highlightOption = this._suggestions[0];\n                }\n            }\n            else {\n                this.noResults = true;\n                if (this.showEmptyMessage) {\n                    this.show();\n                    this.suggestionsUpdated = true;\n                }\n                else {\n                    this.hide();\n                }\n            }\n            this.loading = false;\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'loader':\n                    this.loaderTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        this.filled = this.value && this.value != '';\n        this.updateInputField();\n        this.cd.markForCheck();\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onInput(event) {\n        // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n        if (!this.inputKeyDown && DomHandler.isIE()) {\n            return;\n        }\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        let value = event.target.value;\n        this.inputValue = value;\n        if (!this.multiple && !this.forceSelection) {\n            this.onModelChange(value);\n        }\n        if (value.length === 0 && !this.multiple) {\n            this.value = null;\n            this.hide();\n            this.onClear.emit(event);\n            this.onModelChange(value);\n        }\n        if (value.length >= this.minLength) {\n            this.timeout = setTimeout(() => {\n                this.search(event, value);\n            }, this.delay);\n        }\n        else {\n            this.hide();\n        }\n        this.updateFilledState();\n        this.inputKeyDown = false;\n    }\n    onInputClick(event) {\n        if (this.documentClickListener) {\n            this.inputClick = true;\n        }\n    }\n    search(event, query) {\n        //allow empty string but not undefined or null\n        if (query === undefined || query === null) {\n            return;\n        }\n        this.loading = true;\n        this.completeMethod.emit({\n            originalEvent: event,\n            query: query\n        });\n    }\n    selectItem(option, focus = true) {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.multiple) {\n            this.multiInputEL.nativeElement.value = '';\n            this.value = this.value || [];\n            if (!this.isSelected(option) || !this.unique) {\n                this.value = [...this.value, option];\n                this.onModelChange(this.value);\n            }\n        }\n        else {\n            this.inputEL.nativeElement.value = this.resolveFieldData(option);\n            this.value = option;\n            this.onModelChange(this.value);\n        }\n        this.onSelect.emit(option);\n        this.updateFilledState();\n        if (focus) {\n            this.itemClicked = true;\n            this.focusInput();\n        }\n    }\n    show() {\n        if (this.multiInputEL || this.inputEL) {\n            let hasFocus = this.multiple ? this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement : this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n            if (!this.overlayVisible && hasFocus) {\n                this.overlayVisible = true;\n            }\n        }\n    }\n    clear() {\n        if (this.multiple) {\n            this.value = null;\n        }\n        else {\n            this.inputValue = null;\n            this.inputEL.nativeElement.value = '';\n        }\n        this.updateFilledState();\n        this.onModelChange(this.value);\n        this.onClear.emit();\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.p-scroller') : this.overlay;\n                this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild.nativeElement);\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                this.onShow.emit(event);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                break;\n        }\n    }\n    onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                if (this.autoZIndex) {\n                    ZIndexUtils.clear(event.element);\n                }\n                break;\n        }\n    }\n    onOverlayClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.el.nativeElement\n        });\n    }\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n            if (!this.overlay.style.minWidth) {\n                this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n            }\n        }\n    }\n    resolveFieldData(value) {\n        let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n        return data !== (null || undefined) ? data : '';\n    }\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n    }\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n    handleDropdownClick(event) {\n        if (!this.overlayVisible) {\n            this.focusInput();\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            if (this.dropdownMode === 'blank')\n                this.search(event, '');\n            else if (this.dropdownMode === 'current')\n                this.search(event, queryValue);\n            this.onDropdownClick.emit({\n                originalEvent: event,\n                query: queryValue\n            });\n        }\n        else {\n            this.hide();\n        }\n    }\n    focusInput() {\n        if (this.multiple)\n            this.multiInputEL.nativeElement.focus();\n        else\n            this.inputEL.nativeElement.focus();\n    }\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    removeItem(item) {\n        let itemIndex = DomHandler.index(item);\n        let removedValue = this.value[itemIndex];\n        this.value = this.value.filter((val, i) => i != itemIndex);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n        this.onUnselect.emit(removedValue);\n    }\n    onKeydown(event) {\n        if (this.overlayVisible) {\n            switch (event.which) {\n                //down\n                case 40:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let nextItemIndex = highlightItemIndex.itemIndex + 1;\n                            if (nextItemIndex < this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex != -1) {\n                            var nextItemIndex = highlightItemIndex + 1;\n                            if (nextItemIndex != this.suggestions.length) {\n                                this.highlightOption = this.suggestions[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.suggestions[0];\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //up\n                case 38:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let prevItemIndex = highlightItemIndex.itemIndex - 1;\n                            if (prevItemIndex >= 0) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (prevItemIndex < 0) {\n                                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n                                if (prevGroup) {\n                                    this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                                    this.highlightOptionChanged = true;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex > 0) {\n                            let prevItemIndex = highlightItemIndex - 1;\n                            this.highlightOption = this.suggestions[prevItemIndex];\n                            this.highlightOptionChanged = true;\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //enter\n                case 13:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                        this.hide();\n                    }\n                    event.preventDefault();\n                    break;\n                //escape\n                case 27:\n                    this.hide();\n                    event.preventDefault();\n                    break;\n                //tab\n                case 9:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                    }\n                    this.hide();\n                    break;\n            }\n        }\n        else {\n            if (event.which === 40 && this.suggestions) {\n                this.search(event, event.target.value);\n            }\n            else if (event.ctrlKey && event.key === 'z' && !this.multiple) {\n                this.inputEL.nativeElement.value = this.resolveFieldData(null);\n                this.value = '';\n                this.onModelChange(this.value);\n            }\n            else if (event.ctrlKey && event.key === 'z' && this.multiple) {\n                this.value.pop();\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n        if (this.multiple) {\n            switch (event.which) {\n                //backspace\n                case 8:\n                    if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n                        this.value = [...this.value];\n                        const removedValue = this.value.pop();\n                        this.onModelChange(this.value);\n                        this.updateFilledState();\n                        this.onUnselect.emit(removedValue);\n                    }\n                    break;\n            }\n        }\n        this.inputKeyDown = true;\n    }\n    onKeyup(event) {\n        this.onKeyUp.emit(event);\n    }\n    onInputFocus(event) {\n        if (!this.itemClicked && this.completeOnFocus) {\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            this.search(event, queryValue);\n        }\n        this.focus = true;\n        this.onFocus.emit(event);\n        this.itemClicked = false;\n    }\n    onInputBlur(event) {\n        this.focus = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    onInputChange(event) {\n        if (this.forceSelection) {\n            let valid = false;\n            let inputValue = event.target.value.trim();\n            if (this.suggestions) {\n                for (let suggestion of this.suggestions) {\n                    let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n                    if (itemValue && inputValue === itemValue.trim()) {\n                        valid = true;\n                        this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n                            this.selectItem(suggestion, false);\n                        }, 250);\n                        break;\n                    }\n                }\n            }\n            if (!valid) {\n                if (this.multiple) {\n                    this.multiInputEL.nativeElement.value = '';\n                }\n                else {\n                    this.value = null;\n                    this.inputEL.nativeElement.value = '';\n                }\n                this.onClear.emit(event);\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n    }\n    onInputPaste(event) {\n        this.onKeydown(event);\n    }\n    isSelected(val) {\n        let selected = false;\n        if (this.value && this.value.length) {\n            for (let i = 0; i < this.value.length; i++) {\n                if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n                    selected = true;\n                    break;\n                }\n            }\n        }\n        return selected;\n    }\n    findOptionIndex(option, suggestions) {\n        let index = -1;\n        if (suggestions) {\n            for (let i = 0; i < suggestions.length; i++) {\n                if (ObjectUtils.equals(option, suggestions[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    findOptionGroupIndex(val, opts) {\n        let groupIndex, itemIndex;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n        if (itemIndex !== -1) {\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\n        }\n        else {\n            return -1;\n        }\n    }\n    updateFilledState() {\n        if (this.multiple)\n            this.filled = (this.value && this.value.length) || (this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '');\n        else\n            this.filled = (this.inputFieldValue && this.inputFieldValue != '') || (this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '');\n    }\n    updateInputField() {\n        let formattedValue = this.resolveFieldData(this.value);\n        this.inputFieldValue = formattedValue;\n        if (this.inputEL && this.inputEL.nativeElement) {\n            this.inputEL.nativeElement.value = formattedValue;\n        }\n        this.updateFilledState();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                if (event.which === 3) {\n                    return;\n                }\n                if (!this.inputClick && !this.isDropdownClick(event)) {\n                    this.hide();\n                }\n                this.inputClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n    isDropdownClick(event) {\n        if (this.dropdown) {\n            let target = event.target;\n            return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;\n        }\n        else {\n            return false;\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n            this.hide();\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        if (this.overlay) {\n            this.overlay = null;\n            this.onHide.emit();\n        }\n    }\n    ngOnDestroy() {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\nAutoComplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: AutoComplete, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.IterableDiffers }, { token: i1.PrimeNGConfig }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nAutoComplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.3\", type: AutoComplete, selector: \"p-autoComplete\", inputs: { minLength: \"minLength\", delay: \"delay\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", inputStyle: \"inputStyle\", inputId: \"inputId\", inputStyleClass: \"inputStyleClass\", placeholder: \"placeholder\", readonly: \"readonly\", disabled: \"disabled\", scrollHeight: \"scrollHeight\", lazy: \"lazy\", virtualScroll: \"virtualScroll\", virtualScrollItemSize: \"virtualScrollItemSize\", virtualScrollOptions: \"virtualScrollOptions\", maxlength: \"maxlength\", name: \"name\", required: \"required\", size: \"size\", appendTo: \"appendTo\", autoHighlight: \"autoHighlight\", forceSelection: \"forceSelection\", type: \"type\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", ariaLabel: \"ariaLabel\", dropdownAriaLabel: \"dropdownAriaLabel\", ariaLabelledBy: \"ariaLabelledBy\", dropdownIcon: \"dropdownIcon\", unique: \"unique\", group: \"group\", completeOnFocus: \"completeOnFocus\", showClear: \"showClear\", field: \"field\", dropdown: \"dropdown\", showEmptyMessage: \"showEmptyMessage\", dropdownMode: \"dropdownMode\", multiple: \"multiple\", tabindex: \"tabindex\", dataKey: \"dataKey\", emptyMessage: \"emptyMessage\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", autofocus: \"autofocus\", autocomplete: \"autocomplete\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\", itemSize: \"itemSize\", suggestions: \"suggestions\" }, outputs: { completeMethod: \"completeMethod\", onSelect: \"onSelect\", onUnselect: \"onUnselect\", onFocus: \"onFocus\", onBlur: \"onBlur\", onDropdownClick: \"onDropdownClick\", onClear: \"onClear\", onKeyUp: \"onKeyUp\", onShow: \"onShow\", onHide: \"onHide\", onLazyLoad: \"onLazyLoad\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"((focus && !disabled) || autofocus) || overlayVisible\", \"class.p-autocomplete-clearable\": \"showClear && !disabled\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [AUTOCOMPLETE_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerEL\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"inputEL\", first: true, predicate: [\"in\"], descendants: true }, { propertyName: \"multiInputEL\", first: true, predicate: [\"multiIn\"], descendants: true }, { propertyName: \"multiContainerEL\", first: true, predicate: [\"multiContainer\"], descendants: true }, { propertyName: \"dropdownButton\", first: true, predicate: [\"ddBtn\"], descendants: true }, { propertyName: \"itemsViewChild\", first: true, predicate: [\"items\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }], ngImport: i0, template: `\n        <span #container [ngClass]=\"{ 'p-autocomplete p-component': true, 'p-autocomplete-dd': dropdown, 'p-autocomplete-multiple': multiple }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                *ngIf=\"!multiple\"\n                #in\n                [attr.type]=\"type\"\n                [attr.id]=\"inputId\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                [autocomplete]=\"autocomplete\"\n                [attr.required]=\"required\"\n                [attr.name]=\"name\"\n                class=\"p-autocomplete-input p-inputtext p-component\"\n                [ngClass]=\"{ 'p-autocomplete-dd-input': dropdown, 'p-disabled': disabled }\"\n                [value]=\"inputFieldValue\"\n                aria-autocomplete=\"list\"\n                role=\"searchbox\"\n                (click)=\"onInputClick($event)\"\n                (input)=\"onInput($event)\"\n                (keydown)=\"onKeydown($event)\"\n                (keyup)=\"onKeyup($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (change)=\"onInputChange($event)\"\n                (paste)=\"onInputPaste($event)\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.size]=\"size\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-required]=\"required\"\n            />\n            <i *ngIf=\"!multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{ 'p-disabled': disabled, 'p-focus': focus }\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: val }\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{ resolveFieldData(val) }}</span>\n                    <span class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input\n                        pAutoFocus\n                        [autofocus]=\"autofocus\"\n                        #multiIn\n                        [attr.type]=\"type\"\n                        [attr.id]=\"inputId\"\n                        [disabled]=\"disabled\"\n                        [attr.placeholder]=\"value && value.length ? null : placeholder\"\n                        [attr.tabindex]=\"tabindex\"\n                        [attr.maxlength]=\"maxlength\"\n                        (input)=\"onInput($event)\"\n                        (click)=\"onInputClick($event)\"\n                        (keydown)=\"onKeydown($event)\"\n                        [readonly]=\"readonly\"\n                        (keyup)=\"onKeyup($event)\"\n                        (focus)=\"onInputFocus($event)\"\n                        (blur)=\"onInputBlur($event)\"\n                        (change)=\"onInputChange($event)\"\n                        (paste)=\"onInputPaste($event)\"\n                        [autocomplete]=\"autocomplete\"\n                        [ngStyle]=\"inputStyle\"\n                        [class]=\"inputStyleClass\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-labelledby]=\"ariaLabelledBy\"\n                        [attr.aria-required]=\"required\"\n                        aria-autocomplete=\"list\"\n                        [attr.aria-controls]=\"listId\"\n                        role=\"searchbox\"\n                        [attr.aria-expanded]=\"overlayVisible\"\n                        aria-haspopup=\"true\"\n                        [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n                    />\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i\n            ><button\n                #ddBtn\n                type=\"button\"\n                pButton\n                [icon]=\"dropdownIcon\"\n                [attr.aria-label]=\"dropdownAriaLabel\"\n                class=\"p-autocomplete-dropdown\"\n                [disabled]=\"disabled\"\n                pRipple\n                (click)=\"handleDropdownClick($event)\"\n                *ngIf=\"dropdown\"\n                [attr.tabindex]=\"tabindex\"\n            ></button>\n            <div\n                #panel\n                *ngIf=\"overlayVisible\"\n                (click)=\"onOverlayClick($event)\"\n                [ngClass]=\"['p-autocomplete-panel p-component']\"\n                [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\"\n                [ngStyle]=\"panelStyle\"\n                [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions } }\"\n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\"\n            >\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <p-scroller\n                    *ngIf=\"virtualScroll\"\n                    #scroller\n                    [items]=\"suggestions\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                    [autoSize]=\"true\"\n                    [lazy]=\"lazy\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                    [options]=\"virtualScrollOptions\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: suggestions, options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul #items role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                <li class=\"p-autocomplete-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items }\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-suggestionsToDisplay>\n                            <li\n                                role=\"option\"\n                                *ngFor=\"let option of suggestionsToDisplay; let idx = index\"\n                                class=\"p-autocomplete-item\"\n                                pRipple\n                                [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                [ngClass]=\"{ 'p-highlight': option === highlightOption }\"\n                                [id]=\"highlightOption == option ? 'p-highlighted-option' : ''\"\n                                (click)=\"selectItem(option)\"\n                            >\n                                <span *ngIf=\"!itemTemplate\">{{ resolveFieldData(option) }}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: scrollerOptions.getOptions ? scrollerOptions.getOptions(idx) : idx }\"></ng-container>\n                            </li>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessageLabel }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `, isInline: true, styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i3.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }, { kind: \"directive\", type: i1.PrimeTemplate, selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"directive\", type: i4.Ripple, selector: \"[pRipple]\" }, { kind: \"component\", type: i5.Scroller, selector: \"p-scroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"directive\", type: i6.AutoFocus, selector: \"[pAutoFocus]\", inputs: [\"autofocus\"] }], animations: [trigger('overlayAnimation', [transition(':enter', [style({ opacity: 0, transform: 'scaleY(0.8)' }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))])])], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: AutoComplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-autoComplete', template: `\n        <span #container [ngClass]=\"{ 'p-autocomplete p-component': true, 'p-autocomplete-dd': dropdown, 'p-autocomplete-multiple': multiple }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                *ngIf=\"!multiple\"\n                #in\n                [attr.type]=\"type\"\n                [attr.id]=\"inputId\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                [autocomplete]=\"autocomplete\"\n                [attr.required]=\"required\"\n                [attr.name]=\"name\"\n                class=\"p-autocomplete-input p-inputtext p-component\"\n                [ngClass]=\"{ 'p-autocomplete-dd-input': dropdown, 'p-disabled': disabled }\"\n                [value]=\"inputFieldValue\"\n                aria-autocomplete=\"list\"\n                role=\"searchbox\"\n                (click)=\"onInputClick($event)\"\n                (input)=\"onInput($event)\"\n                (keydown)=\"onKeydown($event)\"\n                (keyup)=\"onKeyup($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (change)=\"onInputChange($event)\"\n                (paste)=\"onInputPaste($event)\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.size]=\"size\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-required]=\"required\"\n            />\n            <i *ngIf=\"!multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{ 'p-disabled': disabled, 'p-focus': focus }\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: val }\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{ resolveFieldData(val) }}</span>\n                    <span class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input\n                        pAutoFocus\n                        [autofocus]=\"autofocus\"\n                        #multiIn\n                        [attr.type]=\"type\"\n                        [attr.id]=\"inputId\"\n                        [disabled]=\"disabled\"\n                        [attr.placeholder]=\"value && value.length ? null : placeholder\"\n                        [attr.tabindex]=\"tabindex\"\n                        [attr.maxlength]=\"maxlength\"\n                        (input)=\"onInput($event)\"\n                        (click)=\"onInputClick($event)\"\n                        (keydown)=\"onKeydown($event)\"\n                        [readonly]=\"readonly\"\n                        (keyup)=\"onKeyup($event)\"\n                        (focus)=\"onInputFocus($event)\"\n                        (blur)=\"onInputBlur($event)\"\n                        (change)=\"onInputChange($event)\"\n                        (paste)=\"onInputPaste($event)\"\n                        [autocomplete]=\"autocomplete\"\n                        [ngStyle]=\"inputStyle\"\n                        [class]=\"inputStyleClass\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-labelledby]=\"ariaLabelledBy\"\n                        [attr.aria-required]=\"required\"\n                        aria-autocomplete=\"list\"\n                        [attr.aria-controls]=\"listId\"\n                        role=\"searchbox\"\n                        [attr.aria-expanded]=\"overlayVisible\"\n                        aria-haspopup=\"true\"\n                        [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n                    />\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i\n            ><button\n                #ddBtn\n                type=\"button\"\n                pButton\n                [icon]=\"dropdownIcon\"\n                [attr.aria-label]=\"dropdownAriaLabel\"\n                class=\"p-autocomplete-dropdown\"\n                [disabled]=\"disabled\"\n                pRipple\n                (click)=\"handleDropdownClick($event)\"\n                *ngIf=\"dropdown\"\n                [attr.tabindex]=\"tabindex\"\n            ></button>\n            <div\n                #panel\n                *ngIf=\"overlayVisible\"\n                (click)=\"onOverlayClick($event)\"\n                [ngClass]=\"['p-autocomplete-panel p-component']\"\n                [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\"\n                [ngStyle]=\"panelStyle\"\n                [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions } }\"\n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\"\n            >\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <p-scroller\n                    *ngIf=\"virtualScroll\"\n                    #scroller\n                    [items]=\"suggestions\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                    [autoSize]=\"true\"\n                    [lazy]=\"lazy\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                    [options]=\"virtualScrollOptions\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: suggestions, options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul #items role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                <li class=\"p-autocomplete-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items }\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-suggestionsToDisplay>\n                            <li\n                                role=\"option\"\n                                *ngFor=\"let option of suggestionsToDisplay; let idx = index\"\n                                class=\"p-autocomplete-item\"\n                                pRipple\n                                [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                [ngClass]=\"{ 'p-highlight': option === highlightOption }\"\n                                [id]=\"highlightOption == option ? 'p-highlighted-option' : ''\"\n                                (click)=\"selectItem(option)\"\n                            >\n                                <span *ngIf=\"!itemTemplate\">{{ resolveFieldData(option) }}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: scrollerOptions.getOptions ? scrollerOptions.getOptions(idx) : idx }\"></ng-container>\n                            </li>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessageLabel }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `, animations: [trigger('overlayAnimation', [transition(':enter', [style({ opacity: 0, transform: 'scaleY(0.8)' }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))])])], host: {\n                        class: 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': '((focus && !disabled) || autofocus) || overlayVisible',\n                        '[class.p-autocomplete-clearable]': 'showClear && !disabled'\n                    }, providers: [AUTOCOMPLETE_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.IterableDiffers }, { type: i1.PrimeNGConfig }, { type: i1.OverlayService }]; }, propDecorators: { minLength: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollItemSize: [{\n                type: Input\n            }], virtualScrollOptions: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], autoHighlight: [{\n                type: Input\n            }], forceSelection: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], dropdownAriaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], dropdownIcon: [{\n                type: Input\n            }], unique: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], completeOnFocus: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], field: [{\n                type: Input\n            }], dropdown: [{\n                type: Input\n            }], showEmptyMessage: [{\n                type: Input\n            }], dropdownMode: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], containerEL: [{\n                type: ViewChild,\n                args: ['container']\n            }], inputEL: [{\n                type: ViewChild,\n                args: ['in']\n            }], multiInputEL: [{\n                type: ViewChild,\n                args: ['multiIn']\n            }], multiContainerEL: [{\n                type: ViewChild,\n                args: ['multiContainer']\n            }], dropdownButton: [{\n                type: ViewChild,\n                args: ['ddBtn']\n            }], itemsViewChild: [{\n                type: ViewChild,\n                args: ['items']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], completeMethod: [{\n                type: Output\n            }], onSelect: [{\n                type: Output\n            }], onUnselect: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onDropdownClick: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], onKeyUp: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], itemSize: [{\n                type: Input\n            }], suggestions: [{\n                type: Input\n            }] } });\nclass AutoCompleteModule {\n}\nAutoCompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: AutoCompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAutoCompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: AutoCompleteModule, declarations: [AutoComplete], imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule], exports: [AutoComplete, SharedModule, ScrollerModule, AutoFocusModule] });\nAutoCompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: AutoCompleteModule, imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule, SharedModule, ScrollerModule, AutoFocusModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: AutoCompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule],\n                    exports: [AutoComplete, SharedModule, ScrollerModule, AutoFocusModule],\n                    declarations: [AutoComplete]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}