{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./app.main.component.html?ngResource\";\nimport { Component, Renderer2 } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { trigger, state, style, transition, animate } from \"@angular/animations\";\nimport { PrimeNGConfig } from \"primeng/api\";\nimport { CustomOAuthService } from \"./services/custom-oauth.service\";\nimport { environment } from \"src/environments/environment\";\nlet AppMainComponent = class AppMainComponent {\n  get footer() {\n    return `GS Starter Template v${environment.version}`;\n  }\n  constructor(renderer, router, oauthService, primengConfig) {\n    this.renderer = renderer;\n    this.router = router;\n    this.oauthService = oauthService;\n    this.primengConfig = primengConfig;\n    this.inputStyle = \"outlined\";\n    this.ripple = false;\n    this.username = \"\";\n  }\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.primengConfig.ripple = true;\n      this.username = yield this.oauthService.userName();\n    });\n  }\n  logout() {\n    this.oauthService.logout();\n  }\n  ngAfterViewInit() {\n    // hides the overlay menu and top menu if outside is clicked\n    this.documentClickListener = this.renderer.listen(\"body\", \"click\", event => {\n      if (!this.isDesktop()) {\n        if (!this.menuClick) {\n          this.menuActiveMobile = false;\n        }\n        if (!this.topMenuButtonClick) {\n          this.hideTopMenu();\n        }\n      }\n      if (this.configActive && !this.configClick) {\n        this.configActive = false;\n      }\n      this.configClick = false;\n      this.menuClick = false;\n      this.topMenuButtonClick = false;\n    });\n  }\n  toggleMenu(event) {\n    this.menuClick = true;\n    if (this.isDesktop()) {\n      this.menuInactiveDesktop = !this.menuInactiveDesktop;\n      if (this.menuInactiveDesktop) {\n        this.menuActiveMobile = false;\n      }\n    } else {\n      this.menuActiveMobile = !this.menuActiveMobile;\n      if (this.menuActiveMobile) {\n        this.menuInactiveDesktop = false;\n      }\n    }\n    if (this.topMenuActive) {\n      this.hideTopMenu();\n    }\n    event.preventDefault();\n  }\n  toggleProfile(event) {\n    this.profileActive = !this.profileActive;\n    event.preventDefault();\n  }\n  toggleTopMenu(event) {\n    this.topMenuButtonClick = true;\n    this.menuActiveMobile = false;\n    if (this.topMenuActive) {\n      this.hideTopMenu();\n    } else {\n      this.topMenuActive = true;\n    }\n    event.preventDefault();\n  }\n  hideTopMenu() {\n    this.topMenuLeaving = true;\n    setTimeout(() => {\n      this.topMenuActive = false;\n      this.topMenuLeaving = false;\n    }, 500);\n  }\n  onMenuClick() {\n    this.menuClick = true;\n  }\n  onRippleChange(event) {\n    this.ripple = event.checked;\n  }\n  onConfigClick(event) {\n    this.configClick = true;\n  }\n  isDesktop() {\n    return window.innerWidth > 1024;\n  }\n  onSearchClick() {\n    this.topMenuButtonClick = true;\n  }\n  ngOnDestroy() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n    }\n  }\n};\nAppMainComponent.ctorParameters = () => [{\n  type: Renderer2\n}, {\n  type: Router\n}, {\n  type: CustomOAuthService\n}, {\n  type: PrimeNGConfig\n}];\nAppMainComponent = __decorate([Component({\n  selector: \"app-main\",\n  template: __NG_CLI_RESOURCE__0,\n  animations: [trigger(\"submenu\", [state(\"hidden\", style({\n    height: \"0px\"\n  })), state(\"visible\", style({\n    height: \"*\"\n  })), transition(\"visible => hidden\", animate(\"400ms cubic-bezier(0.86, 0, 0.07, 1)\")), transition(\"hidden => visible\", animate(\"400ms cubic-bezier(0.86, 0, 0.07, 1)\"))])]\n})], AppMainComponent);\nexport { AppMainComponent };","map":{"version":3,"mappings":"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","names":["Component","Renderer2","Router","trigger","state","style","transition","animate","PrimeNGConfig","CustomOAuthService","environment","AppMainComponent","footer","version","constructor","renderer","router","oauthService","primengConfig","ngOnInit","ripple","username","userName","logout","ngAfterViewInit","documentClickListener","listen","event","isDesktop","menuClick","menuActiveMobile","topMenuButtonClick","hideTopMenu","configActive","configClick","toggleMenu","menuInactiveDesktop","topMenuActive","preventDefault","toggleProfile","profileActive","toggleTopMenu","topMenuLeaving","setTimeout","onMenuClick","onRippleChange","checked","onConfigClick","window","innerWidth","onSearchClick","ngOnDestroy","selector","template","animations","height"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\app.main.component.ts"],"sourcesContent":["import { Component, AfterViewInit, OnDestroy, Renderer2, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { trigger, state, style, transition, animate } from \"@angular/animations\";\r\nimport { PrimeNGConfig } from \"primeng/api\";\r\nimport { CustomOAuthService } from \"./services/custom-oauth.service\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Component({\r\n    selector: \"app-main\",\r\n    templateUrl: \"./app.main.component.html\",\r\n    animations: [\r\n        trigger(\"submenu\", [\r\n            state(\"hidden\", style({ height: \"0px\" })),\r\n            state(\"visible\", style({ height: \"*\" })),\r\n            transition(\r\n                \"visible => hidden\",\r\n                animate(\"400ms cubic-bezier(0.86, 0, 0.07, 1)\")\r\n            ),\r\n            transition(\r\n                \"hidden => visible\",\r\n                animate(\"400ms cubic-bezier(0.86, 0, 0.07, 1)\")\r\n            ),\r\n        ]),\r\n    ],\r\n})\r\nexport class AppMainComponent implements AfterViewInit, OnDestroy, OnInit {\r\n    public menuInactiveDesktop: boolean;\r\n\r\n    public menuActiveMobile: boolean;\r\n\r\n    public profileActive: boolean;\r\n\r\n    public topMenuActive: boolean;\r\n\r\n    public topMenuLeaving: boolean;\r\n\r\n    documentClickListener: () => void;\r\n\r\n    menuClick: boolean;\r\n\r\n    topMenuButtonClick: boolean;\r\n\r\n    configActive: boolean;\r\n\r\n    configClick: boolean;\r\n\r\n    inputStyle = \"outlined\";\r\n\r\n    ripple = false;\r\n\r\n    username: string = \"\";\r\n\r\n    get footer() {\r\n        return `GS Starter Template v${environment.version}`;\r\n    }\r\n\r\n    constructor(\r\n        public renderer: Renderer2,\r\n        private router: Router,\r\n        private oauthService: CustomOAuthService,\r\n        private primengConfig: PrimeNGConfig\r\n    ) {}\r\n\r\n    async ngOnInit() {\r\n        this.primengConfig.ripple = true;\r\n        this.username = await this.oauthService.userName();\r\n    }\r\n\r\n    logout() {\r\n        this.oauthService.logout();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // hides the overlay menu and top menu if outside is clicked\r\n        this.documentClickListener = this.renderer.listen(\"body\", \"click\", (event) => {\r\n            if (!this.isDesktop()) {\r\n                if (!this.menuClick) {\r\n                    this.menuActiveMobile = false;\r\n                }\r\n                if (!this.topMenuButtonClick) {\r\n                    this.hideTopMenu();\r\n                }\r\n            }\r\n            if (this.configActive && !this.configClick) {\r\n                this.configActive = false;\r\n            }\r\n            this.configClick = false;\r\n            this.menuClick = false;\r\n            this.topMenuButtonClick = false;\r\n        });\r\n    }\r\n\r\n    toggleMenu(event: Event) {\r\n        this.menuClick = true;\r\n        if (this.isDesktop()) {\r\n            this.menuInactiveDesktop = !this.menuInactiveDesktop;\r\n            if (this.menuInactiveDesktop) {\r\n                this.menuActiveMobile = false;\r\n            }\r\n        } else {\r\n            this.menuActiveMobile = !this.menuActiveMobile;\r\n            if (this.menuActiveMobile) {\r\n                this.menuInactiveDesktop = false;\r\n            }\r\n        }\r\n        if (this.topMenuActive) {\r\n            this.hideTopMenu();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleProfile(event: Event) {\r\n        this.profileActive = !this.profileActive;\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleTopMenu(event: Event) {\r\n        this.topMenuButtonClick = true;\r\n        this.menuActiveMobile = false;\r\n        if (this.topMenuActive) {\r\n            this.hideTopMenu();\r\n        } else {\r\n            this.topMenuActive = true;\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    hideTopMenu() {\r\n        this.topMenuLeaving = true;\r\n        setTimeout(() => {\r\n            this.topMenuActive = false;\r\n            this.topMenuLeaving = false;\r\n        }, 500);\r\n    }\r\n\r\n    onMenuClick() {\r\n        this.menuClick = true;\r\n    }\r\n\r\n    onRippleChange(event) {\r\n        this.ripple = event.checked;\r\n    }\r\n\r\n    onConfigClick(event) {\r\n        this.configClick = true;\r\n    }\r\n\r\n    isDesktop() {\r\n        return window.innerWidth > 1024;\r\n    }\r\n\r\n    onSearchClick() {\r\n        this.topMenuButtonClick = true;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}