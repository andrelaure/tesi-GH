{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { initialNoticeDataState, initialNoticeDataFiltersState } from \"./notice.state\";\nimport { searchNoticeDataSuccess, searchNoticeDataError, changeNoticeDataFilters } from \"./notice.actions\";\nimport { sendNoticeDataSuccess, sendNoticeDataError, deleteNoticeDataSuccess, deleteNoticeDataError } from \"./notice.actions\";\n//search filters NoticeData\nconst _noticeDataFiltersReducer = createReducer(initialNoticeDataFiltersState, on(changeNoticeDataFilters, (_, a) => Object.assign(Object.assign({}, a.queryParams), {\n  _id: a._id\n})));\nexport function noticeDataFiltersReducer(state, action) {\n  return _noticeDataFiltersReducer(state, action);\n}\nconst _noticeDataReducer = createReducer(initialNoticeDataState, on(searchNoticeDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(searchNoticeDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function noticeDataReducer(state, action) {\n  return _noticeDataReducer(state, action);\n}\n//ADD\nconst _sendNoticeDataReducer = createReducer(initialNoticeDataState, on(sendNoticeDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(sendNoticeDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function sendNoticeDataReducer(state, action) {\n  return _sendNoticeDataReducer(state, action);\n}\n//DELETE\nconst _deleteNoticeDataReducer = createReducer(initialNoticeDataState, on(deleteNoticeDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(deleteNoticeDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function deleteNoticeDataReducer(state, action) {\n  return _deleteNoticeDataReducer(state, action);\n}\n//UPDATE\nconst _updateNoticeDataReducer = createReducer(initialNoticeDataState, on(deleteNoticeDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(deleteNoticeDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function updateNoticeDataReducer(state, action) {\n  return _updateNoticeDataReducer(state, action);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAgB,aAAa;AACvD,SAAqBC,sBAAgD,EAAEC,6BAA8D,QAAQ,gBAAgB;AAE7J,SAASC,uBAAuB,EAAEC,qBAAqB,EAAEC,uBAAuB,QAAuD,kBAAkB;AACzJ,SAASC,qBAAqB,EAAEC,mBAAmB,EAAEC,uBAAuB,EAAEC,qBAAqB,QAAO,kBAAkB;AAG5H;AACA,MAAMC,yBAAyB,GAAGX,aAAa,CAC3CG,6BAA6B,EAC7BF,EAAE,CAACK,uBAAuB,EAAE,CAACM,CAAC,EAAEC,CAAC,KAAKC,gCAAKD,CAAC,CAACE,WAAW;EAAEC,GAAG,EAAEH,CAAC,CAACG;AAAG,EAAE,CAAC,CAC1E;AACD,OAAM,SAAUC,wBAAwB,CAACC,KAAgC,EAAEC,MAAc;EACrF,OAAOR,yBAAyB,CAACO,KAAK,EAAEC,MAAM,CAAC;AACnD;AAGA,MAAOC,kBAAkB,GAAGpB,aAAa,CACrCE,sBAAsB,EACtBD,EAAE,CAACG,uBAAuB,EAAE,CAACQ,CAAC,EAAEC,CAAC,KAC7BC,MAAM,CAACO,MAAM,CAAC,CAAC,IAAGR,CAAC,CAACS,MAAM,GAAGT,CAAC,CAACS,MAAM,GAAG,EAAE,EAAC,EAAE;EAAEN,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,EAChEf,EAAE,CAACI,qBAAqB,EAAE,CAACkB,EAAE,EAAEV,CAAC,KAAKC,MAAM,CAACO,MAAM,CAAC,EAAE,EAAE;EAACL,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,CACtE;AAEH,OAAM,SAAUQ,iBAAiB,CAACN,KAA4B,EAAEC,MAAc;EAC1E,OAAOC,kBAAkB,CAACF,KAAK,EAAEC,MAAM,CAAC;AAC5C;AAGA;AACA,MAAOM,sBAAsB,GAAGzB,aAAa,CACzCE,sBAAsB,EACtBD,EAAE,CAACM,qBAAqB,EAAE,CAACK,CAAC,EAAEC,CAAC,KAC3BC,MAAM,CAACO,MAAM,CAAC,CAAC,IAAGR,CAAC,CAACS,MAAM,GAAGT,CAAC,CAACS,MAAM,GAAG,EAAE,EAAC,EAAE;EAAEN,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,EAChEf,EAAE,CAACO,mBAAmB,EAAE,CAACe,EAAE,EAAEV,CAAC,KAAKC,MAAM,CAACO,MAAM,CAAC,EAAE,EAAE;EAACL,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,CACpE;AAEH,OAAM,SAAUU,qBAAqB,CAACR,KAA4B,EAAEC,MAAc;EAC9E,OAAOM,sBAAsB,CAACP,KAAK,EAAEC,MAAM,CAAC;AAChD;AAEA;AACA,MAAOQ,wBAAwB,GAAG3B,aAAa,CAC3CE,sBAAsB,EACtBD,EAAE,CAACQ,uBAAuB,EAAE,CAACG,CAAC,EAAEC,CAAC,KAC7BC,MAAM,CAACO,MAAM,CAAC,CAAC,IAAGR,CAAC,CAACS,MAAM,GAAGT,CAAC,CAACS,MAAM,GAAG,EAAE,EAAC,EAAE;EAAEN,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,EAChEf,EAAE,CAACS,qBAAqB,EAAE,CAACa,EAAE,EAAEV,CAAC,KAAKC,MAAM,CAACO,MAAM,CAAC,EAAE,EAAE;EAACL,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,CACtE;AAEH,OAAM,SAAUY,uBAAuB,CAACV,KAA4B,EAAEC,MAAc;EAChF,OAAOQ,wBAAwB,CAACT,KAAK,EAAEC,MAAM,CAAC;AAClD;AAEA;AACA,MAAOU,wBAAwB,GAAG7B,aAAa,CAC3CE,sBAAsB,EACtBD,EAAE,CAACQ,uBAAuB,EAAE,CAACG,CAAC,EAAEC,CAAC,KAC7BC,MAAM,CAACO,MAAM,CAAC,CAAC,IAAGR,CAAC,CAACS,MAAM,GAAGT,CAAC,CAACS,MAAM,GAAG,EAAE,EAAC,EAAE;EAAEN,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,EAChEf,EAAE,CAACS,qBAAqB,EAAE,CAACa,EAAE,EAAEV,CAAC,KAAKC,MAAM,CAACO,MAAM,CAAC,EAAE,EAAE;EAACL,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,CAKxE;AAED,OAAM,SAAUc,uBAAuB,CAACZ,KAA4B,EAAEC,MAAc;EAChF,OAAOU,wBAAwB,CAACX,KAAK,EAAEC,MAAM,CAAC;AAClD","names":["createReducer","on","initialNoticeDataState","initialNoticeDataFiltersState","searchNoticeDataSuccess","searchNoticeDataError","changeNoticeDataFilters","sendNoticeDataSuccess","sendNoticeDataError","deleteNoticeDataSuccess","deleteNoticeDataError","_noticeDataFiltersReducer","_","a","Object","queryParams","_id","noticeDataFiltersReducer","state","action","_noticeDataReducer","assign","result","_1","noticeDataReducer","_sendNoticeDataReducer","sendNoticeDataReducer","_deleteNoticeDataReducer","deleteNoticeDataReducer","_updateNoticeDataReducer","updateNoticeDataReducer"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\redux\\notice\\notice.reducers.ts"],"sourcesContent":["import { createReducer, on, Action } from \"@ngrx/store\";\r\nimport { NoticeData, initialNoticeDataState as initialNoticeDataState, initialNoticeDataFiltersState as initialNoticeDataFiltersState } from \"./notice.state\";\r\nimport { DynamicQueryPart, WithId } from \"../state\";\r\nimport { searchNoticeDataSuccess, searchNoticeDataError, changeNoticeDataFilters, updateNoticeDataSuccess, updateNoticeDataError} from \"./notice.actions\";\r\nimport { sendNoticeDataSuccess, sendNoticeDataError, deleteNoticeDataSuccess, deleteNoticeDataError} from \"./notice.actions\";\r\n\r\n\r\n//search filters NoticeData\r\nconst _noticeDataFiltersReducer = createReducer(\r\n    initialNoticeDataFiltersState,\r\n    on(changeNoticeDataFilters, (_, a) => ({...a.queryParams, _id: a._id}))\r\n);\r\nexport function noticeDataFiltersReducer(state: DynamicQueryPart & WithId, action: Action): DynamicQueryPart & WithId{\r\n    return _noticeDataFiltersReducer(state, action);\r\n}\r\n\r\n\r\nconst  _noticeDataReducer = createReducer(\r\n    initialNoticeDataState,\r\n    on(searchNoticeDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(searchNoticeDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n  );\r\n\r\nexport function noticeDataReducer(state: NoticeData[] & WithId, action: Action): NoticeData[] & WithId{\r\n    return _noticeDataReducer(state, action);\r\n}\r\n\r\n\r\n//ADD\r\nconst  _sendNoticeDataReducer = createReducer(\r\n    initialNoticeDataState,\r\n    on(sendNoticeDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(sendNoticeDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n  );\r\n\r\nexport function sendNoticeDataReducer(state: NoticeData[] & WithId, action: Action): NoticeData[] & WithId{\r\n    return _sendNoticeDataReducer(state, action);\r\n}\r\n\r\n//DELETE\r\nconst  _deleteNoticeDataReducer = createReducer(\r\n    initialNoticeDataState,\r\n    on(deleteNoticeDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(deleteNoticeDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n  );\r\n\r\nexport function deleteNoticeDataReducer(state: NoticeData[] & WithId, action: Action): NoticeData[] & WithId{\r\n    return _deleteNoticeDataReducer(state, action);\r\n}\r\n\r\n//UPDATE\r\nconst  _updateNoticeDataReducer = createReducer(\r\n    initialNoticeDataState,\r\n    on(deleteNoticeDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(deleteNoticeDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n    /*\r\n    on(updateNoticeDataSuccess, (state, action) => ({ ...state, _id: action._id, noticeData: action.result })),\r\n    on(updateNoticeDataError, (state, action) => ({ ...state, _id: action._id, error: action.error }))\r\n     */\r\n);\r\n\r\nexport function updateNoticeDataReducer(state: NoticeData[] & WithId, action: Action): NoticeData[] & WithId{\r\n    return _updateNoticeDataReducer(state, action);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}