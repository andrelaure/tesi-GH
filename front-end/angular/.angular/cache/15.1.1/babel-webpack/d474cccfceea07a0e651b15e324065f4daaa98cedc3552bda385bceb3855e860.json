{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { initialNoticeDataState, initialNoticeDataFiltersState } from \"./notice.state\";\nimport { searchNoticeDataSuccess, searchNoticeDataError, changeNoticeDataFilters } from \"./notice.actions\";\n//search filters NoticeData\nconst _noticeDataFiltersReducer = createReducer(initialNoticeDataFiltersState, on(changeNoticeDataFilters, (_, a) => Object.assign(Object.assign({}, a.queryParams), {\n  _id: a._id\n})));\nexport function noticeDataFiltersReducer(state, action) {\n  return _noticeDataFiltersReducer(state, action);\n}\nconst _noticeDataReducer = createReducer(initialNoticeDataState, on(searchNoticeDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(searchNoticeDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function noticeDataReducer(state, action) {\n  return _noticeDataReducer(state, action);\n}\n//add NoticeData","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAgB,aAAa;AACvD,SAAqBC,sBAAgD,EAAEC,6BAA8D,QAAQ,gBAAgB;AAE7J,SAASC,uBAAuB,EAAEC,qBAAqB,EAAEC,uBAAuB,QAAO,kBAAkB;AAIzG;AACA,MAAMC,yBAAyB,GAAGP,aAAa,CAC3CG,6BAA6B,EAC7BF,EAAE,CAACK,uBAAuB,EAAE,CAACE,CAAC,EAAEC,CAAC,KAAKC,gCAAKD,CAAC,CAACE,WAAW;EAAEC,GAAG,EAAEH,CAAC,CAACG;AAAG,EAAE,CAAC,CAC1E;AACD,OAAM,SAAUC,wBAAwB,CAACC,KAAgC,EAAEC,MAAc;EACrF,OAAOR,yBAAyB,CAACO,KAAK,EAAEC,MAAM,CAAC;AACnD;AAIA,MAAOC,kBAAkB,GAAGhB,aAAa,CACrCE,sBAAsB,EACtBD,EAAE,CAACG,uBAAuB,EAAE,CAACI,CAAC,EAAEC,CAAC,KAC7BC,MAAM,CAACO,MAAM,CAAC,CAAC,IAAGR,CAAC,CAACS,MAAM,GAAGT,CAAC,CAACS,MAAM,GAAG,EAAE,EAAC,EAAE;EAAEN,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,EAChEX,EAAE,CAACI,qBAAqB,EAAE,CAACc,EAAE,EAAEV,CAAC,KAAKC,MAAM,CAACO,MAAM,CAAC,EAAE,EAAE;EAACL,GAAG,EAAEH,CAAC,CAACG;AAAG,CAAC,CAAC,CAAC,CACtE;AAEH,OAAM,SAAUQ,iBAAiB,CAACN,KAA4B,EAAEC,MAAc;EAC1E,OAAOC,kBAAkB,CAACF,KAAK,EAAEC,MAAM,CAAC;AAC5C;AAGA","names":["createReducer","on","initialNoticeDataState","initialNoticeDataFiltersState","searchNoticeDataSuccess","searchNoticeDataError","changeNoticeDataFilters","_noticeDataFiltersReducer","_","a","Object","queryParams","_id","noticeDataFiltersReducer","state","action","_noticeDataReducer","assign","result","_1","noticeDataReducer"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\redux\\notice\\notice.reducers.ts"],"sourcesContent":["import { createReducer, on, Action } from \"@ngrx/store\";\r\nimport { NoticeData, initialNoticeDataState as initialNoticeDataState, initialNoticeDataFiltersState as initialNoticeDataFiltersState } from \"./notice.state\";\r\nimport { DynamicQueryPart, WithId } from \"../state\";\r\nimport { searchNoticeDataSuccess, searchNoticeDataError, changeNoticeDataFilters} from \"./notice.actions\";\r\nimport { addNoticeDataSuccess, addNoticeDataError} from \"./notice.actions\";\r\n\r\n\r\n//search filters NoticeData\r\nconst _noticeDataFiltersReducer = createReducer(\r\n    initialNoticeDataFiltersState,\r\n    on(changeNoticeDataFilters, (_, a) => ({...a.queryParams, _id: a._id}))\r\n);\r\nexport function noticeDataFiltersReducer(state: DynamicQueryPart & WithId, action: Action): DynamicQueryPart & WithId{\r\n    return _noticeDataFiltersReducer(state, action);\r\n}\r\n\r\n\r\n\r\nconst  _noticeDataReducer = createReducer(\r\n    initialNoticeDataState,\r\n    on(searchNoticeDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(searchNoticeDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n  );\r\n\r\nexport function noticeDataReducer(state: NoticeData[] & WithId, action: Action): NoticeData[] & WithId{\r\n    return _noticeDataReducer(state, action);\r\n}\r\n\r\n\r\n//add NoticeData\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}