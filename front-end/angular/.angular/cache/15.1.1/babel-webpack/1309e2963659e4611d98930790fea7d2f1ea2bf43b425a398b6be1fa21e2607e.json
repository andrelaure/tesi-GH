{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./noticesManagement.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./noticesManagement.component.scss?ngResource\";\nimport { Component } from \"@angular/core\";\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nlet NoticesManagementComponent = class NoticesManagementComponent {\n  constructor() {\n    this.notification = {\n      noticeId: 0,\n      noticeState: false,\n      noticeDateTime: new Date(),\n      noticeTitle: '',\n      noticeObject: '',\n      noticeDesc: '',\n      userId: null\n    };\n    this.usersId = [{\n      usersId: \"Utente 1\"\n    }, {\n      usersId: \"Utente 2\"\n    }, {\n      usersId: \"Utente 3\"\n    }, {\n      usersId: \"Utente 4\"\n    }, {\n      usersId: \"Utente 5\"\n    }, {\n      usersId: \"Utente 6\"\n    }];\n    this.selectedUsers = [];\n  }\n  addNotice(notice) {\n    if (this.selectedUsers.length > 0) {\n      const selectedUsersIds = this.selectedUsers.map(user => user.usersId);\n      const usersIdAsString = selectedUsersIds.join(', ');\n      this.notification.userId = usersIdAsString;\n    }\n    console.log(\"Notifica aggiunta:\", this.notification);\n    //NoticeDataGetListExecutor.Add()\n  }\n\n  deleteNotice(notice) {\n    //delete from db\n  }\n};\nNoticesManagementComponent = __decorate([Component({\n  selector: \"app-noticesManagement\",\n  template: __NG_CLI_RESOURCE__0,\n  imports: [InputTextModule, InputTextareaModule],\n  styles: [__NG_CLI_RESOURCE__1]\n})], NoticesManagementComponent);\nexport { NoticesManagementComponent };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,mBAAmB,QAAQ,uBAAuB;AAmBpD,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAAhCC;IAEH,iBAAY,GAAwB;MAChCC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE,IAAIC,IAAI,EAAE;MAC1BC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE;KACT;IAEH,YAAO,GAAU,CACb;MAAEC,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,CAC1B;IAED,kBAAa,GAAU,EAAE;EAoB7B;EAlBIC,SAAS,CAACC,MAAiB;IACvB,IAAI,IAAI,CAACC,aAAa,CAACC,MAAM,GAAG,CAAC,EAAC;MAC9B,MAAMC,gBAAgB,GAAa,IAAI,CAACF,aAAa,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACP,OAAO,CAAC;MACjF,MAAMQ,eAAe,GAAWH,gBAAgB,CAACI,IAAI,CAAC,IAAI,CAAC;MAC3D,IAAI,CAACC,YAAY,CAACX,MAAM,GAAGS,eAAe;;IAG9CG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACF,YAAY,CAAC;IACpD;EACJ;;EAGAG,YAAY,CAACX,MAAiB;IAC1B;EAAA;CAKP;AAzCYZ,0BAA0B,eARtCH,SAAS,CAAC;EACP2B,QAAQ,EAAE,uBAAuB;EACjCC,8BAAiD;EAEjDC,OAAO,EAAC,CAAC5B,eAAe,EAAEC,mBAAmB,CAAC;;CAEjD,CAAC,GAEWC,0BAA0B,CAyCtC;SAzCYA,0BAA0B","names":["Component","InputTextModule","InputTextareaModule","NoticesManagementComponent","constructor","noticeId","noticeState","noticeDateTime","Date","noticeTitle","noticeObject","noticeDesc","userId","usersId","addNotice","notice","selectedUsers","length","selectedUsersIds","map","user","usersIdAsString","join","notification","console","log","deleteNotice","selector","template","imports"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\components\\admin\\noticesManagement\\noticesManagement.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\n\r\nimport { AppState, DynamicQueryPart } from \"src/app/redux/state\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\n\r\nimport { NoticeData } from \"src/app/redux/notice/notice.state\";\r\nimport { selectNoticeData, selectNoticeDataFilters } from \"src/app/redux/notice/notice.selectors\";\r\nimport { changeNoticeDataFilters } from \"src/app/redux/notice/notice.actions\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n@Component({\r\n    selector: \"app-noticesManagement\",\r\n    templateUrl: \"./noticesManagement.component.html\",\r\n    styleUrls: [\"./noticesManagement.component.scss\"],\r\n    imports:[InputTextModule, InputTextareaModule],\r\n    \r\n})\r\n\r\nexport class NoticesManagementComponent  { \r\n\r\n    notification: Partial<NoticeData> = {\r\n        noticeId: 0,\r\n        noticeState: false,\r\n        noticeDateTime: new Date(),\r\n        noticeTitle: '',\r\n        noticeObject: '',\r\n        noticeDesc: '',\r\n        userId: null,\r\n      };\r\n\r\n    usersId: any[] = [  \r\n        { usersId: \"Utente 1\" },\r\n        { usersId: \"Utente 2\" },\r\n        { usersId: \"Utente 3\" },\r\n        { usersId: \"Utente 4\" },\r\n        { usersId: \"Utente 5\" },\r\n        { usersId: \"Utente 6\" },\r\n    ];\r\n\r\n    selectedUsers: any[] = [];\r\n\r\n    addNotice(notice:NoticeData){\r\n        if (this.selectedUsers.length > 0){\r\n            const selectedUsersIds: string[] = this.selectedUsers.map((user) => user.usersId);\r\n            const usersIdAsString: string = selectedUsersIds.join(', ');\r\n            this.notification.userId = usersIdAsString;\r\n        }\r\n\r\n        console.log(\"Notifica aggiunta:\", this.notification);\r\n        //NoticeDataGetListExecutor.Add()\r\n    }\r\n\r\n\r\n    deleteNotice(notice:NoticeData){\r\n        //delete from db\r\n    }\r\n\r\n\r\n      \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}