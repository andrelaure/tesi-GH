{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ChangeDetectorRef, Component, HostBinding, Input } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { filter } from 'rxjs/operators';\nimport { MenuService } from './app.menu.service';\nimport { LayoutService } from './service/app.layout.service';\nlet AppMenuitemComponent = class AppMenuitemComponent {\n  constructor(layoutService, cd, router, menuService) {\n    this.layoutService = layoutService;\n    this.cd = cd;\n    this.router = router;\n    this.menuService = menuService;\n    this.active = false;\n    this.key = \"\";\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(value => {\n      Promise.resolve(null).then(() => {\n        if (value.routeEvent) {\n          this.active = value.key === this.key || value.key.startsWith(this.key + '-') ? true : false;\n        } else {\n          if (value.key !== this.key && !value.key.startsWith(this.key + '-')) {\n            this.active = false;\n          }\n        }\n      });\n    });\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    });\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(params => {\n      if (this.item.routerLink) {\n        this.updateActiveStateFromRoute();\n      }\n    });\n  }\n  ngOnInit() {\n    this.key = this.parentKey ? this.parentKey + '-' + this.index : String(this.index);\n    if (this.item.routerLink) {\n      this.updateActiveStateFromRoute();\n    }\n  }\n  updateActiveStateFromRoute() {\n    let activeRoute = this.router.isActive(this.item.routerLink[0], {\n      paths: 'exact',\n      queryParams: 'ignored',\n      matrixParams: 'ignored',\n      fragment: 'ignored'\n    });\n    if (activeRoute) {\n      this.menuService.onMenuStateChange({\n        key: this.key,\n        routeEvent: true\n      });\n    }\n  }\n  itemClick(event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return;\n    }\n    // execute command\n    if (this.item.command) {\n      this.item.command({\n        originalEvent: event,\n        item: this.item\n      });\n    }\n    // toggle active state\n    if (this.item.items) {\n      this.active = !this.active;\n    }\n    this.menuService.onMenuStateChange({\n      key: this.key\n    });\n  }\n  get submenuAnimation() {\n    return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\n  }\n  get activeClass() {\n    return this.active && !this.root;\n  }\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n};\nAppMenuitemComponent.ctorParameters = () => [{\n  type: LayoutService\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: Router\n}, {\n  type: MenuService\n}];\nAppMenuitemComponent.propDecorators = {\n  item: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  root: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['class.layout-root-menuitem']\n  }],\n  parentKey: [{\n    type: Input\n  }],\n  activeClass: [{\n    type: HostBinding,\n    args: ['class.active-menuitem']\n  }]\n};\nAppMenuitemComponent = __decorate([Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[app-menuitem]',\n  template: `\n\t\t<ng-container>\n            <div *ngIf=\"root && item.visible !== false\" class=\"layout-menuitem-root-text\">{{item.label}}</div>\n\t\t\t<a *ngIf=\"(!item.routerLink || item.items) && item.visible !== false\" [attr.href]=\"item.url\" (click)=\"itemClick($event)\"\n\t\t\t   [ngClass]=\"item.class\" [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\n\t\t\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n\t\t\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\n\t\t\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n\t\t\t</a>\n\t\t\t<a *ngIf=\"(item.routerLink && !item.items) && item.visible !== false\" (click)=\"itemClick($event)\" [ngClass]=\"item.class\" \n\t\t\t   [routerLink]=\"item.routerLink\" routerLinkActive=\"active-route\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{ paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' }\"\n               [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" \n               [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\" [queryParams]=\"item.queryParams\"\n               [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\n\t\t\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\n\t\t\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\n\t\t\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\n\t\t\t</a>\n\n\t\t\t<ul *ngIf=\"item.items && item.visible !== false\" [@children]=\"submenuAnimation\">\n\t\t\t\t<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\n\t\t\t\t\t<li app-menuitem [item]=\"child\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child.badgeClass\"></li>\n\t\t\t\t</ng-template>\n\t\t\t</ul>\n\t\t</ng-container>\n    `,\n  animations: [trigger('children', [state('collapsed', style({\n    height: '0'\n  })), state('expanded', style({\n    height: '*'\n  })), transition('collapsed <=> expanded', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))])]\n})], AppMenuitemComponent);\nexport { AppMenuitemComponent };","map":{"version":3,"mappings":"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","names":["ChangeDetectorRef","Component","HostBinding","Input","NavigationEnd","Router","animate","state","style","transition","trigger","filter","MenuService","LayoutService","AppMenuitemComponent","constructor","layoutService","cd","router","menuService","menuSourceSubscription","menuSource$","subscribe","value","Promise","resolve","then","routeEvent","active","key","startsWith","menuResetSubscription","resetSource$","events","pipe","event","params","item","routerLink","updateActiveStateFromRoute","ngOnInit","parentKey","index","String","activeRoute","isActive","paths","queryParams","matrixParams","fragment","onMenuStateChange","itemClick","disabled","preventDefault","command","originalEvent","items","submenuAnimation","root","activeClass","ngOnDestroy","unsubscribe","type","args","selector","template","animations","height"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\TESI\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\layout\\app.menuitem.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, Host, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { MenuService } from './app.menu.service';\r\nimport { LayoutService } from './service/app.layout.service';\r\n\r\n@Component({\r\n    // eslint-disable-next-line @angular-eslint/component-selector\r\n    selector: '[app-menuitem]',\r\n    template: `\r\n\t\t<ng-container>\r\n            <div *ngIf=\"root && item.visible !== false\" class=\"layout-menuitem-root-text\">{{item.label}}</div>\r\n\t\t\t<a *ngIf=\"(!item.routerLink || item.items) && item.visible !== false\" [attr.href]=\"item.url\" (click)=\"itemClick($event)\"\r\n\t\t\t   [ngClass]=\"item.class\" [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\r\n\t\t\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\r\n\t\t\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\r\n\t\t\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\r\n\t\t\t</a>\r\n\t\t\t<a *ngIf=\"(item.routerLink && !item.items) && item.visible !== false\" (click)=\"itemClick($event)\" [ngClass]=\"item.class\" \r\n\t\t\t   [routerLink]=\"item.routerLink\" routerLinkActive=\"active-route\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{ paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' }\"\r\n               [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" \r\n               [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\" [queryParams]=\"item.queryParams\"\r\n               [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\r\n\t\t\t\t<i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\r\n\t\t\t\t<span class=\"layout-menuitem-text\">{{item.label}}</span>\r\n\t\t\t\t<i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\r\n\t\t\t</a>\r\n\r\n\t\t\t<ul *ngIf=\"item.items && item.visible !== false\" [@children]=\"submenuAnimation\">\r\n\t\t\t\t<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\r\n\t\t\t\t\t<li app-menuitem [item]=\"child\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child.badgeClass\"></li>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</ul>\r\n\t\t</ng-container>\r\n    `,\r\n    animations: [\r\n        trigger('children', [\r\n            state('collapsed', style({\r\n                height: '0'\r\n            })),\r\n            state('expanded', style({\r\n                height: '*'\r\n            })),\r\n            transition('collapsed <=> expanded', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\r\n        ])\r\n    ]\r\n})\r\nexport class AppMenuitemComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() item: any;\r\n\r\n    @Input() index!: number;\r\n\r\n    @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\r\n\r\n    @Input() parentKey!: string;\r\n\r\n    active = false;\r\n\r\n    menuSourceSubscription: Subscription;\r\n\r\n    menuResetSubscription: Subscription;\r\n\r\n    key: string = \"\";\r\n\r\n    constructor(public layoutService: LayoutService, private cd: ChangeDetectorRef, public router: Router, private menuService: MenuService) {\r\n        this.menuSourceSubscription = this.menuService.menuSource$.subscribe(value => {\r\n            Promise.resolve(null).then(() => {\r\n                if (value.routeEvent) {\r\n                    this.active = (value.key === this.key || value.key.startsWith(this.key + '-')) ? true : false;\r\n                }\r\n                else {\r\n                    if (value.key !== this.key && !value.key.startsWith(this.key + '-')) {\r\n                        this.active = false;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\r\n            this.active = false;\r\n        });\r\n\r\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd))\r\n            .subscribe(params => {\r\n                if (this.item.routerLink) {\r\n                    this.updateActiveStateFromRoute();\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.key = this.parentKey ? this.parentKey + '-' + this.index : String(this.index);\r\n\r\n        if (this.item.routerLink) {\r\n            this.updateActiveStateFromRoute();\r\n        }\r\n    }\r\n\r\n    updateActiveStateFromRoute() {\r\n        let activeRoute = this.router.isActive(this.item.routerLink[0], { paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' });\r\n\r\n        if (activeRoute) {\r\n            this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\r\n        }\r\n    }\r\n\r\n    itemClick(event: Event) {\r\n        // avoid processing disabled items\r\n        if (this.item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        // execute command\r\n        if (this.item.command) {\r\n            this.item.command({ originalEvent: event, item: this.item });\r\n        }\r\n\r\n        // toggle active state\r\n        if (this.item.items) {\r\n            this.active = !this.active;\r\n        }\r\n\r\n        this.menuService.onMenuStateChange({ key: this.key });\r\n    }\r\n\r\n    get submenuAnimation() {\r\n        return this.root ? 'expanded' : (this.active ? 'expanded' : 'collapsed');\r\n    }\r\n\r\n    @HostBinding('class.active-menuitem') \r\n    get activeClass() {\r\n        return this.active && !this.root;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.menuSourceSubscription) {\r\n            this.menuSourceSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this.menuResetSubscription) {\r\n            this.menuResetSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}