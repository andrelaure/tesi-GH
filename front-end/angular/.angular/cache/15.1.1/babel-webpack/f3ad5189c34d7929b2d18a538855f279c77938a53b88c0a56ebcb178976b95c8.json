{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./officesManagement.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./officesManagement.component.scss?ngResource\";\nimport { Component } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { of } from \"rxjs/internal/observable/of\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { selectOfficesData } from \"src/app/redux/offices/offices.selectors\";\nlet OfficesManagementComponent = class OfficesManagementComponent {\n  //successAdd: boolean = false;\n  //successUpdate: boolean = false;\n  constructor(store, router, route) {\n    this.store = store;\n    this.router = router;\n    this.route = route;\n    this.officeData$ = of([]);\n    this.editedNotice = {};\n    this.office = {\n      officesName: '',\n      officesCapacity: 1\n    };\n    this.officesType = [{\n      officesType: \"Ufficio standard\"\n    }, {\n      officesType: \"Sala riunioni\"\n    }, {\n      officesType: \"Sala ristoro\"\n    }, {\n      officesType: \"Ufficio amministrativo\"\n    }, {\n      officesType: \"Ufficio dirigenti\"\n    }];\n    this.selectedOffices = [];\n    this.showAddForm = true;\n    this.officeData$ = store.select(selectOfficesData);\n  }\n  //add officeData\n  //delete officeData\n  //update officeData\n  ngOnInit() {}\n  ngOnDestroy() {}\n};\nOfficesManagementComponent.ctorParameters = () => [{\n  type: Store\n}, {\n  type: Router\n}, {\n  type: ActivatedRoute\n}];\nOfficesManagementComponent = __decorate([Component({\n  selector: \"app-officesManagement\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], OfficesManagementComponent);\nexport { OfficesManagementComponent };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAA2B,eAAe;AAI5D,SAAiBC,KAAK,QAAQ,aAAa;AAK3C,SAASC,EAAE,QAAQ,6BAA6B;AAChD,SAASC,cAAc,EAAEC,MAAM,QAAQ,iBAAiB;AAGxD,SAASC,iBAAiB,QAAQ,yCAAyC;AAQpE,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAsBnC;EACA;EAEAC,YACYC,KAAsB,EACtBC,MAAc,EACdC,KAAqB;IAFrB,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IA1BjB,gBAAW,GAA8BR,EAAE,CAAC,EAAE,CAAC;IAExC,iBAAY,GAAyB,EAAE;IAE9C,WAAM,GAAyB;MAC3BS,WAAW,EAAG,EAAE;MAChBC,eAAe,EAAG;KACrB;IAED,gBAAW,GAAU,CACjB;MAAEC,WAAW,EAAE;IAAkB,CAAE,EACnC;MAAEA,WAAW,EAAE;IAAe,CAAE,EAChC;MAAEA,WAAW,EAAE;IAAc,CAAE,EAC/B;MAAEA,WAAW,EAAE;IAAwB,CAAE,EACzC;MAAEA,WAAW,EAAE;IAAmB,CAAE,CACvC;IAED,oBAAe,GAAU,EAAE;IAE3B,gBAAW,GAAG,IAAI;IASd,IAAI,CAACC,WAAW,GAAGN,KAAK,CAACO,MAAM,CAACV,iBAAiB,CAAC;EACtD;EAEA;EAEA;EAEA;EAGAW,QAAQ,IAER;EAEAC,WAAW,IAEX;;;;;;;;;AA9CSX,0BAA0B,eANtCN,SAAS,CAAC;EACPkB,QAAQ,EAAE,uBAAuB;EACjCC,8BAAiD;;CAEpD,CAAC,GAEWb,0BAA0B,CA+CtC;SA/CYA,0BAA0B","names":["Component","Store","of","ActivatedRoute","Router","selectOfficesData","OfficesManagementComponent","constructor","store","router","route","officesName","officesCapacity","officesType","officeData$","select","ngOnInit","ngOnDestroy","selector","template"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\components\\admin\\officesManagement\\officesManagement.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { AppState} from \"src/app/redux/state\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\n\r\nimport {OfficesData} from \"src/app/redux/offices/offices.state\";\r\n\r\nimport { environment } from \"src/environments/environment\";\r\nimport { of } from \"rxjs/internal/observable/of\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Observable} from \"rxjs\";\r\nimport { getRandomId } from \"src/app/redux/actions\";\r\nimport { selectOfficesData } from \"src/app/redux/offices/offices.selectors\";\r\n\r\n@Component({\r\n    selector: \"app-officesManagement\",\r\n    templateUrl: \"./officesManagement.component.html\",\r\n    styleUrls: [\"./officesManagement.component.scss\"],\r\n})\r\n\r\nexport class OfficesManagementComponent  implements OnInit, OnDestroy{ \r\n\r\n    officeData$: Observable<OfficesData[]> = of([]);\r\n\r\n    public editedNotice: Partial<OfficesData> = {};\r\n\r\n    office: Partial<OfficesData> = {\r\n        officesName : '',\r\n        officesCapacity : 1,\r\n    };\r\n\r\n    officesType: any[] = [  //to fill with keyclock users\r\n        { officesType: \"Ufficio standard\" },\r\n        { officesType: \"Sala riunioni\" },\r\n        { officesType: \"Sala ristoro\" },\r\n        { officesType: \"Ufficio amministrativo\" },\r\n        { officesType: \"Ufficio dirigenti\" },\r\n    ];\r\n\r\n    selectedOffices: any[] = [];\r\n\r\n    showAddForm = true;\r\n    //successAdd: boolean = false;\r\n    //successUpdate: boolean = false;\r\n\r\n    constructor(\r\n        private store: Store<AppState>,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ){\r\n        this.officeData$ = store.select(selectOfficesData);\r\n    }\r\n\r\n    //add officeData\r\n \r\n    //delete officeData\r\n\r\n    //update officeData\r\n\r\n\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}