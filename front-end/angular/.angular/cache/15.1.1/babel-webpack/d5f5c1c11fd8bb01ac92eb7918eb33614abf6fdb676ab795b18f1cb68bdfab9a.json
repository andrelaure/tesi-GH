{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { initialMessagesState } from './message.state';\nimport { showMessage, handleMessage } from './message.actions';\nconst _messagesReducer = createReducer(initialMessagesState, on(showMessage, (state, action) => Object.assign(Object.assign({}, state), {\n  current: action.message,\n  messages: [...state.messages.concat(action.message)]\n})), on(handleMessage, (state, action) => Object.assign(Object.assign({}, state), {\n  current: action.id === state.current.id ? Object.assign(Object.assign({}, state.current), {\n    hasBeenShown: true\n  }) : state.current\n})));\nexport function messagesReducer(state, action) {\n  return _messagesReducer(state, action);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAgB,aAAa;AACvD,SAASC,oBAAoB,QAAuB,iBAAiB;AACrE,SAASC,WAAW,EAAEC,aAAa,QAAQ,mBAAmB;AAE9D,MAAMC,gBAAgB,GAAGL,aAAa,CAClCE,oBAAoB,EACpBD,EAAE,CAACE,WAAW,EACV,CAACG,KAAK,EAAEC,MAAM,KAAKC,gCACZF,KAAK;EACRG,OAAO,EAAEF,MAAM,CAACG,OAAO;EACvBC,QAAQ,EAAE,CAAC,GAAGL,KAAK,CAACK,QAAQ,CAACC,MAAM,CAACL,MAAM,CAACG,OAAO,CAAC;AAAC,EACtD,CAAC,EACPT,EAAE,CAACG,aAAa,EACZ,CAACE,KAAK,EAAEC,MAAM,KAAKC,gCACZF,KAAK;EACRG,OAAO,EAAEF,MAAM,CAACM,EAAE,KAAKP,KAAK,CAACG,OAAO,CAACI,EAAE,GAAEL,gCAAKF,KAAK,CAACG,OAAO;IAAEK,YAAY,EAAE;EAAI,KAAIR,KAAK,CAACG;AAAO,EACtG,CAAC,CAAC;AAER,OAAM,SAAUM,eAAe,CAACT,KAAoB,EAAEC,MAAc;EAChE,OAAOF,gBAAgB,CAACC,KAAK,EAAEC,MAAM,CAAC;AAC1C","names":["createReducer","on","initialMessagesState","showMessage","handleMessage","_messagesReducer","state","action","Object","current","message","messages","concat","id","hasBeenShown","messagesReducer"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\redux\\message\\message.reducers.ts"],"sourcesContent":["import { createReducer, on, Action } from '@ngrx/store';\r\nimport { initialMessagesState, MessagesState } from './message.state';\r\nimport { showMessage, handleMessage } from './message.actions';\r\n\r\nconst _messagesReducer = createReducer(\r\n    initialMessagesState,\r\n    on(showMessage,\r\n        (state, action) => ({\r\n            ...state,\r\n            current: action.message,\r\n            messages: [...state.messages.concat(action.message)]\r\n        })),\r\n    on(handleMessage,\r\n        (state, action) => ({\r\n            ...state,\r\n            current: action.id === state.current.id ? {...state.current, hasBeenShown: true} : state.current\r\n    })));\r\n\r\nexport function messagesReducer(state: MessagesState, action: Action): MessagesState {\r\n    return _messagesReducer(state, action);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}