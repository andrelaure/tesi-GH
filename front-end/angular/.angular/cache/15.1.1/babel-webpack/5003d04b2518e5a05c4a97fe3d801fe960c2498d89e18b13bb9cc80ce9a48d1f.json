{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./noticesManagement.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./noticesManagement.component.scss?ngResource\";\nimport { Component } from \"@angular/core\";\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { Store } from \"@ngrx/store\";\nimport { selectNoticeData } from \"src/app/redux/notice/notice.selectors\";\nimport { sendNoticeData } from \"src/app/redux/notice/notice.actions\";\nimport { of } from \"rxjs/internal/observable/of\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { getRandomId } from \"src/app/redux/actions\";\nlet NoticesManagementComponent = class NoticesManagementComponent {\n  constructor(store, router, route) {\n    this.store = store;\n    this.router = router;\n    this.route = route;\n    this.noticeData$ = of([]);\n    this.notification = {\n      noticeState: false,\n      noticeDateTime: '01012023',\n      noticeTitle: '',\n      noticeObject: '',\n      noticeDesc: '',\n      userId: null\n    };\n    this.usersId = [{\n      usersId: \"Utente 1\"\n    }, {\n      usersId: \"Utente 2\"\n    }, {\n      usersId: \"Utente 3\"\n    }, {\n      usersId: \"Utente 4\"\n    }, {\n      usersId: \"Utente 5\"\n    }, {\n      usersId: \"Utente 6\"\n    }];\n    this.selectedUsers = [];\n    this.noticeData$ = store.select(selectNoticeData);\n  }\n  addNoticeData(notice) {\n    if (this.selectedUsers.length > 0) {\n      const selectedUsersIds = this.selectedUsers.map(user => user.usersId);\n      const usersIdAsString = selectedUsersIds.join(', ');\n      this.notification.userId = usersIdAsString;\n    }\n    //add to db\n    this.store.dispatch(sendNoticeData({\n      item: this.notification,\n      _id: getRandomId()\n    }));\n    console.log(\"Notifica aggiunta:\", this.notification);\n    this.resetFormFields();\n  }\n  resetFormFields() {\n    this.notification.noticeTitle = '';\n    this.notification.noticeObject = '';\n    this.notification.noticeDesc = '';\n    this.notification.userId = null;\n  }\n  deleteNoticeData(notice) {\n    //delete from db\n  }\n};\nNoticesManagementComponent.ctorParameters = () => [{\n  type: Store\n}, {\n  type: Router\n}, {\n  type: ActivatedRoute\n}];\nNoticesManagementComponent = __decorate([Component({\n  selector: \"app-noticesManagement\",\n  template: __NG_CLI_RESOURCE__0,\n  imports: [InputTextModule, InputTextareaModule],\n  styles: [__NG_CLI_RESOURCE__1]\n})], NoticesManagementComponent);\nexport { NoticesManagementComponent };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,mBAAmB,QAAQ,uBAAuB;AAG3D,SAAiBC,KAAK,QAAQ,aAAa;AAG3C,SAASC,gBAAgB,QAAiC,uCAAuC;AACjG,SAAkCC,cAAc,QAAQ,qCAAqC;AAE7F,SAASC,EAAE,QAAQ,6BAA6B;AAChD,SAASC,cAAc,EAAEC,MAAM,QAAQ,iBAAiB;AAExD,SAASC,WAAW,QAAQ,uBAAuB;AAW5C,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAwBnCC,YACYC,KAAsB,EACtBC,MAAc,EACdC,KAAqB;IAFrB,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IAzBjB,gBAAW,GAA6BR,EAAE,CAAC,EAAE,CAAC;IAE9C,iBAAY,GAAwB;MAChCS,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE,UAAU;MAC1BC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE;KACT;IAEH,YAAO,GAAU,CACb;MAAEC,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,CAC1B;IAED,kBAAa,GAAU,EAAE;IAOrB,IAAI,CAACC,WAAW,GAAGV,KAAK,CAACW,MAAM,CAACnB,gBAAgB,CAAC;EACrD;EAEAoB,aAAa,CAACC,MAAiB;IAC3B,IAAI,IAAI,CAACC,aAAa,CAACC,MAAM,GAAG,CAAC,EAAC;MAC9B,MAAMC,gBAAgB,GAAa,IAAI,CAACF,aAAa,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACT,OAAO,CAAC;MACjF,MAAMU,eAAe,GAAWH,gBAAgB,CAACI,IAAI,CAAC,IAAI,CAAC;MAC3D,IAAI,CAACC,YAAY,CAACb,MAAM,GAAGW,eAAe;;IAE9C;IACA,IAAI,CAACnB,KAAK,CAACsB,QAAQ,CAAC7B,cAAc,CAAC;MAAE8B,IAAI,EAAE,IAAI,CAACF,YAAY;MAAEG,GAAG,EAAE3B,WAAW;IAAE,CAAE,CAAC,CAAC;IACpF4B,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACL,YAAY,CAAC;IAEpD,IAAI,CAACM,eAAe,EAAE;EAC1B;EAGAA,eAAe;IACX,IAAI,CAACN,YAAY,CAAChB,WAAW,GAAG,EAAE;IAClC,IAAI,CAACgB,YAAY,CAACf,YAAY,GAAG,EAAE;IACnC,IAAI,CAACe,YAAY,CAACd,UAAU,GAAG,EAAE;IACjC,IAAI,CAACc,YAAY,CAACb,MAAM,GAAG,IAAI;EACnC;EAMAoB,gBAAgB,CAACf,MAAiB;IAC9B;EAAA;;;;;;;;;AA1DKf,0BAA0B,eARtCV,SAAS,CAAC;EACPyC,QAAQ,EAAE,uBAAuB;EACjCC,8BAAiD;EAEjDC,OAAO,EAAC,CAAC1C,eAAe,EAAEC,mBAAmB,CAAC;;CAEjD,CAAC,GAEWQ,0BAA0B,CA6DtC;SA7DYA,0BAA0B","names":["Component","InputTextModule","InputTextareaModule","Store","selectNoticeData","sendNoticeData","of","ActivatedRoute","Router","getRandomId","NoticesManagementComponent","constructor","store","router","route","noticeState","noticeDateTime","noticeTitle","noticeObject","noticeDesc","userId","usersId","noticeData$","select","addNoticeData","notice","selectedUsers","length","selectedUsersIds","map","user","usersIdAsString","join","notification","dispatch","item","_id","console","log","resetFormFields","deleteNoticeData","selector","template","imports"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\components\\admin\\noticesManagement\\noticesManagement.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\n\r\nimport { AppState, DynamicQueryPart } from \"src/app/redux/state\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\n\r\nimport { NoticeData } from \"src/app/redux/notice/notice.state\";\r\nimport { selectNoticeData, selectNoticeDataFilters } from \"src/app/redux/notice/notice.selectors\";\r\nimport { changeNoticeDataFilters, sendNoticeData } from \"src/app/redux/notice/notice.actions\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { of } from \"rxjs/internal/observable/of\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Observable, Subject, Subscription, startWith } from \"rxjs\";\r\nimport { getRandomId } from \"src/app/redux/actions\";\r\n\r\n\r\n@Component({\r\n    selector: \"app-noticesManagement\",\r\n    templateUrl: \"./noticesManagement.component.html\",\r\n    styleUrls: [\"./noticesManagement.component.scss\"],\r\n    imports:[InputTextModule, InputTextareaModule],\r\n    \r\n})\r\n\r\nexport class NoticesManagementComponent  { \r\n\r\n    noticeData$: Observable<NoticeData[]> = of([]);\r\n\r\n    notification: Partial<NoticeData> = {\r\n        noticeState: false,\r\n        noticeDateTime: '01012023',\r\n        noticeTitle: '',\r\n        noticeObject: '',\r\n        noticeDesc: '',\r\n        userId: null,\r\n      };\r\n\r\n    usersId: any[] = [  //to fill with keyclock users\r\n        { usersId: \"Utente 1\" },\r\n        { usersId: \"Utente 2\" },\r\n        { usersId: \"Utente 3\" },\r\n        { usersId: \"Utente 4\" },\r\n        { usersId: \"Utente 5\" },\r\n        { usersId: \"Utente 6\" },\r\n    ];\r\n\r\n    selectedUsers: any[] = [];\r\n\r\n    constructor(\r\n        private store: Store<AppState>,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ){\r\n        this.noticeData$ = store.select(selectNoticeData);\r\n    }\r\n\r\n    addNoticeData(notice:NoticeData){\r\n        if (this.selectedUsers.length > 0){\r\n            const selectedUsersIds: string[] = this.selectedUsers.map((user) => user.usersId);\r\n            const usersIdAsString: string = selectedUsersIds.join(', ');\r\n            this.notification.userId = usersIdAsString;\r\n        }\r\n        //add to db\r\n        this.store.dispatch(sendNoticeData({ item: this.notification, _id: getRandomId() }));\r\n        console.log(\"Notifica aggiunta:\", this.notification);\r\n\r\n        this.resetFormFields();\r\n    }\r\n\r\n\r\n    resetFormFields(){\r\n        this.notification.noticeTitle = '';\r\n        this.notification.noticeObject = '';\r\n        this.notification.noticeDesc = '';\r\n        this.notification.userId = null;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    deleteNoticeData(notice:NoticeData){\r\n        //delete from db\r\n    }\r\n      \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}