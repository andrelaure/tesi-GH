{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./noticesManagement.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./noticesManagement.component.scss?ngResource\";\nimport { Component } from \"@angular/core\";\nimport { of } from \"rxjs\";\nimport { NgIf } from \"@angular/common\";\nimport { FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nlet NoticesManagementComponent = class NoticesManagementComponent {\n  constructor() {\n    this.title = new FormControl('', [Validators.required]);\n    this.description = new FormControl('', [Validators.required]);\n    this.text = new FormControl('', [Validators.required]);\n    this.noticeData$ = of([]);\n  }\n  addNotice() {}\n  deleteNotice(notice) {\n    // onCascade a tutti quelli a cui è stata inviata\n  }\n  getTitleErrorMessage() {\n    if (this.title.hasError('required')) {\n      return \"Il campo 'Titolo' è obbligatorio\";\n    }\n  }\n  getDescErrorMessage() {\n    if (this.description.hasError('required')) {\n      return \"Il campo 'Oggetto' è obbligatorio\";\n    }\n  }\n  getTextErrorMessage() {\n    if (this.text.hasError('required')) {\n      return \"Il campo 'Descrizione' è obbligatorio\";\n    }\n  }\n};\nNoticesManagementComponent = __decorate([Component({\n  selector: \"app-noticesManagement\",\n  template: __NG_CLI_RESOURCE__0,\n  imports: [FormsModule, ReactiveFormsModule, NgIf],\n  styles: [__NG_CLI_RESOURCE__1]\n})], NoticesManagementComponent);\nexport { NoticesManagementComponent };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,IAAI,QAAQ,iBAAiB;AAQtC,SAAQC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAEC,mBAAmB,QAAO,gBAAgB;AAWjF,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAAhCC;IAEH,UAAK,GAAG,IAAIL,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACK,QAAQ,CAAC,CAAC;IAClD,gBAAW,GAAG,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACK,QAAQ,CAAC,CAAC;IACxD,SAAI,GAAG,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACK,QAAQ,CAAC,CAAC;IACjD,gBAAW,GAA6BR,EAAE,CAAC,EAAE,CAAC;EA6BlD;EA1BIS,SAAS,IAET;EAEAC,YAAY,CAACC,MAAiB;IAC1B;EAAA;EAIJC,oBAAoB;IAChB,IAAI,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACnC,OAAO,kCAAkC;;EAE/C;EAEAC,mBAAmB;IACf,IAAI,IAAI,CAACC,WAAW,CAACF,QAAQ,CAAC,UAAU,CAAC,EAAE;MACvC,OAAO,mCAAmC;;EAElD;EAEAG,mBAAmB;IACf,IAAI,IAAI,CAACC,IAAI,CAACJ,QAAQ,CAAC,UAAU,CAAC,EAAE;MAClC,OAAO,uCAAuC;;EAEpD;CACH;AAlCYR,0BAA0B,eARtCP,SAAS,CAAC;EACPoB,QAAQ,EAAE,uBAAuB;EACjCC,8BAAiD;EAEjDC,OAAO,EAAC,CAACjB,WAAW,EAAEC,mBAAmB,EAAEJ,IAAI,CAAC;;CAEnD,CAAC,GAEWK,0BAA0B,CAkCtC;SAlCYA,0BAA0B","names":["Component","of","NgIf","FormControl","Validators","FormsModule","ReactiveFormsModule","NoticesManagementComponent","constructor","required","addNotice","deleteNotice","notice","getTitleErrorMessage","title","hasError","getDescErrorMessage","description","getTextErrorMessage","text","selector","template","imports"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\components\\admin\\noticesManagement\\noticesManagement.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { NgIf } from \"@angular/common\";\r\n/*import {MatSelectModule} from '@angular/material/select';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatButtonModule} from '@angular/material/button';*/\r\n\r\nimport { NoticeData } from \"src/app/redux/notice/notice.state\";\r\nimport {FormControl, Validators, FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    selector: \"app-noticesManagement\",\r\n    templateUrl: \"./noticesManagement.component.html\",\r\n    styleUrls: [\"./noticesManagement.component.scss\"],\r\n    imports:[FormsModule, ReactiveFormsModule, NgIf],\r\n    //imports: [MatFormFieldModule, MatInputModule, MatSelectModule, MatDividerModule, MatButtonModule],\r\n})\r\n\r\nexport class NoticesManagementComponent  { \r\n\r\n    title = new FormControl('', [Validators.required]);\r\n    description = new FormControl('', [Validators.required]);\r\n    text = new FormControl('', [Validators.required]);\r\n    noticeData$: Observable<NoticeData[]> = of([]);\r\n\r\n\r\n    addNotice(){\r\n        \r\n    }\r\n\r\n    deleteNotice(notice:NoticeData){\r\n        // onCascade a tutti quelli a cui è stata inviata\r\n    }\r\n\r\n\r\n    getTitleErrorMessage() {\r\n        if (this.title.hasError('required')) {\r\n          return \"Il campo 'Titolo' è obbligatorio\";\r\n        }\r\n    }\r\n\r\n    getDescErrorMessage() {\r\n        if (this.description.hasError('required')) {\r\n            return \"Il campo 'Oggetto' è obbligatorio\";\r\n        }\r\n    }\r\n\r\n    getTextErrorMessage() {\r\n        if (this.text.hasError('required')) {\r\n          return \"Il campo 'Descrizione' è obbligatorio\";\r\n        }\r\n    }    \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}