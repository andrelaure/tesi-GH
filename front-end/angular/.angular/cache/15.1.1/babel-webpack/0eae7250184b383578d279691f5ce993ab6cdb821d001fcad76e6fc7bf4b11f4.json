{"ast":null,"code":"import { createAction, props } from '@ngrx/store';\n//search OfficesData in db\nexport const searchOfficesData = createAction('[API] Search Offices Data', props());\nexport const searchOfficesDataSuccess = createAction('[API] Search Offices Data Success', props());\nexport const searchOfficesDataError = createAction('[API] Search Offices Data Error', props());\nexport const changeOfficesDataFilters = createAction('[API] Change Offices Data Filters', props());\n//add OfficesData\nexport const addOfficesData = createAction('[API] Add Offices Data', props());\nexport const addOfficesDataSuccess = createAction('[API] Add Offices Data Success', props());\nexport const addOfficesDataError = createAction('[API] Add Offices Data Error', props());\n//delete OfficesData\nexport const deleteOfficesData = createAction('[API] Delete Offices Data', props());\nexport const deleteOfficesDataSuccess = createAction('[API] Delete Offices Data Success', props());\nexport const deleteOfficesDataError = createAction('[API] Delete Offices Data Error', props());\n//update OfficesData from db\nexport const updateOfficesData = createAction('[API] Update Offices Data', props());\nexport const updateOfficesDataSuccess = createAction('[API] Update Offices Data Success', props());\nexport const updateOfficesDataError = createAction('[API] Update Offices Data Error', props());\n//get OfficeData _views\nexport const getAllOfficesData = createAction('[API] Get Offices Data', props());\nexport const getAllOfficesDataSuccess = createAction('[API] Get Offices Data Success', props());\nexport const getAllOfficesDataError = createAction('[API] Get Offices Data Error', props());","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,EAAEC,KAAK,QAAO,aAAa;AAKhD;AACA,OAAO,MAAMC,iBAAiB,GAAGF,YAAY,CAAC,2BAA2B,EAAEC,KAAK,EAA4C,CAAC;AAC7H,OAAO,MAAME,wBAAwB,GAAGH,YAAY,CAAC,mCAAmC,EAAEC,KAAK,EAAoD,CAAC;AACpJ,OAAO,MAAMG,sBAAsB,GAAGJ,YAAY,CAAC,iCAAiC,EAAEC,KAAK,EAAyB,CAAC;AACrH,OAAO,MAAMI,wBAAwB,GAAGL,YAAY,CAAC,mCAAmC,EAAEC,KAAK,EAA4C,CAAC;AAE5I;AACA,OAAO,MAAMK,cAAc,GAAGN,YAAY,CAAC,wBAAwB,EAAEC,KAAK,EAAyC,CAAC;AACpH,OAAO,MAAMM,qBAAqB,GAAGP,YAAY,CAAC,gCAAgC,EAAEC,KAAK,EAAoD,CAAC;AAC9I,OAAO,MAAMO,mBAAmB,GAAGR,YAAY,CAAC,8BAA8B,EAAEC,KAAK,EAAyB,CAAC;AAE/G;AACA,OAAO,MAAMQ,iBAAiB,GAAGT,YAAY,CAAC,2BAA2B,EAAEC,KAAK,EAAyC,CAAC;AAC1H,OAAO,MAAMS,wBAAwB,GAAGV,YAAY,CAAC,mCAAmC,EAAEC,KAAK,EAAoD,CAAC;AACpJ,OAAO,MAAMU,sBAAsB,GAAGX,YAAY,CAAC,iCAAiC,EAAEC,KAAK,EAAyB,CAAC;AAErH;AACA,OAAO,MAAMW,iBAAiB,GAAGZ,YAAY,CAAC,2BAA2B,EAAEC,KAAK,EAA2C,CAAC;AAC5H,OAAO,MAAMY,wBAAwB,GAAGb,YAAY,CAAC,mCAAmC,EAAEC,KAAK,EAAoD,CAAC;AACpJ,OAAO,MAAMa,sBAAsB,GAAGd,YAAY,CAAC,iCAAiC,EAAEC,KAAK,EAAyB,CAAC;AAErH;AACA,OAAO,MAAMc,iBAAiB,GAAGf,YAAY,CAAC,wBAAwB,EAAEC,KAAK,EAAU,CAAC;AACxF,OAAO,MAAMe,wBAAwB,GAAGhB,YAAY,CAAC,gCAAgC,EAAEC,KAAK,EAAoD,CAAC;AACjJ,OAAO,MAAMgB,sBAAsB,GAAGjB,YAAY,CAAC,8BAA8B,EAAEC,KAAK,EAAyB,CAAC","names":["createAction","props","searchOfficesData","searchOfficesDataSuccess","searchOfficesDataError","changeOfficesDataFilters","addOfficesData","addOfficesDataSuccess","addOfficesDataError","deleteOfficesData","deleteOfficesDataSuccess","deleteOfficesDataError","updateOfficesData","updateOfficesDataSuccess","updateOfficesDataError","getAllOfficesData","getAllOfficesDataSuccess","getAllOfficesDataError"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\redux\\offices\\offices.actions.ts"],"sourcesContent":["import { createAction, props} from '@ngrx/store';\r\nimport {DynamicQueryPart, WithId} from '../state';\r\nimport {SuccessPayload, ErrorPayload} from '../message/message.actions';\r\nimport { OfficesData } from './offices.state';\r\n\r\n//search OfficesData in db\r\nexport const searchOfficesData = createAction('[API] Search Offices Data', props<{queryParams: DynamicQueryPart} & WithId>());\r\nexport const searchOfficesDataSuccess = createAction('[API] Search Offices Data Success', props<SuccessPayload<{result: OfficesData[]}> & WithId>());\r\nexport const searchOfficesDataError = createAction('[API] Search Offices Data Error', props<ErrorPayload & WithId>());\r\nexport const changeOfficesDataFilters = createAction('[API] Change Offices Data Filters', props<{queryParams: DynamicQueryPart} & WithId>());\r\n\r\n//add OfficesData\r\nexport const addOfficesData = createAction('[API] Add Offices Data', props<{item: Partial<OfficesData>} & WithId>());\r\nexport const addOfficesDataSuccess = createAction('[API] Add Offices Data Success', props<SuccessPayload<{result: OfficesData[]}> & WithId>());\r\nexport const addOfficesDataError = createAction('[API] Add Offices Data Error', props<ErrorPayload & WithId>());\r\n\r\n//delete OfficesData\r\nexport const deleteOfficesData = createAction('[API] Delete Offices Data', props<{item: Partial<OfficesData>} & WithId>());\r\nexport const deleteOfficesDataSuccess = createAction('[API] Delete Offices Data Success', props<SuccessPayload<{result: OfficesData[]}> & WithId>());\r\nexport const deleteOfficesDataError = createAction('[API] Delete Offices Data Error', props<ErrorPayload & WithId>());\r\n\r\n//update OfficesData from db\r\nexport const updateOfficesData = createAction('[API] Update Offices Data', props<{ item: Partial<OfficesData> } & WithId>());\r\nexport const updateOfficesDataSuccess = createAction('[API] Update Offices Data Success', props<SuccessPayload<{result: OfficesData[]}> & WithId>());\r\nexport const updateOfficesDataError = createAction('[API] Update Offices Data Error', props<ErrorPayload & WithId>());\r\n\r\n//get OfficeData _views\r\nexport const getAllOfficesData = createAction('[API] Get Offices Data', props<WithId>());\r\nexport const getAllOfficesDataSuccess = createAction('[API] Get Offices Data Success', props<SuccessPayload<{result: OfficesData[]}> & WithId>());\r\nexport const getAllOfficesDataError = createAction('[API] Get Offices Data Error', props<ErrorPayload & WithId>());\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}