{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/andrea/Desktop/SIGLA/tesi/tesi-andrea-lauretta/front-end/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, NgModule, InjectionToken } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Subject, of, from, race, throwError, combineLatest, merge } from 'rxjs';\nimport { filter, tap, debounceTime, delay, switchMap, map, first, catchError, timeout, take, mergeMap } from 'rxjs/operators';\nimport fsha256 from 'fast-sha256';\nclass DateTimeProvider {}\nclass SystemDateTimeProvider extends DateTimeProvider {\n  now() {\n    return Date.now();\n  }\n  new() {\n    return new Date();\n  }\n}\nSystemDateTimeProvider.ɵfac = /* @__PURE__ */function () {\n  let ɵSystemDateTimeProvider_BaseFactory;\n  return function SystemDateTimeProvider_Factory(t) {\n    return (ɵSystemDateTimeProvider_BaseFactory || (ɵSystemDateTimeProvider_BaseFactory = i0.ɵɵgetInheritedFactory(SystemDateTimeProvider)))(t || SystemDateTimeProvider);\n  };\n}();\nSystemDateTimeProvider.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SystemDateTimeProvider,\n  factory: SystemDateTimeProvider.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SystemDateTimeProvider, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\nclass LoginOptions {\n  constructor() {\n    /**\r\n     * Set this to true to disable the nonce\r\n     * check which is used to avoid\r\n     * replay attacks.\r\n     * This flag should never be true in\r\n     * production environments.\r\n     */\n    this.disableNonceCheck = false;\n    /**\r\n     * Normally, you want to clear your hash fragment after\r\n     * the lib read the token(s) so that they are not displayed\r\n     * anymore in the url. If not, set this to true. For code flow\r\n     * this controls removing query string values.\r\n     */\n    this.preventClearHashAfterLogin = false;\n  }\n}\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\nclass OAuthLogger {}\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\nclass OAuthStorage {}\nclass MemoryStorage {\n  constructor() {\n    this.data = new Map();\n  }\n  getItem(key) {\n    return this.data.get(key);\n  }\n  removeItem(key) {\n    this.data.delete(key);\n  }\n  setItem(key, data) {\n    this.data.set(key, data);\n  }\n}\nMemoryStorage.ɵfac = function MemoryStorage_Factory(t) {\n  return new (t || MemoryStorage)();\n};\nMemoryStorage.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MemoryStorage,\n  factory: MemoryStorage.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MemoryStorage, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\nclass ReceivedTokens {}\nclass OAuthEvent {\n  constructor(type) {\n    this.type = type;\n  }\n}\nclass OAuthSuccessEvent extends OAuthEvent {\n  constructor(type, info = null) {\n    super(type);\n    this.info = info;\n  }\n}\nclass OAuthInfoEvent extends OAuthEvent {\n  constructor(type, info = null) {\n    super(type);\n    this.info = info;\n  }\n}\nclass OAuthErrorEvent extends OAuthEvent {\n  constructor(type, reason, params = null) {\n    super(type);\n    this.reason = reason;\n    this.params = params;\n  }\n}\n\n// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\nfunction b64DecodeUnicode(str) {\n  const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\n  return decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n}\nfunction base64UrlEncode(str) {\n  const base64 = btoa(str);\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\nclass AuthConfig {\n  constructor(json) {\n    /**\r\n     * The client's id as registered with the auth server\r\n     */\n    this.clientId = '';\n    /**\r\n     * The client's redirectUri as registered with the auth server\r\n     */\n    this.redirectUri = '';\n    /**\r\n     * An optional second redirectUri where the auth server\r\n     * redirects the user to after logging out.\r\n     */\n    this.postLogoutRedirectUri = '';\n    /**\r\n     * Defines whether to use 'redirectUri' as a replacement\r\n     * of 'postLogoutRedirectUri' if the latter is not set.\r\n     */\n    this.redirectUriAsPostLogoutRedirectUriFallback = true;\n    /**\r\n     * The auth server's endpoint that allows to log\r\n     * the user in when using implicit flow.\r\n     */\n    this.loginUrl = '';\n    /**\r\n     * The requested scopes\r\n     */\n    this.scope = 'openid profile';\n    this.resource = '';\n    this.rngUrl = '';\n    /**\r\n     * Defines whether to use OpenId Connect during\r\n     * implicit flow.\r\n     */\n    this.oidc = true;\n    /**\r\n     * Defines whether to request an access token during\r\n     * implicit flow.\r\n     */\n    this.requestAccessToken = true;\n    this.options = null;\n    /**\r\n     * The issuer's uri.\r\n     */\n    this.issuer = '';\n    /**\r\n     * The logout url.\r\n     */\n    this.logoutUrl = '';\n    /**\r\n     * Defines whether to clear the hash fragment after logging in.\r\n     */\n    this.clearHashAfterLogin = true;\n    /**\r\n     * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n     */\n    this.tokenEndpoint = null;\n    /**\r\n     * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\r\n     */\n    this.revocationEndpoint = null;\n    /**\r\n     * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\r\n     */\n    this.customTokenParameters = [];\n    /**\r\n     * Url of the userinfo endpoint as defined by OpenId Connect.\r\n     */\n    this.userinfoEndpoint = null;\n    this.responseType = '';\n    /**\r\n     * Defines whether additional debug information should\r\n     * be shown at the console. Note that in certain browsers\r\n     * the verbosity of the console needs to be explicitly set\r\n     * to include Debug level messages.\r\n     */\n    this.showDebugInformation = false;\n    /**\r\n     * The redirect uri used when doing silent refresh.\r\n     */\n    this.silentRefreshRedirectUri = '';\n    this.silentRefreshMessagePrefix = '';\n    /**\r\n     * Set this to true to display the iframe used for\r\n     * silent refresh for debugging.\r\n     */\n    this.silentRefreshShowIFrame = false;\n    /**\r\n     * Timeout for silent refresh.\r\n     * @internal\r\n     * depreacted b/c of typo, see silentRefreshTimeout\r\n     */\n    this.siletRefreshTimeout = 1000 * 20;\n    /**\r\n     * Timeout for silent refresh.\r\n     */\n    this.silentRefreshTimeout = 1000 * 20;\n    /**\r\n     * Some auth servers don't allow using password flow\r\n     * w/o a client secret while the standards do not\r\n     * demand for it. In this case, you can set a password\r\n     * here. As this password is exposed to the public\r\n     * it does not bring additional security and is therefore\r\n     * as good as using no password.\r\n     */\n    this.dummyClientSecret = null;\n    /**\r\n     * Defines whether https is required.\r\n     * The default value is remoteOnly which only allows\r\n     * http for localhost, while every other domains need\r\n     * to be used with https.\r\n     */\n    this.requireHttps = 'remoteOnly';\n    /**\r\n     * Defines whether every url provided by the discovery\r\n     * document has to start with the issuer's url.\r\n     */\n    this.strictDiscoveryDocumentValidation = true;\n    /**\r\n     * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n     * with keys used to validate received id_tokens.\r\n     * This is taken out of the disovery document. Can be set manually too.\r\n     */\n    this.jwks = null;\n    /**\r\n     * Map with additional query parameter that are appended to\r\n     * the request when initializing implicit flow.\r\n     */\n    this.customQueryParams = null;\n    this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';\n    /**\r\n     * Defines when the token_timeout event should be raised.\r\n     * If you set this to the default value 0.75, the event\r\n     * is triggered after 75% of the token's life time.\r\n     */\n    this.timeoutFactor = 0.75;\n    /**\r\n     * If true, the lib will try to check whether the user\r\n     * is still logged in on a regular basis as described\r\n     * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n     */\n    this.sessionChecksEnabled = false;\n    /**\r\n     * Interval in msec for checking the session\r\n     * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n     */\n    this.sessionCheckIntervall = 3 * 1000;\n    /**\r\n     * Url for the iframe used for session checks\r\n     */\n    this.sessionCheckIFrameUrl = null;\n    /**\r\n     * Name of the iframe to use for session checks\r\n     */\n    this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';\n    /**\r\n     * This property has been introduced to disable at_hash checks\r\n     * and is indented for Identity Provider that does not deliver\r\n     * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n     * Of course, when disabling these checks then we are bypassing\r\n     * a security check which means we are more vulnerable.\r\n     */\n    this.disableAtHashCheck = false;\n    /**\r\n     * Defines wether to check the subject of a refreshed token after silent refresh.\r\n     * Normally, it should be the same as before.\r\n     */\n    this.skipSubjectCheck = false;\n    this.useIdTokenHintForSilentRefresh = false;\n    /**\r\n     * Defined whether to skip the validation of the issuer in the discovery document.\r\n     * Normally, the discovey document's url starts with the url of the issuer.\r\n     */\n    this.skipIssuerCheck = false;\n    /**\r\n     * final state sent to issuer is built as follows:\r\n     * state = nonce + nonceStateSeparator + additional state\r\n     * Default separator is ';' (encoded %3B).\r\n     * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n     */\n    this.nonceStateSeparator = ';';\n    /**\r\n     * Set this to true to use HTTP BASIC auth for AJAX calls\r\n     */\n    this.useHttpBasicAuth = false;\n    /**\r\n     * The interceptors waits this time span if there is no token\r\n     */\n    this.waitForTokenInMsec = 0;\n    /**\r\n     * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n     * You can disbale it here by setting this flag to true.\r\n     * https://tools.ietf.org/html/rfc7636#section-1.1\r\n     */\n    this.disablePKCE = false;\n    /**\r\n     * Set this to true to preserve the requested route including query parameters after code flow login.\r\n     * This setting enables deep linking for the code flow.\r\n     */\n    this.preserveRequestedRoute = false;\n    /**\r\n     * This property allows you to override the method that is used to open the login url,\r\n     * allowing a way for implementations to specify their own method of routing to new\r\n     * urls.\r\n     */\n    this.openUri = uri => {\n      location.href = uri;\n    };\n    if (json) {\n      Object.assign(this, json);\n    }\n  }\n}\n\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\nclass WebHttpUrlEncodingCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n}\n\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\nclass ValidationHandler {}\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\nclass AbstractValidationHandler {\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\n  validateAtHash(params) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let hashAlg = _this.inferHashAlgorithm(params.idTokenHeader);\n      let tokenHash = yield _this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n      let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n      let atHash = base64UrlEncode(leftMostHalf);\n      let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n      if (atHash !== claimsAtHash) {\n        console.error('exptected at_hash: ' + atHash);\n        console.error('actual at_hash: ' + claimsAtHash);\n      }\n      return atHash === claimsAtHash;\n    })();\n  }\n  /**\r\n   * Infers the name of the hash algorithm to use\r\n   * from the alg field of an id_token.\r\n   *\r\n   * @param jwtHeader the id_token's parsed header\r\n   */\n  inferHashAlgorithm(jwtHeader) {\n    let alg = jwtHeader['alg'];\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n    return 'sha-' + alg.substr(2);\n  }\n}\nclass UrlHelperService {\n  getHashFragmentParams(customHashFragment) {\n    let hash = customHashFragment || window.location.hash;\n    hash = decodeURIComponent(hash);\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n    const questionMarkPosition = hash.indexOf('?');\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n    return this.parseQueryString(hash);\n  }\n  parseQueryString(queryString) {\n    const data = {};\n    let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\n    if (queryString === null) {\n      return data;\n    }\n    pairs = queryString.split('&');\n    for (let i = 0; i < pairs.length; i++) {\n      pair = pairs[i];\n      separatorIndex = pair.indexOf('=');\n      if (separatorIndex === -1) {\n        escapedKey = pair;\n        escapedValue = null;\n      } else {\n        escapedKey = pair.substr(0, separatorIndex);\n        escapedValue = pair.substr(separatorIndex + 1);\n      }\n      key = decodeURIComponent(escapedKey);\n      value = decodeURIComponent(escapedValue);\n      if (key.substr(0, 1) === '/') {\n        key = key.substr(1);\n      }\n      data[key] = value;\n    }\n    return data;\n  }\n}\nUrlHelperService.ɵfac = function UrlHelperService_Factory(t) {\n  return new (t || UrlHelperService)();\n};\nUrlHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UrlHelperService,\n  factory: UrlHelperService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UrlHelperService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\r\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\r\n *\r\n * @version 0.9.0\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2014-2017\r\n * @license MIT\r\n */\n/*jslint bitwise: true */\nfunction factory() {\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  const HEX_CHARS = '0123456789abcdef'.split('');\n  const EXTRA = [-2147483648, 8388608, 32768, 128];\n  const SHIFT = [24, 16, 8, 0];\n  const K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  const OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n  var blocks = [];\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) || message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else {\n      // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString,\n      type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code,\n      index = 0,\n      i,\n      length = message.length,\n      blocks = this.blocks;\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks,\n      i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n  Sha256.prototype.hash = function () {\n    var a = this.h0,\n      b = this.h1,\n      c = this.h2,\n      d = this.h3,\n      e = this.h4,\n      f = this.h5,\n      g = this.h6,\n      h = this.h7,\n      blocks = this.blocks,\n      j,\n      s0,\n      s1,\n      maj,\n      t1,\n      t2,\n      ch,\n      ab,\n      da,\n      cd,\n      bc;\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = (t1 >>> 7 | t1 << 25) ^ (t1 >>> 18 | t1 << 14) ^ t1 >>> 3;\n      t1 = blocks[j - 2];\n      s1 = (t1 >>> 17 | t1 << 15) ^ (t1 >>> 19 | t1 << 13) ^ t1 >>> 10;\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);\n        s1 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);\n        ab = a & b;\n        maj = ab ^ a & c ^ bc;\n        ch = e & f ^ ~e & g;\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10);\n      s1 = (h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7);\n      da = d & a;\n      maj = da ^ d & b ^ ab;\n      ch = h & e ^ ~h & f;\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10);\n      s1 = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7);\n      cd = c & d;\n      maj = cd ^ c & a ^ da;\n      ch = g & h ^ ~g & e;\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = (b >>> 2 | b << 30) ^ (b >>> 13 | b << 19) ^ (b >>> 22 | b << 10);\n      s1 = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7);\n      bc = b & c;\n      maj = bc ^ b & d ^ cd;\n      ch = f & g ^ ~f & h;\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n  Sha256.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0,\n      h1 = this.h1,\n      h2 = this.h2,\n      h3 = this.h3,\n      h4 = this.h4,\n      h5 = this.h5,\n      h6 = this.h6,\n      h7 = this.h7;\n    var hex = HEX_CHARS[h0 >> 28 & 0x0F] + HEX_CHARS[h0 >> 24 & 0x0F] + HEX_CHARS[h0 >> 20 & 0x0F] + HEX_CHARS[h0 >> 16 & 0x0F] + HEX_CHARS[h0 >> 12 & 0x0F] + HEX_CHARS[h0 >> 8 & 0x0F] + HEX_CHARS[h0 >> 4 & 0x0F] + HEX_CHARS[h0 & 0x0F] + HEX_CHARS[h1 >> 28 & 0x0F] + HEX_CHARS[h1 >> 24 & 0x0F] + HEX_CHARS[h1 >> 20 & 0x0F] + HEX_CHARS[h1 >> 16 & 0x0F] + HEX_CHARS[h1 >> 12 & 0x0F] + HEX_CHARS[h1 >> 8 & 0x0F] + HEX_CHARS[h1 >> 4 & 0x0F] + HEX_CHARS[h1 & 0x0F] + HEX_CHARS[h2 >> 28 & 0x0F] + HEX_CHARS[h2 >> 24 & 0x0F] + HEX_CHARS[h2 >> 20 & 0x0F] + HEX_CHARS[h2 >> 16 & 0x0F] + HEX_CHARS[h2 >> 12 & 0x0F] + HEX_CHARS[h2 >> 8 & 0x0F] + HEX_CHARS[h2 >> 4 & 0x0F] + HEX_CHARS[h2 & 0x0F] + HEX_CHARS[h3 >> 28 & 0x0F] + HEX_CHARS[h3 >> 24 & 0x0F] + HEX_CHARS[h3 >> 20 & 0x0F] + HEX_CHARS[h3 >> 16 & 0x0F] + HEX_CHARS[h3 >> 12 & 0x0F] + HEX_CHARS[h3 >> 8 & 0x0F] + HEX_CHARS[h3 >> 4 & 0x0F] + HEX_CHARS[h3 & 0x0F] + HEX_CHARS[h4 >> 28 & 0x0F] + HEX_CHARS[h4 >> 24 & 0x0F] + HEX_CHARS[h4 >> 20 & 0x0F] + HEX_CHARS[h4 >> 16 & 0x0F] + HEX_CHARS[h4 >> 12 & 0x0F] + HEX_CHARS[h4 >> 8 & 0x0F] + HEX_CHARS[h4 >> 4 & 0x0F] + HEX_CHARS[h4 & 0x0F] + HEX_CHARS[h5 >> 28 & 0x0F] + HEX_CHARS[h5 >> 24 & 0x0F] + HEX_CHARS[h5 >> 20 & 0x0F] + HEX_CHARS[h5 >> 16 & 0x0F] + HEX_CHARS[h5 >> 12 & 0x0F] + HEX_CHARS[h5 >> 8 & 0x0F] + HEX_CHARS[h5 >> 4 & 0x0F] + HEX_CHARS[h5 & 0x0F] + HEX_CHARS[h6 >> 28 & 0x0F] + HEX_CHARS[h6 >> 24 & 0x0F] + HEX_CHARS[h6 >> 20 & 0x0F] + HEX_CHARS[h6 >> 16 & 0x0F] + HEX_CHARS[h6 >> 12 & 0x0F] + HEX_CHARS[h6 >> 8 & 0x0F] + HEX_CHARS[h6 >> 4 & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[h7 >> 28 & 0x0F] + HEX_CHARS[h7 >> 24 & 0x0F] + HEX_CHARS[h7 >> 20 & 0x0F] + HEX_CHARS[h7 >> 16 & 0x0F] + HEX_CHARS[h7 >> 12 & 0x0F] + HEX_CHARS[h7 >> 8 & 0x0F] + HEX_CHARS[h7 >> 4 & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n  Sha256.prototype.toString = Sha256.prototype.hex;\n  Sha256.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0,\n      h1 = this.h1,\n      h2 = this.h2,\n      h3 = this.h3,\n      h4 = this.h4,\n      h5 = this.h5,\n      h6 = this.h6,\n      h7 = this.h7;\n    var arr = [h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF];\n    if (!this.is224) {\n      arr.push(h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n  Sha256.prototype.array = Sha256.prototype.digest;\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n  function HmacSha256(key, is224, sharedMemory) {\n    var i,\n      type = typeof key;\n    if (type === 'string') {\n      var bytes = [],\n        length = key.length,\n        index = 0,\n        code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = 0xc0 | code >> 6;\n          bytes[index++] = 0x80 | code & 0x3f;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = 0xe0 | code >> 12;\n          bytes[index++] = 0x80 | code >> 6 & 0x3f;\n          bytes[index++] = 0x80 | code & 0x3f;\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | key.charCodeAt(++i) & 0x3ff);\n          bytes[index++] = 0xf0 | code >> 18;\n          bytes[index++] = 0x80 | code >> 12 & 0x3f;\n          bytes[index++] = 0x80 | code >> 6 & 0x3f;\n          bytes[index++] = 0x80 | code & 0x3f;\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n    if (key.length > 64) {\n      key = new Sha256(is224, true).update(key).array();\n    }\n    var oKeyPad = [],\n      iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n    Sha256.call(this, is224, sharedMemory);\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n  return exports;\n}\nconst sha256 = factory();\n/**\r\n * Abstraction for crypto algorithms\r\n */\nclass HashHandler {}\nfunction decodeUTF8(s) {\n  if (typeof s !== 'string') throw new TypeError('expected string');\n  var i,\n    d = s,\n    b = new Uint8Array(d.length);\n  for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n  return b;\n}\nfunction encodeUTF8(arr) {\n  var i,\n    s = [];\n  for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n  return s.join('');\n}\nclass DefaultHashHandler {\n  calcHash(valueToHash, algorithm) {\n    return _asyncToGenerator(function* () {\n      // const encoder = new TextEncoder();\n      // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n      // const data = encoder.encode(valueToHash);\n      // const fhash = fsha256(valueToHash);\n      const candHash = encodeUTF8(fsha256(decodeUTF8(valueToHash)));\n      // const hashArray = (sha256 as any).array(valueToHash);\n      // // const hashString = this.toHashString(hashArray);\n      // const hashString = this.toHashString2(hashArray);\n      // console.debug('hash orig - cand', candHash, hashString);\n      // alert(1);\n      return candHash;\n    })();\n  }\n  toHashString2(byteArray) {\n    let result = '';\n    for (let e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n  toHashString(buffer) {\n    const byteArray = new Uint8Array(buffer);\n    let result = '';\n    for (let e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n}\nDefaultHashHandler.ɵfac = function DefaultHashHandler_Factory(t) {\n  return new (t || DefaultHashHandler)();\n};\nDefaultHashHandler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DefaultHashHandler,\n  factory: DefaultHashHandler.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultHashHandler, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\nclass OAuthService extends AuthConfig {\n  constructor(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document, dateTimeService) {\n    super();\n    this.ngZone = ngZone;\n    this.http = http;\n    this.config = config;\n    this.urlHelper = urlHelper;\n    this.logger = logger;\n    this.crypto = crypto;\n    this.dateTimeService = dateTimeService;\n    /**\r\n     * @internal\r\n     * Deprecated:  use property events instead\r\n     */\n    this.discoveryDocumentLoaded = false;\n    /**\r\n     * The received (passed around) state, when logging\r\n     * in with implicit flow.\r\n     */\n    this.state = '';\n    this.eventsSubject = new Subject();\n    this.discoveryDocumentLoadedSubject = new Subject();\n    this.grantTypesSupported = [];\n    this.inImplicitFlow = false;\n    this.saveNoncesInLocalStorage = false;\n    this.debug('angular-oauth2-oidc v10');\n    // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed\n    this.document = document;\n    if (!config) {\n      config = {};\n    }\n    this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\n    this.events = this.eventsSubject.asObservable();\n    if (tokenValidationHandler) {\n      this.tokenValidationHandler = tokenValidationHandler;\n    }\n    if (config) {\n      this.configure(config);\n    }\n    try {\n      if (storage) {\n        this.setStorage(storage);\n      } else if (typeof sessionStorage !== 'undefined') {\n        this.setStorage(sessionStorage);\n      }\n    } catch (e) {\n      console.error('No OAuthStorage provided and cannot access default (sessionStorage).' + 'Consider providing a custom OAuthStorage implementation in your module.', e);\n    }\n    // in IE, sessionStorage does not always survive a redirect\n    if (this.checkLocalStorageAccessable()) {\n      const ua = window?.navigator?.userAgent;\n      const msie = ua?.includes('MSIE ') || ua?.includes('Trident');\n      if (msie) {\n        this.saveNoncesInLocalStorage = true;\n      }\n    }\n    this.setupRefreshTimer();\n  }\n  checkLocalStorageAccessable() {\n    if (typeof window === 'undefined') return false;\n    const test = 'test';\n    try {\n      if (typeof window['localStorage'] === 'undefined') return false;\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\r\n   * Use this method to configure the service\r\n   * @param config the configuration\r\n   */\n  configure(config) {\n    // For the sake of downward compatibility with\n    // original configuration API\n    Object.assign(this, new AuthConfig(), config);\n    this.config = Object.assign({}, new AuthConfig(), config);\n    if (this.sessionChecksEnabled) {\n      this.setupSessionCheck();\n    }\n    this.configChanged();\n  }\n  configChanged() {\n    this.setupRefreshTimer();\n  }\n  restartSessionChecksIfStillLoggedIn() {\n    if (this.hasValidIdToken()) {\n      this.initSessionCheck();\n    }\n  }\n  restartRefreshTimerIfStillLoggedIn() {\n    this.setupExpirationTimers();\n  }\n  setupSessionCheck() {\n    this.events.pipe(filter(e => e.type === 'token_received')).subscribe(e => {\n      this.initSessionCheck();\n    });\n  }\n  /**\r\n   * Will setup up silent refreshing for when the token is\r\n   * about to expire. When the user is logged out via this.logOut method, the\r\n   * silent refreshing will pause and not refresh the tokens until the user is\r\n   * logged back in via receiving a new token.\r\n   * @param params Additional parameter to pass\r\n   * @param listenTo Setup automatic refresh of a specific token type\r\n   */\n  setupAutomaticSilentRefresh(params = {}, listenTo, noPrompt = true) {\n    let shouldRunSilentRefresh = true;\n    this.clearAutomaticRefreshTimer();\n    this.automaticRefreshSubscription = this.events.pipe(tap(e => {\n      if (e.type === 'token_received') {\n        shouldRunSilentRefresh = true;\n      } else if (e.type === 'logout') {\n        shouldRunSilentRefresh = false;\n      }\n    }), filter(e => e.type === 'token_expires' && (listenTo == null || listenTo === 'any' || e.info === listenTo)), debounceTime(1000)).subscribe(_ => {\n      if (shouldRunSilentRefresh) {\n        // this.silentRefresh(params, noPrompt).catch(_ => {\n        this.refreshInternal(params, noPrompt).catch(_ => {\n          this.debug('Automatic silent refresh did not work');\n        });\n      }\n    });\n    this.restartRefreshTimerIfStillLoggedIn();\n  }\n  refreshInternal(params, noPrompt) {\n    if (!this.useSilentRefresh && this.responseType === 'code') {\n      return this.refreshToken();\n    } else {\n      return this.silentRefresh(params, noPrompt);\n    }\n  }\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n   * directly chains using the `then(...)` part of the promise to call\r\n   * the `tryLogin(...)` method.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\n  loadDiscoveryDocumentAndTryLogin(options = null) {\n    return this.loadDiscoveryDocument().then(doc => {\n      return this.tryLogin(options);\n    });\n  }\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n   * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n   * IdToken or no valid AccessToken.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\n  loadDiscoveryDocumentAndLogin(options = null) {\n    options = options || {};\n    return this.loadDiscoveryDocumentAndTryLogin(options).then(_ => {\n      if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\n        const state = typeof options.state === 'string' ? options.state : '';\n        this.initLoginFlow(state);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n  debug(...args) {\n    if (this.showDebugInformation) {\n      this.logger.debug.apply(this.logger, args);\n    }\n  }\n  validateUrlFromDiscoveryDocument(url) {\n    const errors = [];\n    const httpsCheck = this.validateUrlForHttps(url);\n    const issuerCheck = this.validateUrlAgainstIssuer(url);\n    if (!httpsCheck) {\n      errors.push('https for all urls required. Also for urls received by discovery.');\n    }\n    if (!issuerCheck) {\n      errors.push('Every url in discovery document has to start with the issuer url.' + 'Also see property strictDiscoveryDocumentValidation.');\n    }\n    return errors;\n  }\n  validateUrlForHttps(url) {\n    if (!url) {\n      return true;\n    }\n    const lcUrl = url.toLowerCase();\n    if (this.requireHttps === false) {\n      return true;\n    }\n    if ((lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) || lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) && this.requireHttps === 'remoteOnly') {\n      return true;\n    }\n    return lcUrl.startsWith('https://');\n  }\n  assertUrlNotNullAndCorrectProtocol(url, description) {\n    if (!url) {\n      throw new Error(`'${description}' should not be null`);\n    }\n    if (!this.validateUrlForHttps(url)) {\n      throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\n    }\n  }\n  validateUrlAgainstIssuer(url) {\n    if (!this.strictDiscoveryDocumentValidation) {\n      return true;\n    }\n    if (!url) {\n      return true;\n    }\n    return url.toLowerCase().startsWith(this.issuer.toLowerCase());\n  }\n  setupRefreshTimer() {\n    if (typeof window === 'undefined') {\n      this.debug('timer not supported on this plattform');\n      return;\n    }\n    if (this.hasValidIdToken() || this.hasValidAccessToken()) {\n      this.clearAccessTokenTimer();\n      this.clearIdTokenTimer();\n      this.setupExpirationTimers();\n    }\n    if (this.tokenReceivedSubscription) this.tokenReceivedSubscription.unsubscribe();\n    this.tokenReceivedSubscription = this.events.pipe(filter(e => e.type === 'token_received')).subscribe(_ => {\n      this.clearAccessTokenTimer();\n      this.clearIdTokenTimer();\n      this.setupExpirationTimers();\n    });\n  }\n  setupExpirationTimers() {\n    if (this.hasValidAccessToken()) {\n      this.setupAccessTokenTimer();\n    }\n    if (this.hasValidIdToken()) {\n      this.setupIdTokenTimer();\n    }\n  }\n  setupAccessTokenTimer() {\n    const expiration = this.getAccessTokenExpiration();\n    const storedAt = this.getAccessTokenStoredAt();\n    const timeout = this.calcTimeout(storedAt, expiration);\n    this.ngZone.runOutsideAngular(() => {\n      this.accessTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'access_token')).pipe(delay(timeout)).subscribe(e => {\n        this.ngZone.run(() => {\n          this.eventsSubject.next(e);\n        });\n      });\n    });\n  }\n  setupIdTokenTimer() {\n    const expiration = this.getIdTokenExpiration();\n    const storedAt = this.getIdTokenStoredAt();\n    const timeout = this.calcTimeout(storedAt, expiration);\n    this.ngZone.runOutsideAngular(() => {\n      this.idTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'id_token')).pipe(delay(timeout)).subscribe(e => {\n        this.ngZone.run(() => {\n          this.eventsSubject.next(e);\n        });\n      });\n    });\n  }\n  /**\r\n   * Stops timers for automatic refresh.\r\n   * To restart it, call setupAutomaticSilentRefresh again.\r\n   */\n  stopAutomaticRefresh() {\n    this.clearAccessTokenTimer();\n    this.clearIdTokenTimer();\n    this.clearAutomaticRefreshTimer();\n  }\n  clearAccessTokenTimer() {\n    if (this.accessTokenTimeoutSubscription) {\n      this.accessTokenTimeoutSubscription.unsubscribe();\n    }\n  }\n  clearIdTokenTimer() {\n    if (this.idTokenTimeoutSubscription) {\n      this.idTokenTimeoutSubscription.unsubscribe();\n    }\n  }\n  clearAutomaticRefreshTimer() {\n    if (this.automaticRefreshSubscription) {\n      this.automaticRefreshSubscription.unsubscribe();\n    }\n  }\n  calcTimeout(storedAt, expiration) {\n    const now = this.dateTimeService.now();\n    const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\n    return Math.max(0, delta);\n  }\n  /**\r\n   * DEPRECATED. Use a provider for OAuthStorage instead:\r\n   *\r\n   * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n   * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n   * Sets a custom storage used to store the received\r\n   * tokens on client side. By default, the browser's\r\n   * sessionStorage is used.\r\n   * @ignore\r\n   *\r\n   * @param storage\r\n   */\n  setStorage(storage) {\n    this._storage = storage;\n    this.configChanged();\n  }\n  /**\r\n   * Loads the discovery document to configure most\r\n   * properties of this service. The url of the discovery\r\n   * document is infered from the issuer's url according\r\n   * to the OpenId Connect spec. To use another url you\r\n   * can pass it to to optional parameter fullUrl.\r\n   *\r\n   * @param fullUrl\r\n   */\n  loadDiscoveryDocument(fullUrl = null) {\n    return new Promise((resolve, reject) => {\n      if (!fullUrl) {\n        fullUrl = this.issuer || '';\n        if (!fullUrl.endsWith('/')) {\n          fullUrl += '/';\n        }\n        fullUrl += '.well-known/openid-configuration';\n      }\n      if (!this.validateUrlForHttps(fullUrl)) {\n        reject(\"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        return;\n      }\n      this.http.get(fullUrl).subscribe(doc => {\n        if (!this.validateDiscoveryDocument(doc)) {\n          this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\n          reject('discovery_document_validation_error');\n          return;\n        }\n        this.loginUrl = doc.authorization_endpoint;\n        this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\n        this.grantTypesSupported = doc.grant_types_supported;\n        this.issuer = doc.issuer;\n        this.tokenEndpoint = doc.token_endpoint;\n        this.userinfoEndpoint = doc.userinfo_endpoint || this.userinfoEndpoint;\n        this.jwksUri = doc.jwks_uri;\n        this.sessionCheckIFrameUrl = doc.check_session_iframe || this.sessionCheckIFrameUrl;\n        this.discoveryDocumentLoaded = true;\n        this.discoveryDocumentLoadedSubject.next(doc);\n        this.revocationEndpoint = doc.revocation_endpoint || this.revocationEndpoint;\n        if (this.sessionChecksEnabled) {\n          this.restartSessionChecksIfStillLoggedIn();\n        }\n        this.loadJwks().then(jwks => {\n          const result = {\n            discoveryDocument: doc,\n            jwks: jwks\n          };\n          const event = new OAuthSuccessEvent('discovery_document_loaded', result);\n          this.eventsSubject.next(event);\n          resolve(event);\n          return;\n        }).catch(err => {\n          this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n          reject(err);\n          return;\n        });\n      }, err => {\n        this.logger.error('error loading discovery document', err);\n        this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n        reject(err);\n      });\n    });\n  }\n  loadJwks() {\n    return new Promise((resolve, reject) => {\n      if (this.jwksUri) {\n        this.http.get(this.jwksUri).subscribe(jwks => {\n          this.jwks = jwks;\n          this.eventsSubject.next(new OAuthSuccessEvent('discovery_document_loaded'));\n          resolve(jwks);\n        }, err => {\n          this.logger.error('error loading jwks', err);\n          this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\n          reject(err);\n        });\n      } else {\n        resolve(null);\n      }\n    });\n  }\n  validateDiscoveryDocument(doc) {\n    let errors;\n    if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\n      this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating authorization_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating end_session_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating token_endpoint in discovery document', errors);\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating revocation_endpoint in discovery document', errors);\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating userinfo_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\n    if (errors.length > 0) {\n      this.logger.error('error validating jwks_uri in discovery document', errors);\n      return false;\n    }\n    if (this.sessionChecksEnabled && !doc.check_session_iframe) {\n      this.logger.warn('sessionChecksEnabled is activated but discovery document' + ' does not contain a check_session_iframe field');\n    }\n    return true;\n  }\n  /**\r\n   * Uses password flow to exchange userName and password for an\r\n   * access_token. After receiving the access_token, this method\r\n   * uses it to query the userinfo endpoint in order to get information\r\n   * about the user in question.\r\n   *\r\n   * When using this, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation\r\n   * fail.\r\n   *\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\n  fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password, headers = new HttpHeaders()) {\n    return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(() => this.loadUserProfile());\n  }\n  /**\r\n   * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n   *\r\n   * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation fail.\r\n   */\n  loadUserProfile() {\n    if (!this.hasValidAccessToken()) {\n      throw new Error('Can not load User Profile without access_token');\n    }\n    if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\n      throw new Error(\"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    return new Promise((resolve, reject) => {\n      const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAccessToken());\n      this.http.get(this.userinfoEndpoint, {\n        headers,\n        observe: 'response',\n        responseType: 'text'\n      }).subscribe(response => {\n        this.debug('userinfo received', JSON.stringify(response));\n        if (response.headers.get('content-type').startsWith('application/json')) {\n          let info = JSON.parse(response.body);\n          const existingClaims = this.getIdentityClaims() || {};\n          if (!this.skipSubjectCheck) {\n            if (this.oidc && (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {\n              const err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' + 'of the user that has logged in with oidc.\\n' + 'if you are not using oidc but just oauth2 password flow set oidc to false';\n              reject(err);\n              return;\n            }\n          }\n          info = Object.assign({}, existingClaims, info);\n          this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\n          this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n          resolve({\n            info\n          });\n        } else {\n          this.debug('userinfo is not JSON, treating it as JWE/JWS');\n          this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n          resolve(JSON.parse(response.body));\n        }\n      }, err => {\n        this.logger.error('error loading user info', err);\n        this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Uses password flow to exchange userName and password for an access_token.\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\n  fetchTokenUsingPasswordFlow(userName, password, headers = new HttpHeaders()) {\n    const parameters = {\n      username: userName,\n      password: password\n    };\n    return this.fetchTokenUsingGrant('password', parameters, headers);\n  }\n  /**\r\n   * Uses a custom grant type to retrieve tokens.\r\n   * @param grantType Grant type.\r\n   * @param parameters Parameters to pass.\r\n   * @param headers Optional additional HTTP headers.\r\n   */\n  fetchTokenUsingGrant(grantType, parameters, headers = new HttpHeaders()) {\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    /**\r\n     * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n     * serialize and parse URL parameter keys and values.\r\n     *\r\n     * @stable\r\n     */\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    }).set('grant_type', grantType).set('scope', this.scope);\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    if (this.customQueryParams) {\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n        params = params.set(key, this.customQueryParams[key]);\n      }\n    }\n    // set explicit parameters last, to allow overwriting\n    for (const key of Object.keys(parameters)) {\n      params = params.set(key, parameters[key]);\n    }\n    headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    return new Promise((resolve, reject) => {\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).subscribe(tokenResponse => {\n        this.debug('tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        if (this.oidc && tokenResponse.id_token) {\n          this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then(result => {\n            this.storeIdToken(result);\n            resolve(tokenResponse);\n          });\n        }\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n        resolve(tokenResponse);\n      }, err => {\n        this.logger.error('Error performing ${grantType} flow', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Refreshes the token using a refresh_token.\r\n   * This does not work for implicit flow, b/c\r\n   * there is no refresh_token in this flow.\r\n   * A solution for this is provided by the\r\n   * method silentRefresh.\r\n   */\n  refreshToken() {\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    return new Promise((resolve, reject) => {\n      let params = new HttpParams({\n        encoder: new WebHttpUrlEncodingCodec()\n      }).set('grant_type', 'refresh_token').set('scope', this.scope).set('refresh_token', this._storage.getItem('refresh_token'));\n      let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n      if (this.useHttpBasicAuth) {\n        const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n        headers = headers.set('Authorization', 'Basic ' + header);\n      }\n      if (!this.useHttpBasicAuth) {\n        params = params.set('client_id', this.clientId);\n      }\n      if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n        params = params.set('client_secret', this.dummyClientSecret);\n      }\n      if (this.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          params = params.set(key, this.customQueryParams[key]);\n        }\n      }\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).pipe(switchMap(tokenResponse => {\n        if (tokenResponse.id_token) {\n          return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(tap(result => this.storeIdToken(result)), map(_ => tokenResponse));\n        } else {\n          return of(tokenResponse);\n        }\n      })).subscribe(tokenResponse => {\n        this.debug('refresh tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n        resolve(tokenResponse);\n      }, err => {\n        this.logger.error('Error refreshing token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n        reject(err);\n      });\n    });\n  }\n  removeSilentRefreshEventListener() {\n    if (this.silentRefreshPostMessageEventListener) {\n      window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\n      this.silentRefreshPostMessageEventListener = null;\n    }\n  }\n  setupSilentRefreshEventListener() {\n    this.removeSilentRefreshEventListener();\n    this.silentRefreshPostMessageEventListener = e => {\n      const message = this.processMessageEventMessage(e);\n      this.tryLogin({\n        customHashFragment: message,\n        preventClearHashAfterLogin: true,\n        customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri\n      }).catch(err => this.debug('tryLogin during silent refresh failed', err));\n    };\n    window.addEventListener('message', this.silentRefreshPostMessageEventListener);\n  }\n  /**\r\n   * Performs a silent refresh for implicit flow.\r\n   * Use this method to get new tokens when/before\r\n   * the existing tokens expire.\r\n   */\n  silentRefresh(params = {}, noPrompt = true) {\n    const claims = this.getIdentityClaims() || {};\n    if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\n      params['id_token_hint'] = this.getIdToken();\n    }\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    if (typeof this.document === 'undefined') {\n      throw new Error('silent refresh is not supported on this platform');\n    }\n    const existingIframe = this.document.getElementById(this.silentRefreshIFrameName);\n    if (existingIframe) {\n      this.document.body.removeChild(existingIframe);\n    }\n    this.silentRefreshSubject = claims['sub'];\n    const iframe = this.document.createElement('iframe');\n    iframe.id = this.silentRefreshIFrameName;\n    this.setupSilentRefreshEventListener();\n    const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\n    this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\n      iframe.setAttribute('src', url);\n      if (!this.silentRefreshShowIFrame) {\n        iframe.style['display'] = 'none';\n      }\n      this.document.body.appendChild(iframe);\n    });\n    const errors = this.events.pipe(filter(e => e instanceof OAuthErrorEvent), first());\n    const success = this.events.pipe(filter(e => e.type === 'token_received'), first());\n    const timeout = of(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(delay(this.silentRefreshTimeout));\n    return race([errors, success, timeout]).pipe(map(e => {\n      if (e instanceof OAuthErrorEvent) {\n        if (e.type === 'silent_refresh_timeout') {\n          this.eventsSubject.next(e);\n        } else {\n          e = new OAuthErrorEvent('silent_refresh_error', e);\n          this.eventsSubject.next(e);\n        }\n        throw e;\n      } else if (e.type === 'token_received') {\n        e = new OAuthSuccessEvent('silently_refreshed');\n        this.eventsSubject.next(e);\n      }\n      return e;\n    })).toPromise();\n  }\n  /**\r\n   * This method exists for backwards compatibility.\r\n   * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n   * and implicit flows.\r\n   */\n  initImplicitFlowInPopup(options) {\n    return this.initLoginFlowInPopup(options);\n  }\n  initLoginFlowInPopup(options) {\n    options = options || {};\n    return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\n      display: 'popup'\n    }).then(url => {\n      return new Promise((resolve, reject) => {\n        /**\r\n         * Error handling section\r\n         */\n        const checkForPopupClosedInterval = 500;\n        let windowRef = null;\n        // If we got no window reference we open a window\n        // else we are using the window already opened\n        if (!options.windowRef) {\n          windowRef = window.open(url, 'ngx-oauth2-oidc-login', this.calculatePopupFeatures(options));\n        } else if (options.windowRef && !options.windowRef.closed) {\n          windowRef = options.windowRef;\n          windowRef.location.href = url;\n        }\n        let checkForPopupClosedTimer;\n        const tryLogin = hash => {\n          this.tryLogin({\n            customHashFragment: hash,\n            preventClearHashAfterLogin: true,\n            customRedirectUri: this.silentRefreshRedirectUri\n          }).then(() => {\n            cleanup();\n            resolve(true);\n          }, err => {\n            cleanup();\n            reject(err);\n          });\n        };\n        const checkForPopupClosed = () => {\n          if (!windowRef || windowRef.closed) {\n            cleanup();\n            reject(new OAuthErrorEvent('popup_closed', {}));\n          }\n        };\n        if (!windowRef) {\n          reject(new OAuthErrorEvent('popup_blocked', {}));\n        } else {\n          checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\n        }\n        const cleanup = () => {\n          window.clearInterval(checkForPopupClosedTimer);\n          window.removeEventListener('storage', storageListener);\n          window.removeEventListener('message', listener);\n          if (windowRef !== null) {\n            windowRef.close();\n          }\n          windowRef = null;\n        };\n        const listener = e => {\n          const message = this.processMessageEventMessage(e);\n          if (message && message !== null) {\n            window.removeEventListener('storage', storageListener);\n            tryLogin(message);\n          } else {\n            console.log('false event firing');\n          }\n        };\n        const storageListener = event => {\n          if (event.key === 'auth_hash') {\n            window.removeEventListener('message', listener);\n            tryLogin(event.newValue);\n          }\n        };\n        window.addEventListener('message', listener);\n        window.addEventListener('storage', storageListener);\n      });\n    });\n  }\n  calculatePopupFeatures(options) {\n    // Specify an static height and width and calculate centered position\n    const height = options.height || 470;\n    const width = options.width || 500;\n    const left = window.screenLeft + (window.outerWidth - width) / 2;\n    const top = window.screenTop + (window.outerHeight - height) / 2;\n    return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\n  }\n  processMessageEventMessage(e) {\n    let expectedPrefix = '#';\n    if (this.silentRefreshMessagePrefix) {\n      expectedPrefix += this.silentRefreshMessagePrefix;\n    }\n    if (!e || !e.data || typeof e.data !== 'string') {\n      return;\n    }\n    const prefixedMessage = e.data;\n    if (!prefixedMessage.startsWith(expectedPrefix)) {\n      return;\n    }\n    return '#' + prefixedMessage.substr(expectedPrefix.length);\n  }\n  canPerformSessionCheck() {\n    if (!this.sessionChecksEnabled) {\n      return false;\n    }\n    if (!this.sessionCheckIFrameUrl) {\n      console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');\n      return false;\n    }\n    const sessionState = this.getSessionState();\n    if (!sessionState) {\n      console.warn('sessionChecksEnabled is activated but there is no session_state');\n      return false;\n    }\n    if (typeof this.document === 'undefined') {\n      return false;\n    }\n    return true;\n  }\n  setupSessionCheckEventListener() {\n    this.removeSessionCheckEventListener();\n    this.sessionCheckEventListener = e => {\n      const origin = e.origin.toLowerCase();\n      const issuer = this.issuer.toLowerCase();\n      this.debug('sessionCheckEventListener');\n      if (!issuer.startsWith(origin)) {\n        this.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);\n        return;\n      }\n      // only run in Angular zone if it is 'changed' or 'error'\n      switch (e.data) {\n        case 'unchanged':\n          this.ngZone.run(() => {\n            this.handleSessionUnchanged();\n          });\n          break;\n        case 'changed':\n          this.ngZone.run(() => {\n            this.handleSessionChange();\n          });\n          break;\n        case 'error':\n          this.ngZone.run(() => {\n            this.handleSessionError();\n          });\n          break;\n      }\n      this.debug('got info from session check inframe', e);\n    };\n    // prevent Angular from refreshing the view on every message (runs in intervals)\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('message', this.sessionCheckEventListener);\n    });\n  }\n  handleSessionUnchanged() {\n    this.debug('session check', 'session unchanged');\n    this.eventsSubject.next(new OAuthInfoEvent('session_unchanged'));\n  }\n  handleSessionChange() {\n    this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\n    this.stopSessionCheckTimer();\n    if (!this.useSilentRefresh && this.responseType === 'code') {\n      this.refreshToken().then(_ => {\n        this.debug('token refresh after session change worked');\n      }).catch(_ => {\n        this.debug('token refresh did not work after session changed');\n        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n        this.logOut(true);\n      });\n    } else if (this.silentRefreshRedirectUri) {\n      this.silentRefresh().catch(_ => this.debug('silent refresh failed after session changed'));\n      this.waitForSilentRefreshAfterSessionChange();\n    } else {\n      this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n      this.logOut(true);\n    }\n  }\n  waitForSilentRefreshAfterSessionChange() {\n    this.events.pipe(filter(e => e.type === 'silently_refreshed' || e.type === 'silent_refresh_timeout' || e.type === 'silent_refresh_error'), first()).subscribe(e => {\n      if (e.type !== 'silently_refreshed') {\n        this.debug('silent refresh did not work after session changed');\n        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n        this.logOut(true);\n      }\n    });\n  }\n  handleSessionError() {\n    this.stopSessionCheckTimer();\n    this.eventsSubject.next(new OAuthInfoEvent('session_error'));\n  }\n  removeSessionCheckEventListener() {\n    if (this.sessionCheckEventListener) {\n      window.removeEventListener('message', this.sessionCheckEventListener);\n      this.sessionCheckEventListener = null;\n    }\n  }\n  initSessionCheck() {\n    if (!this.canPerformSessionCheck()) {\n      return;\n    }\n    const existingIframe = this.document.getElementById(this.sessionCheckIFrameName);\n    if (existingIframe) {\n      this.document.body.removeChild(existingIframe);\n    }\n    const iframe = this.document.createElement('iframe');\n    iframe.id = this.sessionCheckIFrameName;\n    this.setupSessionCheckEventListener();\n    const url = this.sessionCheckIFrameUrl;\n    iframe.setAttribute('src', url);\n    iframe.style.display = 'none';\n    this.document.body.appendChild(iframe);\n    this.startSessionCheckTimer();\n  }\n  startSessionCheckTimer() {\n    this.stopSessionCheckTimer();\n    this.ngZone.runOutsideAngular(() => {\n      this.sessionCheckTimer = setInterval(this.checkSession.bind(this), this.sessionCheckIntervall);\n    });\n  }\n  stopSessionCheckTimer() {\n    if (this.sessionCheckTimer) {\n      clearInterval(this.sessionCheckTimer);\n      this.sessionCheckTimer = null;\n    }\n  }\n  checkSession() {\n    const iframe = this.document.getElementById(this.sessionCheckIFrameName);\n    if (!iframe) {\n      this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);\n    }\n    const sessionState = this.getSessionState();\n    if (!sessionState) {\n      this.stopSessionCheckTimer();\n    }\n    const message = this.clientId + ' ' + sessionState;\n    iframe.contentWindow.postMessage(message, this.issuer);\n  }\n  createLoginUrl(state = '', loginHint = '', customRedirectUri = '', noPrompt = false, params = {}) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const that = _this2;\n      let redirectUri;\n      if (customRedirectUri) {\n        redirectUri = customRedirectUri;\n      } else {\n        redirectUri = _this2.redirectUri;\n      }\n      const nonce = yield _this2.createAndSaveNonce();\n      if (state) {\n        state = nonce + _this2.config.nonceStateSeparator + encodeURIComponent(state);\n      } else {\n        state = nonce;\n      }\n      if (!_this2.requestAccessToken && !_this2.oidc) {\n        throw new Error('Either requestAccessToken or oidc or both must be true');\n      }\n      if (_this2.config.responseType) {\n        _this2.responseType = _this2.config.responseType;\n      } else {\n        if (_this2.oidc && _this2.requestAccessToken) {\n          _this2.responseType = 'id_token token';\n        } else if (_this2.oidc && !_this2.requestAccessToken) {\n          _this2.responseType = 'id_token';\n        } else {\n          _this2.responseType = 'token';\n        }\n      }\n      const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\n      let scope = that.scope;\n      if (_this2.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\n        scope = 'openid ' + scope;\n      }\n      let url = that.loginUrl + seperationChar + 'response_type=' + encodeURIComponent(that.responseType) + '&client_id=' + encodeURIComponent(that.clientId) + '&state=' + encodeURIComponent(state) + '&redirect_uri=' + encodeURIComponent(redirectUri) + '&scope=' + encodeURIComponent(scope);\n      if (_this2.responseType.includes('code') && !_this2.disablePKCE) {\n        const [challenge, verifier] = yield _this2.createChallangeVerifierPairForPKCE();\n        if (_this2.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n          localStorage.setItem('PKCE_verifier', verifier);\n        } else {\n          _this2._storage.setItem('PKCE_verifier', verifier);\n        }\n        url += '&code_challenge=' + challenge;\n        url += '&code_challenge_method=S256';\n      }\n      if (loginHint) {\n        url += '&login_hint=' + encodeURIComponent(loginHint);\n      }\n      if (that.resource) {\n        url += '&resource=' + encodeURIComponent(that.resource);\n      }\n      if (that.oidc) {\n        url += '&nonce=' + encodeURIComponent(nonce);\n      }\n      if (noPrompt) {\n        url += '&prompt=none';\n      }\n      for (const key of Object.keys(params)) {\n        url += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }\n      if (_this2.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(_this2.customQueryParams)) {\n          url += '&' + key + '=' + encodeURIComponent(_this2.customQueryParams[key]);\n        }\n      }\n      return url;\n    })();\n  }\n  initImplicitFlowInternal(additionalState = '', params = '') {\n    if (this.inImplicitFlow) {\n      return;\n    }\n    this.inImplicitFlow = true;\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    let addParams = {};\n    let loginHint = null;\n    if (typeof params === 'string') {\n      loginHint = params;\n    } else if (typeof params === 'object') {\n      addParams = params;\n    }\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(error => {\n      console.error('Error in initImplicitFlow', error);\n      this.inImplicitFlow = false;\n    });\n  }\n  /**\r\n   * Starts the implicit flow and redirects to user to\r\n   * the auth servers' login url.\r\n   *\r\n   * @param additionalState Optional state that is passed around.\r\n   *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n   * @param params Hash with additional parameter. If it is a string, it is used for the\r\n   *               parameter loginHint (for the sake of compatibility with former versions)\r\n   */\n  initImplicitFlow(additionalState = '', params = '') {\n    if (this.loginUrl !== '') {\n      this.initImplicitFlowInternal(additionalState, params);\n    } else {\n      this.events.pipe(filter(e => e.type === 'discovery_document_loaded')).subscribe(_ => this.initImplicitFlowInternal(additionalState, params));\n    }\n  }\n  /**\r\n   * Reset current implicit flow\r\n   *\r\n   * @description This method allows resetting the current implict flow in order to be initialized again.\r\n   */\n  resetImplicitFlow() {\n    this.inImplicitFlow = false;\n  }\n  callOnTokenReceivedIfExists(options) {\n    const that = this;\n    if (options.onTokenReceived) {\n      const tokenParams = {\n        idClaims: that.getIdentityClaims(),\n        idToken: that.getIdToken(),\n        accessToken: that.getAccessToken(),\n        state: that.state\n      };\n      options.onTokenReceived(tokenParams);\n    }\n  }\n  storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {\n    this._storage.setItem('access_token', accessToken);\n    if (grantedScopes && !Array.isArray(grantedScopes)) {\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split(' ')));\n    } else if (grantedScopes && Array.isArray(grantedScopes)) {\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\n    }\n    this._storage.setItem('access_token_stored_at', '' + this.dateTimeService.now());\n    if (expiresIn) {\n      const expiresInMilliSeconds = expiresIn * 1000;\n      const now = this.dateTimeService.new();\n      const expiresAt = now.getTime() + expiresInMilliSeconds;\n      this._storage.setItem('expires_at', '' + expiresAt);\n    }\n    if (refreshToken) {\n      this._storage.setItem('refresh_token', refreshToken);\n    }\n    if (customParameters) {\n      customParameters.forEach((value, key) => {\n        this._storage.setItem(key, value);\n      });\n    }\n  }\n  /**\r\n   * Delegates to tryLoginImplicitFlow for the sake of competability\r\n   * @param options Optional options.\r\n   */\n  tryLogin(options = null) {\n    if (this.config.responseType === 'code') {\n      return this.tryLoginCodeFlow(options).then(_ => true);\n    } else {\n      return this.tryLoginImplicitFlow(options);\n    }\n  }\n  parseQueryString(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return {};\n    }\n    if (queryString.charAt(0) === '?') {\n      queryString = queryString.substr(1);\n    }\n    return this.urlHelper.parseQueryString(queryString);\n  }\n  tryLoginCodeFlow(options = null) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      options = options || {};\n      const querySource = options.customHashFragment ? options.customHashFragment.substring(1) : window.location.search;\n      const parts = _this3.getCodePartsFromUrl(querySource);\n      const code = parts['code'];\n      const state = parts['state'];\n      const sessionState = parts['session_state'];\n      if (!options.preventClearHashAfterLogin) {\n        const href = location.origin + location.pathname + location.search.replace(/code=[^&\\$]*/, '').replace(/scope=[^&\\$]*/, '').replace(/state=[^&\\$]*/, '').replace(/session_state=[^&\\$]*/, '').replace(/^\\?&/, '?').replace(/&$/, '').replace(/^\\?$/, '').replace(/&+/g, '&').replace(/\\?&/, '?').replace(/\\?$/, '') + location.hash;\n        history.replaceState(null, window.name, href);\n      }\n      let [nonceInState, userState] = _this3.parseState(state);\n      _this3.state = userState;\n      if (parts['error']) {\n        _this3.debug('error trying to login');\n        _this3.handleLoginError(options, parts);\n        const err = new OAuthErrorEvent('code_error', {}, parts);\n        _this3.eventsSubject.next(err);\n        return Promise.reject(err);\n      }\n      if (!options.disableNonceCheck) {\n        if (!nonceInState) {\n          _this3.saveRequestedRoute();\n          return Promise.resolve();\n        }\n        if (!options.disableOAuth2StateCheck) {\n          const success = _this3.validateNonce(nonceInState);\n          if (!success) {\n            const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n            _this3.eventsSubject.next(event);\n            return Promise.reject(event);\n          }\n        }\n        _this3.storeSessionState(sessionState);\n        if (code) {\n          yield _this3.getTokenFromCode(code, options);\n          _this3.restoreRequestedRoute();\n          return Promise.resolve();\n        } else {\n          return Promise.resolve();\n        }\n      }\n      return Promise.reject();\n    })();\n  }\n  saveRequestedRoute() {\n    if (this.config.preserveRequestedRoute) {\n      this._storage.setItem('requested_route', window.location.pathname + window.location.search);\n    }\n  }\n  restoreRequestedRoute() {\n    const requestedRoute = this._storage.getItem('requested_route');\n    if (requestedRoute) {\n      history.replaceState(null, '', window.location.origin + requestedRoute);\n    }\n  }\n  /**\r\n   * Retrieve the returned auth code from the redirect uri that has been called.\r\n   * If required also check hash, as we could use hash location strategy.\r\n   */\n  getCodePartsFromUrl(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return this.urlHelper.getHashFragmentParams();\n    }\n    // normalize query string\n    if (queryString.charAt(0) === '?') {\n      queryString = queryString.substr(1);\n    }\n    return this.urlHelper.parseQueryString(queryString);\n  }\n  /**\r\n   * Get token using an intermediate code. Works for the Authorization Code flow.\r\n   */\n  getTokenFromCode(code, options) {\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    }).set('grant_type', 'authorization_code').set('code', code).set('redirect_uri', options.customRedirectUri || this.redirectUri);\n    if (!this.disablePKCE) {\n      let PKCEVerifier;\n      if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n        PKCEVerifier = localStorage.getItem('PKCE_verifier');\n      } else {\n        PKCEVerifier = this._storage.getItem('PKCE_verifier');\n      }\n      if (!PKCEVerifier) {\n        console.warn('No PKCE verifier found in oauth storage!');\n      } else {\n        params = params.set('code_verifier', PKCEVerifier);\n      }\n    }\n    return this.fetchAndProcessToken(params, options);\n  }\n  fetchAndProcessToken(params, options) {\n    options = options || {};\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    return new Promise((resolve, reject) => {\n      if (this.customQueryParams) {\n        for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          params = params.set(key, this.customQueryParams[key]);\n        }\n      }\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).subscribe(tokenResponse => {\n        this.debug('refresh tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        if (this.oidc && tokenResponse.id_token) {\n          this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, options.disableNonceCheck).then(result => {\n            this.storeIdToken(result);\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n            this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n            resolve(tokenResponse);\n          }).catch(reason => {\n            this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n            console.error('Error validating tokens');\n            console.error(reason);\n            reject(reason);\n          });\n        } else {\n          this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n          this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n          resolve(tokenResponse);\n        }\n      }, err => {\n        console.error('Error getting token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Checks whether there are tokens in the hash fragment\r\n   * as a result of the implicit flow. These tokens are\r\n   * parsed, validated and used to sign the user in to the\r\n   * current client.\r\n   *\r\n   * @param options Optional options.\r\n   */\n  tryLoginImplicitFlow(options = null) {\n    options = options || {};\n    let parts;\n    if (options.customHashFragment) {\n      parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\n    } else {\n      parts = this.urlHelper.getHashFragmentParams();\n    }\n    this.debug('parsed url', parts);\n    const state = parts['state'];\n    let [nonceInState, userState] = this.parseState(state);\n    this.state = userState;\n    if (parts['error']) {\n      this.debug('error trying to login');\n      this.handleLoginError(options, parts);\n      const err = new OAuthErrorEvent('token_error', {}, parts);\n      this.eventsSubject.next(err);\n      return Promise.reject(err);\n    }\n    const accessToken = parts['access_token'];\n    const idToken = parts['id_token'];\n    const sessionState = parts['session_state'];\n    const grantedScopes = parts['scope'];\n    if (!this.requestAccessToken && !this.oidc) {\n      return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');\n    }\n    if (this.requestAccessToken && !accessToken) {\n      return Promise.resolve(false);\n    }\n    if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\n      return Promise.resolve(false);\n    }\n    if (this.oidc && !idToken) {\n      return Promise.resolve(false);\n    }\n    if (this.sessionChecksEnabled && !sessionState) {\n      this.logger.warn('session checks (Session Status Change Notification) ' + 'were activated in the configuration but the id_token ' + 'does not contain a session_state claim');\n    }\n    if (this.requestAccessToken && !options.disableNonceCheck) {\n      const success = this.validateNonce(nonceInState);\n      if (!success) {\n        const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n        this.eventsSubject.next(event);\n        return Promise.reject(event);\n      }\n    }\n    if (this.requestAccessToken) {\n      this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);\n    }\n    if (!this.oidc) {\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n        this.clearLocationHash();\n      }\n      this.callOnTokenReceivedIfExists(options);\n      return Promise.resolve(true);\n    }\n    return this.processIdToken(idToken, accessToken, options.disableNonceCheck).then(result => {\n      if (options.validationHandler) {\n        return options.validationHandler({\n          accessToken: accessToken,\n          idClaims: result.idTokenClaims,\n          idToken: result.idToken,\n          state: state\n        }).then(_ => result);\n      }\n      return result;\n    }).then(result => {\n      this.storeIdToken(result);\n      this.storeSessionState(sessionState);\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n        this.clearLocationHash();\n      }\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n      this.callOnTokenReceivedIfExists(options);\n      this.inImplicitFlow = false;\n      return true;\n    }).catch(reason => {\n      this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n      this.logger.error('Error validating tokens');\n      this.logger.error(reason);\n      return Promise.reject(reason);\n    });\n  }\n  parseState(state) {\n    let nonce = state;\n    let userState = '';\n    if (state) {\n      const idx = state.indexOf(this.config.nonceStateSeparator);\n      if (idx > -1) {\n        nonce = state.substr(0, idx);\n        userState = state.substr(idx + this.config.nonceStateSeparator.length);\n      }\n    }\n    return [nonce, userState];\n  }\n  validateNonce(nonceInState) {\n    let savedNonce;\n    if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n      savedNonce = localStorage.getItem('nonce');\n    } else {\n      savedNonce = this._storage.getItem('nonce');\n    }\n    if (savedNonce !== nonceInState) {\n      const err = 'Validating access_token failed, wrong state/nonce.';\n      console.error(err, savedNonce, nonceInState);\n      return false;\n    }\n    return true;\n  }\n  storeIdToken(idToken) {\n    this._storage.setItem('id_token', idToken.idToken);\n    this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\n    this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\n    this._storage.setItem('id_token_stored_at', '' + this.dateTimeService.now());\n  }\n  storeSessionState(sessionState) {\n    this._storage.setItem('session_state', sessionState);\n  }\n  getSessionState() {\n    return this._storage.getItem('session_state');\n  }\n  handleLoginError(options, parts) {\n    if (options.onLoginError) {\n      options.onLoginError(parts);\n    }\n    if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n      this.clearLocationHash();\n    }\n  }\n  getClockSkewInMsec(defaultSkewMsc = 600000) {\n    if (!this.clockSkewInSec) {\n      return defaultSkewMsc;\n    }\n    return this.clockSkewInSec * 1000;\n  }\n  /**\r\n   * @ignore\r\n   */\n  processIdToken(idToken, accessToken, skipNonceCheck = false) {\n    const tokenParts = idToken.split('.');\n    const headerBase64 = this.padBase64(tokenParts[0]);\n    const headerJson = b64DecodeUnicode(headerBase64);\n    const header = JSON.parse(headerJson);\n    const claimsBase64 = this.padBase64(tokenParts[1]);\n    const claimsJson = b64DecodeUnicode(claimsBase64);\n    const claims = JSON.parse(claimsJson);\n    let savedNonce;\n    if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n      savedNonce = localStorage.getItem('nonce');\n    } else {\n      savedNonce = this._storage.getItem('nonce');\n    }\n    if (Array.isArray(claims.aud)) {\n      if (claims.aud.every(v => v !== this.clientId)) {\n        const err = 'Wrong audience: ' + claims.aud.join(',');\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n    } else {\n      if (claims.aud !== this.clientId) {\n        const err = 'Wrong audience: ' + claims.aud;\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n    }\n    if (!claims.sub) {\n      const err = 'No sub claim in id_token';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    /* For now, we only check whether the sub against\r\n     * silentRefreshSubject when sessionChecksEnabled is on\r\n     * We will reconsider in a later version to do this\r\n     * in every other case too.\r\n     */\n    if (this.sessionChecksEnabled && this.silentRefreshSubject && this.silentRefreshSubject !== claims['sub']) {\n      const err = 'After refreshing, we got an id_token for another user (sub). ' + `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!claims.iat) {\n      const err = 'No iat claim in id_token';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\n      const err = 'Wrong issuer: ' + claims.iss;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!skipNonceCheck && claims.nonce !== savedNonce) {\n      const err = 'Wrong nonce: ' + claims.nonce;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    // at_hash is not applicable to authorization code flow\n    // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\n    // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\n    // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\n    if (this.hasOwnProperty('responseType') && (this.responseType === 'code' || this.responseType === 'id_token')) {\n      this.disableAtHashCheck = true;\n    }\n    if (!this.disableAtHashCheck && this.requestAccessToken && !claims['at_hash']) {\n      const err = 'An at_hash is needed!';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    const now = this.dateTimeService.now();\n    const issuedAtMSec = claims.iat * 1000;\n    const expiresAtMSec = claims.exp * 1000;\n    const clockSkewInMSec = this.getClockSkewInMsec(); // (this.getClockSkewInMsec() || 600) * 1000;\n    if (issuedAtMSec - clockSkewInMSec >= now || expiresAtMSec + clockSkewInMSec <= now) {\n      const err = 'Token has expired';\n      console.error(err);\n      console.error({\n        now: now,\n        issuedAtMSec: issuedAtMSec,\n        expiresAtMSec: expiresAtMSec\n      });\n      return Promise.reject(err);\n    }\n    const validationParams = {\n      accessToken: accessToken,\n      idToken: idToken,\n      jwks: this.jwks,\n      idTokenClaims: claims,\n      idTokenHeader: header,\n      loadKeys: () => this.loadJwks()\n    };\n    if (this.disableAtHashCheck) {\n      return this.checkSignature(validationParams).then(_ => {\n        const result = {\n          idToken: idToken,\n          idTokenClaims: claims,\n          idTokenClaimsJson: claimsJson,\n          idTokenHeader: header,\n          idTokenHeaderJson: headerJson,\n          idTokenExpiresAt: expiresAtMSec\n        };\n        return result;\n      });\n    }\n    return this.checkAtHash(validationParams).then(atHashValid => {\n      if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\n        const err = 'Wrong at_hash';\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n      return this.checkSignature(validationParams).then(_ => {\n        const atHashCheckEnabled = !this.disableAtHashCheck;\n        const result = {\n          idToken: idToken,\n          idTokenClaims: claims,\n          idTokenClaimsJson: claimsJson,\n          idTokenHeader: header,\n          idTokenHeaderJson: headerJson,\n          idTokenExpiresAt: expiresAtMSec\n        };\n        if (atHashCheckEnabled) {\n          return this.checkAtHash(validationParams).then(atHashValid => {\n            if (this.requestAccessToken && !atHashValid) {\n              const err = 'Wrong at_hash';\n              this.logger.warn(err);\n              return Promise.reject(err);\n            } else {\n              return result;\n            }\n          });\n        } else {\n          return result;\n        }\n      });\n    });\n  }\n  /**\r\n   * Returns the received claims about the user.\r\n   */\n  getIdentityClaims() {\n    const claims = this._storage.getItem('id_token_claims_obj');\n    if (!claims) {\n      return null;\n    }\n    return JSON.parse(claims);\n  }\n  /**\r\n   * Returns the granted scopes from the server.\r\n   */\n  getGrantedScopes() {\n    const scopes = this._storage.getItem('granted_scopes');\n    if (!scopes) {\n      return null;\n    }\n    return JSON.parse(scopes);\n  }\n  /**\r\n   * Returns the current id_token.\r\n   */\n  getIdToken() {\n    return this._storage ? this._storage.getItem('id_token') : null;\n  }\n  padBase64(base64data) {\n    while (base64data.length % 4 !== 0) {\n      base64data += '=';\n    }\n    return base64data;\n  }\n  /**\r\n   * Returns the current access_token.\r\n   */\n  getAccessToken() {\n    return this._storage ? this._storage.getItem('access_token') : null;\n  }\n  getRefreshToken() {\n    return this._storage ? this._storage.getItem('refresh_token') : null;\n  }\n  /**\r\n   * Returns the expiration date of the access_token\r\n   * as milliseconds since 1970.\r\n   */\n  getAccessTokenExpiration() {\n    if (!this._storage.getItem('expires_at')) {\n      return null;\n    }\n    return parseInt(this._storage.getItem('expires_at'), 10);\n  }\n  getAccessTokenStoredAt() {\n    return parseInt(this._storage.getItem('access_token_stored_at'), 10);\n  }\n  getIdTokenStoredAt() {\n    return parseInt(this._storage.getItem('id_token_stored_at'), 10);\n  }\n  /**\r\n   * Returns the expiration date of the id_token\r\n   * as milliseconds since 1970.\r\n   */\n  getIdTokenExpiration() {\n    if (!this._storage.getItem('id_token_expires_at')) {\n      return null;\n    }\n    return parseInt(this._storage.getItem('id_token_expires_at'), 10);\n  }\n  /**\r\n   * Checkes, whether there is a valid access_token.\r\n   */\n  hasValidAccessToken() {\n    if (this.getAccessToken()) {\n      const expiresAt = this._storage.getItem('expires_at');\n      const now = this.dateTimeService.new();\n      if (expiresAt && parseInt(expiresAt, 10) < now.getTime() - this.getClockSkewInMsec()) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n  /**\r\n   * Checks whether there is a valid id_token.\r\n   */\n  hasValidIdToken() {\n    if (this.getIdToken()) {\n      const expiresAt = this._storage.getItem('id_token_expires_at');\n      const now = this.dateTimeService.new();\n      if (expiresAt && parseInt(expiresAt, 10) < now.getTime() - this.getClockSkewInMsec()) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n  /**\r\n   * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\r\n   */\n  getCustomTokenResponseProperty(requestedProperty) {\n    return this._storage && this.config.customTokenParameters && this.config.customTokenParameters.indexOf(requestedProperty) >= 0 && this._storage.getItem(requestedProperty) !== null ? JSON.parse(this._storage.getItem(requestedProperty)) : null;\n  }\n  /**\r\n   * Returns the auth-header that can be used\r\n   * to transmit the access_token to a service\r\n   */\n  authorizationHeader() {\n    return 'Bearer ' + this.getAccessToken();\n  }\n  logOut(customParameters = {}, state = '') {\n    let noRedirectToLogoutUrl = false;\n    if (typeof customParameters === 'boolean') {\n      noRedirectToLogoutUrl = customParameters;\n      customParameters = {};\n    }\n    const id_token = this.getIdToken();\n    this._storage.removeItem('access_token');\n    this._storage.removeItem('id_token');\n    this._storage.removeItem('refresh_token');\n    if (this.saveNoncesInLocalStorage) {\n      localStorage.removeItem('nonce');\n      localStorage.removeItem('PKCE_verifier');\n    } else {\n      this._storage.removeItem('nonce');\n      this._storage.removeItem('PKCE_verifier');\n    }\n    this._storage.removeItem('expires_at');\n    this._storage.removeItem('id_token_claims_obj');\n    this._storage.removeItem('id_token_expires_at');\n    this._storage.removeItem('id_token_stored_at');\n    this._storage.removeItem('access_token_stored_at');\n    this._storage.removeItem('granted_scopes');\n    this._storage.removeItem('session_state');\n    if (this.config.customTokenParameters) {\n      this.config.customTokenParameters.forEach(customParam => this._storage.removeItem(customParam));\n    }\n    this.silentRefreshSubject = null;\n    this.eventsSubject.next(new OAuthInfoEvent('logout'));\n    if (!this.logoutUrl) {\n      return;\n    }\n    if (noRedirectToLogoutUrl) {\n      return;\n    }\n    if (!id_token && !this.postLogoutRedirectUri) {\n      return;\n    }\n    let logoutUrl;\n    if (!this.validateUrlForHttps(this.logoutUrl)) {\n      throw new Error(\"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    // For backward compatibility\n    if (this.logoutUrl.indexOf('{{') > -1) {\n      logoutUrl = this.logoutUrl.replace(/\\{\\{id_token\\}\\}/, encodeURIComponent(id_token)).replace(/\\{\\{client_id\\}\\}/, encodeURIComponent(this.clientId));\n    } else {\n      let params = new HttpParams({\n        encoder: new WebHttpUrlEncodingCodec()\n      });\n      if (id_token) {\n        params = params.set('id_token_hint', id_token);\n      }\n      const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUriAsPostLogoutRedirectUriFallback && this.redirectUri || '';\n      if (postLogoutUrl) {\n        params = params.set('post_logout_redirect_uri', postLogoutUrl);\n        if (state) {\n          params = params.set('state', state);\n        }\n      }\n      for (let key in customParameters) {\n        params = params.set(key, customParameters[key]);\n      }\n      logoutUrl = this.logoutUrl + (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') + params.toString();\n    }\n    this.config.openUri(logoutUrl);\n  }\n  /**\r\n   * @ignore\r\n   */\n  createAndSaveNonce() {\n    const that = this;\n    return this.createNonce().then(function (nonce) {\n      // Use localStorage for nonce if possible\n      // localStorage is the only storage who survives a\n      // redirect in ALL browsers (also IE)\n      // Otherwiese we'd force teams who have to support\n      // IE into using localStorage for everything\n      if (that.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n        localStorage.setItem('nonce', nonce);\n      } else {\n        that._storage.setItem('nonce', nonce);\n      }\n      return nonce;\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  ngOnDestroy() {\n    this.clearAccessTokenTimer();\n    this.clearIdTokenTimer();\n    this.removeSilentRefreshEventListener();\n    const silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);\n    if (silentRefreshFrame) {\n      silentRefreshFrame.remove();\n    }\n    this.stopSessionCheckTimer();\n    this.removeSessionCheckEventListener();\n    const sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);\n    if (sessionCheckFrame) {\n      sessionCheckFrame.remove();\n    }\n  }\n  createNonce() {\n    return new Promise(resolve => {\n      if (this.rngUrl) {\n        throw new Error('createNonce with rng-web-api has not been implemented so far');\n      }\n      /*\r\n       * This alphabet is from:\r\n       * https://tools.ietf.org/html/rfc7636#section-4.1\r\n       *\r\n       * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n       */\n      const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n      let size = 45;\n      let id = '';\n      const crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\n      if (crypto) {\n        let bytes = new Uint8Array(size);\n        crypto.getRandomValues(bytes);\n        // Needed for IE\n        if (!bytes.map) {\n          bytes.map = Array.prototype.map;\n        }\n        bytes = bytes.map(x => unreserved.charCodeAt(x % unreserved.length));\n        id = String.fromCharCode.apply(null, bytes);\n      } else {\n        while (0 < size--) {\n          id += unreserved[Math.random() * unreserved.length | 0];\n        }\n      }\n      resolve(base64UrlEncode(id));\n    });\n  }\n  checkAtHash(params) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.tokenValidationHandler) {\n        _this4.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');\n        return true;\n      }\n      return _this4.tokenValidationHandler.validateAtHash(params);\n    })();\n  }\n  checkSignature(params) {\n    if (!this.tokenValidationHandler) {\n      this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');\n      return Promise.resolve(null);\n    }\n    return this.tokenValidationHandler.validateSignature(params);\n  }\n  /**\r\n   * Start the implicit flow or the code flow,\r\n   * depending on your configuration.\r\n   */\n  initLoginFlow(additionalState = '', params = {}) {\n    if (this.responseType === 'code') {\n      return this.initCodeFlow(additionalState, params);\n    } else {\n      return this.initImplicitFlow(additionalState, params);\n    }\n  }\n  /**\r\n   * Starts the authorization code flow and redirects to user to\r\n   * the auth servers login url.\r\n   */\n  initCodeFlow(additionalState = '', params = {}) {\n    if (this.loginUrl !== '') {\n      this.initCodeFlowInternal(additionalState, params);\n    } else {\n      this.events.pipe(filter(e => e.type === 'discovery_document_loaded')).subscribe(_ => this.initCodeFlowInternal(additionalState, params));\n    }\n  }\n  initCodeFlowInternal(additionalState = '', params = {}) {\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    let addParams = {};\n    let loginHint = null;\n    if (typeof params === 'string') {\n      loginHint = params;\n    } else if (typeof params === 'object') {\n      addParams = params;\n    }\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(error => {\n      console.error('Error in initAuthorizationCodeFlow');\n      console.error(error);\n    });\n  }\n  createChallangeVerifierPairForPKCE() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.crypto) {\n        throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\n      }\n      const verifier = yield _this5.createNonce();\n      const challengeRaw = yield _this5.crypto.calcHash(verifier, 'sha-256');\n      const challenge = base64UrlEncode(challengeRaw);\n      return [challenge, verifier];\n    })();\n  }\n  extractRecognizedCustomParameters(tokenResponse) {\n    let foundParameters = new Map();\n    if (!this.config.customTokenParameters) {\n      return foundParameters;\n    }\n    this.config.customTokenParameters.forEach(recognizedParameter => {\n      if (tokenResponse[recognizedParameter]) {\n        foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\n      }\n    });\n    return foundParameters;\n  }\n  /**\r\n   * Revokes the auth token to secure the vulnarability\r\n   * of the token issued allowing the authorization server to clean\r\n   * up any security credentials associated with the authorization\r\n   */\n  revokeTokenAndLogout(customParameters = {}, ignoreCorsIssues = false) {\n    let revokeEndpoint = this.revocationEndpoint;\n    let accessToken = this.getAccessToken();\n    let refreshToken = this.getRefreshToken();\n    if (!accessToken) {\n      return;\n    }\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    });\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    if (this.customQueryParams) {\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n        params = params.set(key, this.customQueryParams[key]);\n      }\n    }\n    return new Promise((resolve, reject) => {\n      let revokeAccessToken;\n      let revokeRefreshToken;\n      if (accessToken) {\n        let revokationParams = params.set('token', accessToken).set('token_type_hint', 'access_token');\n        revokeAccessToken = this.http.post(revokeEndpoint, revokationParams, {\n          headers\n        });\n      } else {\n        revokeAccessToken = of(null);\n      }\n      if (refreshToken) {\n        let revokationParams = params.set('token', refreshToken).set('token_type_hint', 'refresh_token');\n        revokeRefreshToken = this.http.post(revokeEndpoint, revokationParams, {\n          headers\n        });\n      } else {\n        revokeRefreshToken = of(null);\n      }\n      if (ignoreCorsIssues) {\n        revokeAccessToken = revokeAccessToken.pipe(catchError(err => {\n          if (err.status === 0) {\n            return of(null);\n          }\n          return throwError(err);\n        }));\n        revokeRefreshToken = revokeRefreshToken.pipe(catchError(err => {\n          if (err.status === 0) {\n            return of(null);\n          }\n          return throwError(err);\n        }));\n      }\n      combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe(res => {\n        this.logOut(customParameters);\n        resolve(res);\n        this.logger.info('Token successfully revoked');\n      }, err => {\n        this.logger.error('Error revoking token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Clear location.hash if it's present\r\n   */\n  clearLocationHash() {\n    // Checking for empty hash is necessary for Firefox\n    // as setting an empty hash to an empty string adds # to the URL\n    if (location.hash != '') {\n      location.hash = '';\n    }\n  }\n}\nOAuthService.ɵfac = function OAuthService_Factory(t) {\n  return new (t || OAuthService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(OAuthStorage, 8), i0.ɵɵinject(ValidationHandler, 8), i0.ɵɵinject(AuthConfig, 8), i0.ɵɵinject(UrlHelperService), i0.ɵɵinject(OAuthLogger), i0.ɵɵinject(HashHandler, 8), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(DateTimeProvider));\n};\nOAuthService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OAuthService,\n  factory: OAuthService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OAuthService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i1.HttpClient\n    }, {\n      type: OAuthStorage,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ValidationHandler,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: AuthConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: UrlHelperService\n    }, {\n      type: OAuthLogger\n    }, {\n      type: HashHandler,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: DateTimeProvider\n    }];\n  }, null);\n})();\nclass OAuthModuleConfig {}\nclass OAuthResourceServerConfig {}\nclass OAuthResourceServerErrorHandler {}\nclass OAuthNoopResourceServerErrorHandler {\n  handleError(err) {\n    return throwError(err);\n  }\n}\nclass DefaultOAuthInterceptor {\n  constructor(oAuthService, errorHandler, moduleConfig) {\n    this.oAuthService = oAuthService;\n    this.errorHandler = errorHandler;\n    this.moduleConfig = moduleConfig;\n  }\n  checkUrl(url) {\n    if (this.moduleConfig.resourceServer.customUrlValidation) {\n      return this.moduleConfig.resourceServer.customUrlValidation(url);\n    }\n    if (this.moduleConfig.resourceServer.allowedUrls) {\n      return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.toLowerCase().startsWith(u.toLowerCase()));\n    }\n    return true;\n  }\n  intercept(req, next) {\n    const url = req.url.toLowerCase();\n    if (!this.moduleConfig || !this.moduleConfig.resourceServer || !this.checkUrl(url)) {\n      return next.handle(req);\n    }\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n    if (!sendAccessToken) {\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)));\n    }\n    return merge(of(this.oAuthService.getAccessToken()).pipe(filter(token => !!token)), this.oAuthService.events.pipe(filter(e => e.type === 'token_received'), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError(_ => of(null)),\n    // timeout is not an error\n    map(_ => this.oAuthService.getAccessToken()))).pipe(take(1), mergeMap(token => {\n      if (token) {\n        const header = 'Bearer ' + token;\n        const headers = req.headers.set('Authorization', header);\n        req = req.clone({\n          headers\n        });\n      }\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)));\n    }));\n  }\n}\nDefaultOAuthInterceptor.ɵfac = function DefaultOAuthInterceptor_Factory(t) {\n  return new (t || DefaultOAuthInterceptor)(i0.ɵɵinject(OAuthService), i0.ɵɵinject(OAuthResourceServerErrorHandler), i0.ɵɵinject(OAuthModuleConfig, 8));\n};\nDefaultOAuthInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DefaultOAuthInterceptor,\n  factory: DefaultOAuthInterceptor.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultOAuthInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: OAuthService\n    }, {\n      type: OAuthResourceServerErrorHandler\n    }, {\n      type: OAuthModuleConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\nclass NullValidationHandler {\n  validateSignature(validationParams) {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams) {\n    return Promise.resolve(true);\n  }\n}\nfunction createDefaultLogger() {\n  return console;\n}\nfunction createDefaultStorage() {\n  return typeof sessionStorage !== 'undefined' ? sessionStorage : new MemoryStorage();\n}\nclass OAuthModule {\n  static forRoot(config = null, validationHandlerClass = NullValidationHandler) {\n    return {\n      ngModule: OAuthModule,\n      providers: [OAuthService, UrlHelperService, {\n        provide: OAuthLogger,\n        useFactory: createDefaultLogger\n      }, {\n        provide: OAuthStorage,\n        useFactory: createDefaultStorage\n      }, {\n        provide: ValidationHandler,\n        useClass: validationHandlerClass\n      }, {\n        provide: HashHandler,\n        useClass: DefaultHashHandler\n      }, {\n        provide: OAuthResourceServerErrorHandler,\n        useClass: OAuthNoopResourceServerErrorHandler\n      }, {\n        provide: OAuthModuleConfig,\n        useValue: config\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: DefaultOAuthInterceptor,\n        multi: true\n      }, {\n        provide: DateTimeProvider,\n        useClass: SystemDateTimeProvider\n      }]\n    };\n  }\n}\nOAuthModule.ɵfac = function OAuthModule_Factory(t) {\n  return new (t || OAuthModule)();\n};\nOAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OAuthModule,\n  imports: [CommonModule]\n});\nOAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OAuthModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [],\n      exports: []\n    }]\n  }], null, null);\n})();\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\nclass JwksValidationHandler extends NullValidationHandler {\n  constructor() {\n    super();\n    console.error(err);\n  }\n}\nconst AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DateTimeProvider, DefaultHashHandler, DefaultOAuthInterceptor, HashHandler, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, SystemDateTimeProvider, UrlHelperService, ValidationHandler };","map":{"version":3,"names":["i0","Injectable","Optional","Inject","NgModule","InjectionToken","DOCUMENT","CommonModule","i1","HttpHeaders","HttpParams","HTTP_INTERCEPTORS","Subject","of","from","race","throwError","combineLatest","merge","filter","tap","debounceTime","delay","switchMap","map","first","catchError","timeout","take","mergeMap","fsha256","DateTimeProvider","SystemDateTimeProvider","now","Date","new","ɵfac","ɵprov","type","LoginOptions","constructor","disableNonceCheck","preventClearHashAfterLogin","OAuthLogger","OAuthStorage","MemoryStorage","data","Map","getItem","key","get","removeItem","delete","setItem","set","ReceivedTokens","OAuthEvent","OAuthSuccessEvent","info","OAuthInfoEvent","OAuthErrorEvent","reason","params","b64DecodeUnicode","str","base64","replace","decodeURIComponent","atob","split","c","charCodeAt","toString","slice","join","base64UrlEncode","btoa","AuthConfig","json","clientId","redirectUri","postLogoutRedirectUri","redirectUriAsPostLogoutRedirectUriFallback","loginUrl","scope","resource","rngUrl","oidc","requestAccessToken","options","issuer","logoutUrl","clearHashAfterLogin","tokenEndpoint","revocationEndpoint","customTokenParameters","userinfoEndpoint","responseType","showDebugInformation","silentRefreshRedirectUri","silentRefreshMessagePrefix","silentRefreshShowIFrame","siletRefreshTimeout","silentRefreshTimeout","dummyClientSecret","requireHttps","strictDiscoveryDocumentValidation","jwks","customQueryParams","silentRefreshIFrameName","timeoutFactor","sessionChecksEnabled","sessionCheckIntervall","sessionCheckIFrameUrl","sessionCheckIFrameName","disableAtHashCheck","skipSubjectCheck","useIdTokenHintForSilentRefresh","skipIssuerCheck","nonceStateSeparator","useHttpBasicAuth","waitForTokenInMsec","disablePKCE","preserveRequestedRoute","openUri","uri","location","href","Object","assign","WebHttpUrlEncodingCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeValue","ValidationHandler","AbstractValidationHandler","validateAtHash","hashAlg","inferHashAlgorithm","idTokenHeader","tokenHash","calcHash","accessToken","leftMostHalf","substr","length","atHash","claimsAtHash","idTokenClaims","console","error","jwtHeader","alg","match","Error","UrlHelperService","getHashFragmentParams","customHashFragment","hash","window","indexOf","questionMarkPosition","parseQueryString","queryString","pairs","pair","separatorIndex","escapedKey","escapedValue","value","i","factory","ERROR","WINDOW","root","JS_SHA256_NO_WINDOW","WEB_WORKER","self","NODE_JS","JS_SHA256_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA256_NO_COMMON_JS","module","exports","AMD","define","amd","ARRAY_BUFFER","JS_SHA256_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","EXTRA","SHIFT","K","OUTPUT_TYPES","blocks","Array","isArray","obj","prototype","call","JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","is224","message","Sha256","update","createMethod","method","nodeWrap","create","crypto","eval","Buffer","algorithm","nodeMethod","createHash","digest","undefined","Uint8Array","createHmacOutputMethod","HmacSha256","createHmacMethod","sharedMemory","h0","h1","h2","h3","h4","h5","h6","h7","block","start","bytes","hBytes","finalized","hashed","notString","code","index","lastByteIndex","finalize","a","b","d","e","f","g","h","j","s0","s1","maj","t1","t2","ch","ab","da","cd","bc","hex","arr","push","array","arrayBuffer","dataView","DataView","setUint32","oKeyPad","iKeyPad","inner","innerHash","sha256","sha224","hmac","HashHandler","decodeUTF8","s","TypeError","encodeUTF8","String","fromCharCode","DefaultHashHandler","valueToHash","candHash","toHashString2","byteArray","result","toHashString","OAuthService","ngZone","http","storage","tokenValidationHandler","config","urlHelper","logger","document","dateTimeService","discoveryDocumentLoaded","state","eventsSubject","discoveryDocumentLoadedSubject","grantTypesSupported","inImplicitFlow","saveNoncesInLocalStorage","debug","discoveryDocumentLoaded$","asObservable","events","configure","setStorage","sessionStorage","checkLocalStorageAccessable","ua","navigator","userAgent","msie","includes","setupRefreshTimer","test","localStorage","setupSessionCheck","configChanged","restartSessionChecksIfStillLoggedIn","hasValidIdToken","initSessionCheck","restartRefreshTimerIfStillLoggedIn","setupExpirationTimers","pipe","subscribe","setupAutomaticSilentRefresh","listenTo","noPrompt","shouldRunSilentRefresh","clearAutomaticRefreshTimer","automaticRefreshSubscription","_","refreshInternal","catch","useSilentRefresh","refreshToken","silentRefresh","loadDiscoveryDocumentAndTryLogin","loadDiscoveryDocument","then","doc","tryLogin","loadDiscoveryDocumentAndLogin","hasValidAccessToken","initLoginFlow","args","apply","validateUrlFromDiscoveryDocument","url","errors","httpsCheck","validateUrlForHttps","issuerCheck","validateUrlAgainstIssuer","lcUrl","toLowerCase","startsWith","assertUrlNotNullAndCorrectProtocol","description","clearAccessTokenTimer","clearIdTokenTimer","tokenReceivedSubscription","unsubscribe","setupAccessTokenTimer","setupIdTokenTimer","expiration","getAccessTokenExpiration","storedAt","getAccessTokenStoredAt","calcTimeout","runOutsideAngular","accessTokenTimeoutSubscription","run","next","getIdTokenExpiration","getIdTokenStoredAt","idTokenTimeoutSubscription","stopAutomaticRefresh","delta","Math","max","_storage","fullUrl","Promise","resolve","reject","endsWith","validateDiscoveryDocument","authorization_endpoint","end_session_endpoint","grant_types_supported","token_endpoint","userinfo_endpoint","jwksUri","jwks_uri","check_session_iframe","revocation_endpoint","loadJwks","discoveryDocument","event","err","warn","fetchTokenUsingPasswordFlowAndLoadUserProfile","userName","password","headers","fetchTokenUsingPasswordFlow","loadUserProfile","getAccessToken","observe","response","JSON","stringify","parse","body","existingClaims","getIdentityClaims","sub","parameters","username","fetchTokenUsingGrant","grantType","encoder","header","getOwnPropertyNames","keys","post","tokenResponse","storeAccessTokenResponse","access_token","refresh_token","expires_in","fallbackAccessTokenExpirationTimeInSec","extractRecognizedCustomParameters","id_token","processIdToken","storeIdToken","removeSilentRefreshEventListener","silentRefreshPostMessageEventListener","removeEventListener","setupSilentRefreshEventListener","processMessageEventMessage","customRedirectUri","addEventListener","claims","getIdToken","existingIframe","getElementById","removeChild","silentRefreshSubject","iframe","createElement","id","createLoginUrl","setAttribute","style","appendChild","success","toPromise","initImplicitFlowInPopup","initLoginFlowInPopup","display","checkForPopupClosedInterval","windowRef","open","calculatePopupFeatures","closed","checkForPopupClosedTimer","cleanup","checkForPopupClosed","setInterval","clearInterval","storageListener","listener","close","log","newValue","height","width","left","screenLeft","outerWidth","top","screenTop","outerHeight","expectedPrefix","prefixedMessage","canPerformSessionCheck","sessionState","getSessionState","setupSessionCheckEventListener","removeSessionCheckEventListener","sessionCheckEventListener","origin","handleSessionUnchanged","handleSessionChange","handleSessionError","stopSessionCheckTimer","logOut","waitForSilentRefreshAfterSessionChange","startSessionCheckTimer","sessionCheckTimer","checkSession","bind","contentWindow","postMessage","loginHint","that","nonce","createAndSaveNonce","seperationChar","challenge","verifier","createChallangeVerifierPairForPKCE","initImplicitFlowInternal","additionalState","addParams","initImplicitFlow","resetImplicitFlow","callOnTokenReceivedIfExists","onTokenReceived","tokenParams","idClaims","idToken","expiresIn","grantedScopes","customParameters","expiresInMilliSeconds","expiresAt","getTime","forEach","tryLoginCodeFlow","tryLoginImplicitFlow","charAt","querySource","substring","search","parts","getCodePartsFromUrl","pathname","history","replaceState","name","nonceInState","userState","parseState","handleLoginError","saveRequestedRoute","disableOAuth2StateCheck","validateNonce","storeSessionState","getTokenFromCode","restoreRequestedRoute","requestedRoute","PKCEVerifier","fetchAndProcessToken","clearLocationHash","validationHandler","idx","savedNonce","idTokenClaimsJson","idTokenExpiresAt","onLoginError","getClockSkewInMsec","defaultSkewMsc","clockSkewInSec","skipNonceCheck","tokenParts","headerBase64","padBase64","headerJson","claimsBase64","claimsJson","aud","every","iat","iss","hasOwnProperty","issuedAtMSec","expiresAtMSec","exp","clockSkewInMSec","validationParams","loadKeys","checkSignature","idTokenHeaderJson","checkAtHash","atHashValid","atHashCheckEnabled","getGrantedScopes","scopes","base64data","getRefreshToken","parseInt","getCustomTokenResponseProperty","requestedProperty","authorizationHeader","noRedirectToLogoutUrl","customParam","postLogoutUrl","createNonce","ngOnDestroy","silentRefreshFrame","remove","sessionCheckFrame","unreserved","size","getRandomValues","x","random","validateSignature","initCodeFlow","initCodeFlowInternal","challengeRaw","foundParameters","recognizedParameter","revokeTokenAndLogout","ignoreCorsIssues","revokeEndpoint","revokeAccessToken","revokeRefreshToken","revokationParams","status","res","NgZone","HttpClient","decorators","OAuthModuleConfig","OAuthResourceServerConfig","OAuthResourceServerErrorHandler","OAuthNoopResourceServerErrorHandler","handleError","DefaultOAuthInterceptor","oAuthService","errorHandler","moduleConfig","checkUrl","resourceServer","customUrlValidation","allowedUrls","find","u","intercept","req","handle","sendAccessToken","token","clone","NullValidationHandler","createDefaultLogger","createDefaultStorage","OAuthModule","forRoot","validationHandlerClass","ngModule","providers","provide","useFactory","useClass","useValue","multi","ɵmod","ɵinj","imports","declarations","JwksValidationHandler","AUTH_CONFIG"],"sources":["C:/Users/andrea/Desktop/SIGLA/tesi/tesi-andrea-lauretta/front-end/angular/node_modules/angular-oauth2-oidc/fesm2020/angular-oauth2-oidc.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, NgModule, InjectionToken } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Subject, of, from, race, throwError, combineLatest, merge } from 'rxjs';\nimport { filter, tap, debounceTime, delay, switchMap, map, first, catchError, timeout, take, mergeMap } from 'rxjs/operators';\nimport fsha256 from 'fast-sha256';\n\nclass DateTimeProvider {\r\n}\r\nclass SystemDateTimeProvider extends DateTimeProvider {\r\n    now() {\r\n        return Date.now();\r\n    }\r\n    new() {\r\n        return new Date();\r\n    }\r\n}\r\nSystemDateTimeProvider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: SystemDateTimeProvider, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nSystemDateTimeProvider.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: SystemDateTimeProvider });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: SystemDateTimeProvider, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\r\nclass LoginOptions {\r\n    constructor() {\r\n        /**\r\n         * Set this to true to disable the nonce\r\n         * check which is used to avoid\r\n         * replay attacks.\r\n         * This flag should never be true in\r\n         * production environments.\r\n         */\r\n        this.disableNonceCheck = false;\r\n        /**\r\n         * Normally, you want to clear your hash fragment after\r\n         * the lib read the token(s) so that they are not displayed\r\n         * anymore in the url. If not, set this to true. For code flow\r\n         * this controls removing query string values.\r\n         */\r\n        this.preventClearHashAfterLogin = false;\r\n    }\r\n}\r\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\r\nclass OAuthLogger {\r\n}\r\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\r\nclass OAuthStorage {\r\n}\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.data = new Map();\r\n    }\r\n    getItem(key) {\r\n        return this.data.get(key);\r\n    }\r\n    removeItem(key) {\r\n        this.data.delete(key);\r\n    }\r\n    setItem(key, data) {\r\n        this.data.set(key, data);\r\n    }\r\n}\r\nMemoryStorage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MemoryStorage, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nMemoryStorage.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MemoryStorage });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: MemoryStorage, decorators: [{\r\n            type: Injectable\r\n        }] });\r\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\r\nclass ReceivedTokens {\r\n}\n\nclass OAuthEvent {\r\n    constructor(type) {\r\n        this.type = type;\r\n    }\r\n}\r\nclass OAuthSuccessEvent extends OAuthEvent {\r\n    constructor(type, info = null) {\r\n        super(type);\r\n        this.info = info;\r\n    }\r\n}\r\nclass OAuthInfoEvent extends OAuthEvent {\r\n    constructor(type, info = null) {\r\n        super(type);\r\n        this.info = info;\r\n    }\r\n}\r\nclass OAuthErrorEvent extends OAuthEvent {\r\n    constructor(type, reason, params = null) {\r\n        super(type);\r\n        this.reason = reason;\r\n        this.params = params;\r\n    }\r\n}\n\n// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\r\nfunction b64DecodeUnicode(str) {\r\n    const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n    return decodeURIComponent(atob(base64)\r\n        .split('')\r\n        .map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    })\r\n        .join(''));\r\n}\r\nfunction base64UrlEncode(str) {\r\n    const base64 = btoa(str);\r\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\r\n}\n\nclass AuthConfig {\r\n    constructor(json) {\r\n        /**\r\n         * The client's id as registered with the auth server\r\n         */\r\n        this.clientId = '';\r\n        /**\r\n         * The client's redirectUri as registered with the auth server\r\n         */\r\n        this.redirectUri = '';\r\n        /**\r\n         * An optional second redirectUri where the auth server\r\n         * redirects the user to after logging out.\r\n         */\r\n        this.postLogoutRedirectUri = '';\r\n        /**\r\n         * Defines whether to use 'redirectUri' as a replacement\r\n         * of 'postLogoutRedirectUri' if the latter is not set.\r\n         */\r\n        this.redirectUriAsPostLogoutRedirectUriFallback = true;\r\n        /**\r\n         * The auth server's endpoint that allows to log\r\n         * the user in when using implicit flow.\r\n         */\r\n        this.loginUrl = '';\r\n        /**\r\n         * The requested scopes\r\n         */\r\n        this.scope = 'openid profile';\r\n        this.resource = '';\r\n        this.rngUrl = '';\r\n        /**\r\n         * Defines whether to use OpenId Connect during\r\n         * implicit flow.\r\n         */\r\n        this.oidc = true;\r\n        /**\r\n         * Defines whether to request an access token during\r\n         * implicit flow.\r\n         */\r\n        this.requestAccessToken = true;\r\n        this.options = null;\r\n        /**\r\n         * The issuer's uri.\r\n         */\r\n        this.issuer = '';\r\n        /**\r\n         * The logout url.\r\n         */\r\n        this.logoutUrl = '';\r\n        /**\r\n         * Defines whether to clear the hash fragment after logging in.\r\n         */\r\n        this.clearHashAfterLogin = true;\r\n        /**\r\n         * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n         */\r\n        this.tokenEndpoint = null;\r\n        /**\r\n         * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\r\n         */\r\n        this.revocationEndpoint = null;\r\n        /**\r\n         * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\r\n         */\r\n        this.customTokenParameters = [];\r\n        /**\r\n         * Url of the userinfo endpoint as defined by OpenId Connect.\r\n         */\r\n        this.userinfoEndpoint = null;\r\n        this.responseType = '';\r\n        /**\r\n         * Defines whether additional debug information should\r\n         * be shown at the console. Note that in certain browsers\r\n         * the verbosity of the console needs to be explicitly set\r\n         * to include Debug level messages.\r\n         */\r\n        this.showDebugInformation = false;\r\n        /**\r\n         * The redirect uri used when doing silent refresh.\r\n         */\r\n        this.silentRefreshRedirectUri = '';\r\n        this.silentRefreshMessagePrefix = '';\r\n        /**\r\n         * Set this to true to display the iframe used for\r\n         * silent refresh for debugging.\r\n         */\r\n        this.silentRefreshShowIFrame = false;\r\n        /**\r\n         * Timeout for silent refresh.\r\n         * @internal\r\n         * depreacted b/c of typo, see silentRefreshTimeout\r\n         */\r\n        this.siletRefreshTimeout = 1000 * 20;\r\n        /**\r\n         * Timeout for silent refresh.\r\n         */\r\n        this.silentRefreshTimeout = 1000 * 20;\r\n        /**\r\n         * Some auth servers don't allow using password flow\r\n         * w/o a client secret while the standards do not\r\n         * demand for it. In this case, you can set a password\r\n         * here. As this password is exposed to the public\r\n         * it does not bring additional security and is therefore\r\n         * as good as using no password.\r\n         */\r\n        this.dummyClientSecret = null;\r\n        /**\r\n         * Defines whether https is required.\r\n         * The default value is remoteOnly which only allows\r\n         * http for localhost, while every other domains need\r\n         * to be used with https.\r\n         */\r\n        this.requireHttps = 'remoteOnly';\r\n        /**\r\n         * Defines whether every url provided by the discovery\r\n         * document has to start with the issuer's url.\r\n         */\r\n        this.strictDiscoveryDocumentValidation = true;\r\n        /**\r\n         * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n         * with keys used to validate received id_tokens.\r\n         * This is taken out of the disovery document. Can be set manually too.\r\n         */\r\n        this.jwks = null;\r\n        /**\r\n         * Map with additional query parameter that are appended to\r\n         * the request when initializing implicit flow.\r\n         */\r\n        this.customQueryParams = null;\r\n        this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';\r\n        /**\r\n         * Defines when the token_timeout event should be raised.\r\n         * If you set this to the default value 0.75, the event\r\n         * is triggered after 75% of the token's life time.\r\n         */\r\n        this.timeoutFactor = 0.75;\r\n        /**\r\n         * If true, the lib will try to check whether the user\r\n         * is still logged in on a regular basis as described\r\n         * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n         */\r\n        this.sessionChecksEnabled = false;\r\n        /**\r\n         * Interval in msec for checking the session\r\n         * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n         */\r\n        this.sessionCheckIntervall = 3 * 1000;\r\n        /**\r\n         * Url for the iframe used for session checks\r\n         */\r\n        this.sessionCheckIFrameUrl = null;\r\n        /**\r\n         * Name of the iframe to use for session checks\r\n         */\r\n        this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';\r\n        /**\r\n         * This property has been introduced to disable at_hash checks\r\n         * and is indented for Identity Provider that does not deliver\r\n         * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n         * Of course, when disabling these checks then we are bypassing\r\n         * a security check which means we are more vulnerable.\r\n         */\r\n        this.disableAtHashCheck = false;\r\n        /**\r\n         * Defines wether to check the subject of a refreshed token after silent refresh.\r\n         * Normally, it should be the same as before.\r\n         */\r\n        this.skipSubjectCheck = false;\r\n        this.useIdTokenHintForSilentRefresh = false;\r\n        /**\r\n         * Defined whether to skip the validation of the issuer in the discovery document.\r\n         * Normally, the discovey document's url starts with the url of the issuer.\r\n         */\r\n        this.skipIssuerCheck = false;\r\n        /**\r\n         * final state sent to issuer is built as follows:\r\n         * state = nonce + nonceStateSeparator + additional state\r\n         * Default separator is ';' (encoded %3B).\r\n         * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n         */\r\n        this.nonceStateSeparator = ';';\r\n        /**\r\n         * Set this to true to use HTTP BASIC auth for AJAX calls\r\n         */\r\n        this.useHttpBasicAuth = false;\r\n        /**\r\n         * The interceptors waits this time span if there is no token\r\n         */\r\n        this.waitForTokenInMsec = 0;\r\n        /**\r\n         * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n         * You can disbale it here by setting this flag to true.\r\n         * https://tools.ietf.org/html/rfc7636#section-1.1\r\n         */\r\n        this.disablePKCE = false;\r\n        /**\r\n         * Set this to true to preserve the requested route including query parameters after code flow login.\r\n         * This setting enables deep linking for the code flow.\r\n         */\r\n        this.preserveRequestedRoute = false;\r\n        /**\r\n         * This property allows you to override the method that is used to open the login url,\r\n         * allowing a way for implementations to specify their own method of routing to new\r\n         * urls.\r\n         */\r\n        this.openUri = (uri) => {\r\n            location.href = uri;\r\n        };\r\n        if (json) {\r\n            Object.assign(this, json);\r\n        }\r\n    }\r\n}\n\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\r\nclass WebHttpUrlEncodingCodec {\r\n    encodeKey(k) {\r\n        return encodeURIComponent(k);\r\n    }\r\n    encodeValue(v) {\r\n        return encodeURIComponent(v);\r\n    }\r\n    decodeKey(k) {\r\n        return decodeURIComponent(k);\r\n    }\r\n    decodeValue(v) {\r\n        return decodeURIComponent(v);\r\n    }\r\n}\n\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\r\nclass ValidationHandler {\r\n}\r\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\r\nclass AbstractValidationHandler {\r\n    /**\r\n     * Validates the at_hash in an id_token against the received access_token.\r\n     */\r\n    async validateAtHash(params) {\r\n        let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\r\n        let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\r\n        let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\r\n        let atHash = base64UrlEncode(leftMostHalf);\r\n        let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\r\n        if (atHash !== claimsAtHash) {\r\n            console.error('exptected at_hash: ' + atHash);\r\n            console.error('actual at_hash: ' + claimsAtHash);\r\n        }\r\n        return atHash === claimsAtHash;\r\n    }\r\n    /**\r\n     * Infers the name of the hash algorithm to use\r\n     * from the alg field of an id_token.\r\n     *\r\n     * @param jwtHeader the id_token's parsed header\r\n     */\r\n    inferHashAlgorithm(jwtHeader) {\r\n        let alg = jwtHeader['alg'];\r\n        if (!alg.match(/^.S[0-9]{3}$/)) {\r\n            throw new Error('Algorithm not supported: ' + alg);\r\n        }\r\n        return 'sha-' + alg.substr(2);\r\n    }\r\n}\n\nclass UrlHelperService {\r\n    getHashFragmentParams(customHashFragment) {\r\n        let hash = customHashFragment || window.location.hash;\r\n        hash = decodeURIComponent(hash);\r\n        if (hash.indexOf('#') !== 0) {\r\n            return {};\r\n        }\r\n        const questionMarkPosition = hash.indexOf('?');\r\n        if (questionMarkPosition > -1) {\r\n            hash = hash.substr(questionMarkPosition + 1);\r\n        }\r\n        else {\r\n            hash = hash.substr(1);\r\n        }\r\n        return this.parseQueryString(hash);\r\n    }\r\n    parseQueryString(queryString) {\r\n        const data = {};\r\n        let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\r\n        if (queryString === null) {\r\n            return data;\r\n        }\r\n        pairs = queryString.split('&');\r\n        for (let i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            separatorIndex = pair.indexOf('=');\r\n            if (separatorIndex === -1) {\r\n                escapedKey = pair;\r\n                escapedValue = null;\r\n            }\r\n            else {\r\n                escapedKey = pair.substr(0, separatorIndex);\r\n                escapedValue = pair.substr(separatorIndex + 1);\r\n            }\r\n            key = decodeURIComponent(escapedKey);\r\n            value = decodeURIComponent(escapedValue);\r\n            if (key.substr(0, 1) === '/') {\r\n                key = key.substr(1);\r\n            }\r\n            data[key] = value;\r\n        }\r\n        return data;\r\n    }\r\n}\r\nUrlHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: UrlHelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nUrlHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: UrlHelperService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: UrlHelperService, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\r\n *\r\n * @version 0.9.0\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2014-2017\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\nfunction factory() {\r\n    var ERROR = 'input is invalid type';\r\n    var WINDOW = typeof window === 'object';\r\n    var root = WINDOW ? window : {};\r\n    if (root.JS_SHA256_NO_WINDOW) {\r\n        WINDOW = false;\r\n    }\r\n    var WEB_WORKER = !WINDOW && typeof self === 'object';\r\n    var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n    if (NODE_JS) {\r\n        root = global;\r\n    }\r\n    else if (WEB_WORKER) {\r\n        root = self;\r\n    }\r\n    var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n    var AMD = typeof define === 'function' && define.amd;\r\n    var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\r\n    const HEX_CHARS = '0123456789abcdef'.split('');\r\n    const EXTRA = [-2147483648, 8388608, 32768, 128];\r\n    const SHIFT = [24, 16, 8, 0];\r\n    const K = [\r\n        0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\r\n        0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\r\n        0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n        0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\r\n        0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\r\n        0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n        0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\r\n        0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\r\n    ];\r\n    const OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\r\n    var blocks = [];\r\n    if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\r\n        Array.isArray = function (obj) {\r\n            return Object.prototype.toString.call(obj) === '[object Array]';\r\n        };\r\n    }\r\n    if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\r\n        ArrayBuffer.isView = function (obj) {\r\n            return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\r\n        };\r\n    }\r\n    var createOutputMethod = function (outputType, is224) {\r\n        return function (message) {\r\n            return new Sha256(is224, true).update(message)[outputType]();\r\n        };\r\n    };\r\n    var createMethod = function (is224) {\r\n        var method = createOutputMethod('hex', is224);\r\n        if (NODE_JS) {\r\n            method = nodeWrap(method, is224);\r\n        }\r\n        method.create = function () {\r\n            return new Sha256(is224);\r\n        };\r\n        method.update = function (message) {\r\n            return method.create().update(message);\r\n        };\r\n        for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n            var type = OUTPUT_TYPES[i];\r\n            method[type] = createOutputMethod(type, is224);\r\n        }\r\n        return method;\r\n    };\r\n    var nodeWrap = function (method, is224) {\r\n        var crypto = eval(\"require('crypto')\");\r\n        var Buffer = eval(\"require('buffer').Buffer\");\r\n        var algorithm = is224 ? 'sha224' : 'sha256';\r\n        var nodeMethod = function (message) {\r\n            if (typeof message === 'string') {\r\n                return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\r\n            }\r\n            else {\r\n                if (message === null || message === undefined) {\r\n                    throw new Error(ERROR);\r\n                }\r\n                else if (message.constructor === ArrayBuffer) {\r\n                    message = new Uint8Array(message);\r\n                }\r\n            }\r\n            if (Array.isArray(message) || ArrayBuffer.isView(message) ||\r\n                message.constructor === Buffer) {\r\n                return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\r\n            }\r\n            else {\r\n                return method(message);\r\n            }\r\n        };\r\n        return nodeMethod;\r\n    };\r\n    var createHmacOutputMethod = function (outputType, is224) {\r\n        return function (key, message) {\r\n            return new HmacSha256(key, is224, true).update(message)[outputType]();\r\n        };\r\n    };\r\n    var createHmacMethod = function (is224) {\r\n        var method = createHmacOutputMethod('hex', is224);\r\n        method.create = function (key) {\r\n            return new HmacSha256(key, is224);\r\n        };\r\n        method.update = function (key, message) {\r\n            return method.create(key).update(message);\r\n        };\r\n        for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n            var type = OUTPUT_TYPES[i];\r\n            method[type] = createHmacOutputMethod(type, is224);\r\n        }\r\n        return method;\r\n    };\r\n    function Sha256(is224, sharedMemory) {\r\n        if (sharedMemory) {\r\n            blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n                blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n                    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n                        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n            this.blocks = blocks;\r\n        }\r\n        else {\r\n            this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        }\r\n        if (is224) {\r\n            this.h0 = 0xc1059ed8;\r\n            this.h1 = 0x367cd507;\r\n            this.h2 = 0x3070dd17;\r\n            this.h3 = 0xf70e5939;\r\n            this.h4 = 0xffc00b31;\r\n            this.h5 = 0x68581511;\r\n            this.h6 = 0x64f98fa7;\r\n            this.h7 = 0xbefa4fa4;\r\n        }\r\n        else { // 256\r\n            this.h0 = 0x6a09e667;\r\n            this.h1 = 0xbb67ae85;\r\n            this.h2 = 0x3c6ef372;\r\n            this.h3 = 0xa54ff53a;\r\n            this.h4 = 0x510e527f;\r\n            this.h5 = 0x9b05688c;\r\n            this.h6 = 0x1f83d9ab;\r\n            this.h7 = 0x5be0cd19;\r\n        }\r\n        this.block = this.start = this.bytes = this.hBytes = 0;\r\n        this.finalized = this.hashed = false;\r\n        this.first = true;\r\n        this.is224 = is224;\r\n    }\r\n    Sha256.prototype.update = function (message) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        var notString, type = typeof message;\r\n        if (type !== 'string') {\r\n            if (type === 'object') {\r\n                if (message === null) {\r\n                    throw new Error(ERROR);\r\n                }\r\n                else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\r\n                    message = new Uint8Array(message);\r\n                }\r\n                else if (!Array.isArray(message)) {\r\n                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\r\n                        throw new Error(ERROR);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(ERROR);\r\n            }\r\n            notString = true;\r\n        }\r\n        var code, index = 0, i, length = message.length, blocks = this.blocks;\r\n        while (index < length) {\r\n            if (this.hashed) {\r\n                this.hashed = false;\r\n                blocks[0] = this.block;\r\n                blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n                    blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n                        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n                            blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n            }\r\n            if (notString) {\r\n                for (i = this.start; index < length && i < 64; ++index) {\r\n                    blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n                }\r\n            }\r\n            else {\r\n                for (i = this.start; index < length && i < 64; ++index) {\r\n                    code = message.charCodeAt(index);\r\n                    if (code < 0x80) {\r\n                        blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n                    }\r\n                    else if (code < 0x800) {\r\n                        blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n                    }\r\n                    else if (code < 0xd800 || code >= 0xe000) {\r\n                        blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n                    }\r\n                    else {\r\n                        code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n                        blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n                        blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n                    }\r\n                }\r\n            }\r\n            this.lastByteIndex = i;\r\n            this.bytes += i - this.start;\r\n            if (i >= 64) {\r\n                this.block = blocks[16];\r\n                this.start = i - 64;\r\n                this.hash();\r\n                this.hashed = true;\r\n            }\r\n            else {\r\n                this.start = i;\r\n            }\r\n        }\r\n        if (this.bytes > 4294967295) {\r\n            this.hBytes += this.bytes / 4294967296 << 0;\r\n            this.bytes = this.bytes % 4294967296;\r\n        }\r\n        return this;\r\n    };\r\n    Sha256.prototype.finalize = function () {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        var blocks = this.blocks, i = this.lastByteIndex;\r\n        blocks[16] = this.block;\r\n        blocks[i >> 2] |= EXTRA[i & 3];\r\n        this.block = blocks[16];\r\n        if (i >= 56) {\r\n            if (!this.hashed) {\r\n                this.hash();\r\n            }\r\n            blocks[0] = this.block;\r\n            blocks[16] = blocks[1] = blocks[2] = blocks[3] =\r\n                blocks[4] = blocks[5] = blocks[6] = blocks[7] =\r\n                    blocks[8] = blocks[9] = blocks[10] = blocks[11] =\r\n                        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\r\n        }\r\n        blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\r\n        blocks[15] = this.bytes << 3;\r\n        this.hash();\r\n    };\r\n    Sha256.prototype.hash = function () {\r\n        var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6, h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\r\n        for (j = 16; j < 64; ++j) {\r\n            // rightrotate\r\n            t1 = blocks[j - 15];\r\n            s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\r\n            t1 = blocks[j - 2];\r\n            s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\r\n            blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\r\n        }\r\n        bc = b & c;\r\n        for (j = 0; j < 64; j += 4) {\r\n            if (this.first) {\r\n                if (this.is224) {\r\n                    ab = 300032;\r\n                    t1 = blocks[0] - 1413257819;\r\n                    h = t1 - 150054599 << 0;\r\n                    d = t1 + 24177077 << 0;\r\n                }\r\n                else {\r\n                    ab = 704751109;\r\n                    t1 = blocks[0] - 210244248;\r\n                    h = t1 - 1521486534 << 0;\r\n                    d = t1 + 143694565 << 0;\r\n                }\r\n                this.first = false;\r\n            }\r\n            else {\r\n                s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\r\n                s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\r\n                ab = a & b;\r\n                maj = ab ^ (a & c) ^ bc;\r\n                ch = (e & f) ^ (~e & g);\r\n                t1 = h + s1 + ch + K[j] + blocks[j];\r\n                t2 = s0 + maj;\r\n                h = d + t1 << 0;\r\n                d = t1 + t2 << 0;\r\n            }\r\n            s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\r\n            s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\r\n            da = d & a;\r\n            maj = da ^ (d & b) ^ ab;\r\n            ch = (h & e) ^ (~h & f);\r\n            t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\r\n            t2 = s0 + maj;\r\n            g = c + t1 << 0;\r\n            c = t1 + t2 << 0;\r\n            s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\r\n            s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\r\n            cd = c & d;\r\n            maj = cd ^ (c & a) ^ da;\r\n            ch = (g & h) ^ (~g & e);\r\n            t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\r\n            t2 = s0 + maj;\r\n            f = b + t1 << 0;\r\n            b = t1 + t2 << 0;\r\n            s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\r\n            s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\r\n            bc = b & c;\r\n            maj = bc ^ (b & d) ^ cd;\r\n            ch = (f & g) ^ (~f & h);\r\n            t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\r\n            t2 = s0 + maj;\r\n            e = a + t1 << 0;\r\n            a = t1 + t2 << 0;\r\n        }\r\n        this.h0 = this.h0 + a << 0;\r\n        this.h1 = this.h1 + b << 0;\r\n        this.h2 = this.h2 + c << 0;\r\n        this.h3 = this.h3 + d << 0;\r\n        this.h4 = this.h4 + e << 0;\r\n        this.h5 = this.h5 + f << 0;\r\n        this.h6 = this.h6 + g << 0;\r\n        this.h7 = this.h7 + h << 0;\r\n    };\r\n    Sha256.prototype.hex = function () {\r\n        this.finalize();\r\n        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;\r\n        var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\r\n            HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\r\n            HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\r\n            HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\r\n            HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\r\n            HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\r\n            HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\r\n            HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\r\n            HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\r\n            HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\r\n        if (!this.is224) {\r\n            hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\r\n                HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\r\n                HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\r\n                HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\r\n        }\r\n        return hex;\r\n    };\r\n    Sha256.prototype.toString = Sha256.prototype.hex;\r\n    Sha256.prototype.digest = function () {\r\n        this.finalize();\r\n        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;\r\n        var arr = [\r\n            (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\r\n            (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\r\n            (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\r\n            (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\r\n            (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\r\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\r\n            (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\r\n        ];\r\n        if (!this.is224) {\r\n            arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\r\n        }\r\n        return arr;\r\n    };\r\n    Sha256.prototype.array = Sha256.prototype.digest;\r\n    Sha256.prototype.arrayBuffer = function () {\r\n        this.finalize();\r\n        var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\r\n        var dataView = new DataView(buffer);\r\n        dataView.setUint32(0, this.h0);\r\n        dataView.setUint32(4, this.h1);\r\n        dataView.setUint32(8, this.h2);\r\n        dataView.setUint32(12, this.h3);\r\n        dataView.setUint32(16, this.h4);\r\n        dataView.setUint32(20, this.h5);\r\n        dataView.setUint32(24, this.h6);\r\n        if (!this.is224) {\r\n            dataView.setUint32(28, this.h7);\r\n        }\r\n        return buffer;\r\n    };\r\n    function HmacSha256(key, is224, sharedMemory) {\r\n        var i, type = typeof key;\r\n        if (type === 'string') {\r\n            var bytes = [], length = key.length, index = 0, code;\r\n            for (i = 0; i < length; ++i) {\r\n                code = key.charCodeAt(i);\r\n                if (code < 0x80) {\r\n                    bytes[index++] = code;\r\n                }\r\n                else if (code < 0x800) {\r\n                    bytes[index++] = (0xc0 | (code >> 6));\r\n                    bytes[index++] = (0x80 | (code & 0x3f));\r\n                }\r\n                else if (code < 0xd800 || code >= 0xe000) {\r\n                    bytes[index++] = (0xe0 | (code >> 12));\r\n                    bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\r\n                    bytes[index++] = (0x80 | (code & 0x3f));\r\n                }\r\n                else {\r\n                    code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\r\n                    bytes[index++] = (0xf0 | (code >> 18));\r\n                    bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\r\n                    bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\r\n                    bytes[index++] = (0x80 | (code & 0x3f));\r\n                }\r\n            }\r\n            key = bytes;\r\n        }\r\n        else {\r\n            if (type === 'object') {\r\n                if (key === null) {\r\n                    throw new Error(ERROR);\r\n                }\r\n                else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\r\n                    key = new Uint8Array(key);\r\n                }\r\n                else if (!Array.isArray(key)) {\r\n                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\r\n                        throw new Error(ERROR);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(ERROR);\r\n            }\r\n        }\r\n        if (key.length > 64) {\r\n            key = (new Sha256(is224, true)).update(key).array();\r\n        }\r\n        var oKeyPad = [], iKeyPad = [];\r\n        for (i = 0; i < 64; ++i) {\r\n            var b = key[i] || 0;\r\n            oKeyPad[i] = 0x5c ^ b;\r\n            iKeyPad[i] = 0x36 ^ b;\r\n        }\r\n        Sha256.call(this, is224, sharedMemory);\r\n        this.update(iKeyPad);\r\n        this.oKeyPad = oKeyPad;\r\n        this.inner = true;\r\n        this.sharedMemory = sharedMemory;\r\n    }\r\n    HmacSha256.prototype = new Sha256();\r\n    HmacSha256.prototype.finalize = function () {\r\n        Sha256.prototype.finalize.call(this);\r\n        if (this.inner) {\r\n            this.inner = false;\r\n            var innerHash = this.array();\r\n            Sha256.call(this, this.is224, this.sharedMemory);\r\n            this.update(this.oKeyPad);\r\n            this.update(innerHash);\r\n            Sha256.prototype.finalize.call(this);\r\n        }\r\n    };\r\n    var exports = createMethod();\r\n    exports.sha256 = exports;\r\n    exports.sha224 = createMethod(true);\r\n    exports.sha256.hmac = createHmacMethod();\r\n    exports.sha224.hmac = createHmacMethod(true);\r\n    return exports;\r\n}\n\nconst sha256 = factory();\r\n/**\r\n * Abstraction for crypto algorithms\r\n */\r\nclass HashHandler {\r\n}\r\nfunction decodeUTF8(s) {\r\n    if (typeof s !== 'string')\r\n        throw new TypeError('expected string');\r\n    var i, d = s, b = new Uint8Array(d.length);\r\n    for (i = 0; i < d.length; i++)\r\n        b[i] = d.charCodeAt(i);\r\n    return b;\r\n}\r\nfunction encodeUTF8(arr) {\r\n    var i, s = [];\r\n    for (i = 0; i < arr.length; i++)\r\n        s.push(String.fromCharCode(arr[i]));\r\n    return s.join('');\r\n}\r\nclass DefaultHashHandler {\r\n    async calcHash(valueToHash, algorithm) {\r\n        // const encoder = new TextEncoder();\r\n        // const hashArray = await window.crypto.subtle.digest(algorithm, data);\r\n        // const data = encoder.encode(valueToHash);\r\n        // const fhash = fsha256(valueToHash);\r\n        const candHash = encodeUTF8(fsha256(decodeUTF8(valueToHash)));\r\n        // const hashArray = (sha256 as any).array(valueToHash);\r\n        // // const hashString = this.toHashString(hashArray);\r\n        // const hashString = this.toHashString2(hashArray);\r\n        // console.debug('hash orig - cand', candHash, hashString);\r\n        // alert(1);\r\n        return candHash;\r\n    }\r\n    toHashString2(byteArray) {\r\n        let result = '';\r\n        for (let e of byteArray) {\r\n            result += String.fromCharCode(e);\r\n        }\r\n        return result;\r\n    }\r\n    toHashString(buffer) {\r\n        const byteArray = new Uint8Array(buffer);\r\n        let result = '';\r\n        for (let e of byteArray) {\r\n            result += String.fromCharCode(e);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nDefaultHashHandler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultHashHandler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nDefaultHashHandler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultHashHandler });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultHashHandler, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\r\nclass OAuthService extends AuthConfig {\r\n    constructor(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document, dateTimeService) {\r\n        super();\r\n        this.ngZone = ngZone;\r\n        this.http = http;\r\n        this.config = config;\r\n        this.urlHelper = urlHelper;\r\n        this.logger = logger;\r\n        this.crypto = crypto;\r\n        this.dateTimeService = dateTimeService;\r\n        /**\r\n         * @internal\r\n         * Deprecated:  use property events instead\r\n         */\r\n        this.discoveryDocumentLoaded = false;\r\n        /**\r\n         * The received (passed around) state, when logging\r\n         * in with implicit flow.\r\n         */\r\n        this.state = '';\r\n        this.eventsSubject = new Subject();\r\n        this.discoveryDocumentLoadedSubject = new Subject();\r\n        this.grantTypesSupported = [];\r\n        this.inImplicitFlow = false;\r\n        this.saveNoncesInLocalStorage = false;\r\n        this.debug('angular-oauth2-oidc v10');\r\n        // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed\r\n        this.document = document;\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        this.discoveryDocumentLoaded$ =\r\n            this.discoveryDocumentLoadedSubject.asObservable();\r\n        this.events = this.eventsSubject.asObservable();\r\n        if (tokenValidationHandler) {\r\n            this.tokenValidationHandler = tokenValidationHandler;\r\n        }\r\n        if (config) {\r\n            this.configure(config);\r\n        }\r\n        try {\r\n            if (storage) {\r\n                this.setStorage(storage);\r\n            }\r\n            else if (typeof sessionStorage !== 'undefined') {\r\n                this.setStorage(sessionStorage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error('No OAuthStorage provided and cannot access default (sessionStorage).' +\r\n                'Consider providing a custom OAuthStorage implementation in your module.', e);\r\n        }\r\n        // in IE, sessionStorage does not always survive a redirect\r\n        if (this.checkLocalStorageAccessable()) {\r\n            const ua = window?.navigator?.userAgent;\r\n            const msie = ua?.includes('MSIE ') || ua?.includes('Trident');\r\n            if (msie) {\r\n                this.saveNoncesInLocalStorage = true;\r\n            }\r\n        }\r\n        this.setupRefreshTimer();\r\n    }\r\n    checkLocalStorageAccessable() {\r\n        if (typeof window === 'undefined')\r\n            return false;\r\n        const test = 'test';\r\n        try {\r\n            if (typeof window['localStorage'] === 'undefined')\r\n                return false;\r\n            localStorage.setItem(test, test);\r\n            localStorage.removeItem(test);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to configure the service\r\n     * @param config the configuration\r\n     */\r\n    configure(config) {\r\n        // For the sake of downward compatibility with\r\n        // original configuration API\r\n        Object.assign(this, new AuthConfig(), config);\r\n        this.config = Object.assign({}, new AuthConfig(), config);\r\n        if (this.sessionChecksEnabled) {\r\n            this.setupSessionCheck();\r\n        }\r\n        this.configChanged();\r\n    }\r\n    configChanged() {\r\n        this.setupRefreshTimer();\r\n    }\r\n    restartSessionChecksIfStillLoggedIn() {\r\n        if (this.hasValidIdToken()) {\r\n            this.initSessionCheck();\r\n        }\r\n    }\r\n    restartRefreshTimerIfStillLoggedIn() {\r\n        this.setupExpirationTimers();\r\n    }\r\n    setupSessionCheck() {\r\n        this.events\r\n            .pipe(filter((e) => e.type === 'token_received'))\r\n            .subscribe((e) => {\r\n            this.initSessionCheck();\r\n        });\r\n    }\r\n    /**\r\n     * Will setup up silent refreshing for when the token is\r\n     * about to expire. When the user is logged out via this.logOut method, the\r\n     * silent refreshing will pause and not refresh the tokens until the user is\r\n     * logged back in via receiving a new token.\r\n     * @param params Additional parameter to pass\r\n     * @param listenTo Setup automatic refresh of a specific token type\r\n     */\r\n    setupAutomaticSilentRefresh(params = {}, listenTo, noPrompt = true) {\r\n        let shouldRunSilentRefresh = true;\r\n        this.clearAutomaticRefreshTimer();\r\n        this.automaticRefreshSubscription = this.events\r\n            .pipe(tap((e) => {\r\n            if (e.type === 'token_received') {\r\n                shouldRunSilentRefresh = true;\r\n            }\r\n            else if (e.type === 'logout') {\r\n                shouldRunSilentRefresh = false;\r\n            }\r\n        }), filter((e) => e.type === 'token_expires' &&\r\n            (listenTo == null || listenTo === 'any' || e.info === listenTo)), debounceTime(1000))\r\n            .subscribe((_) => {\r\n            if (shouldRunSilentRefresh) {\r\n                // this.silentRefresh(params, noPrompt).catch(_ => {\r\n                this.refreshInternal(params, noPrompt).catch((_) => {\r\n                    this.debug('Automatic silent refresh did not work');\r\n                });\r\n            }\r\n        });\r\n        this.restartRefreshTimerIfStillLoggedIn();\r\n    }\r\n    refreshInternal(params, noPrompt) {\r\n        if (!this.useSilentRefresh && this.responseType === 'code') {\r\n            return this.refreshToken();\r\n        }\r\n        else {\r\n            return this.silentRefresh(params, noPrompt);\r\n        }\r\n    }\r\n    /**\r\n     * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n     * directly chains using the `then(...)` part of the promise to call\r\n     * the `tryLogin(...)` method.\r\n     *\r\n     * @param options LoginOptions to pass through to `tryLogin(...)`\r\n     */\r\n    loadDiscoveryDocumentAndTryLogin(options = null) {\r\n        return this.loadDiscoveryDocument().then((doc) => {\r\n            return this.tryLogin(options);\r\n        });\r\n    }\r\n    /**\r\n     * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n     * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n     * IdToken or no valid AccessToken.\r\n     *\r\n     * @param options LoginOptions to pass through to `tryLogin(...)`\r\n     */\r\n    loadDiscoveryDocumentAndLogin(options = null) {\r\n        options = options || {};\r\n        return this.loadDiscoveryDocumentAndTryLogin(options).then((_) => {\r\n            if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\r\n                const state = typeof options.state === 'string' ? options.state : '';\r\n                this.initLoginFlow(state);\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n    debug(...args) {\r\n        if (this.showDebugInformation) {\r\n            this.logger.debug.apply(this.logger, args);\r\n        }\r\n    }\r\n    validateUrlFromDiscoveryDocument(url) {\r\n        const errors = [];\r\n        const httpsCheck = this.validateUrlForHttps(url);\r\n        const issuerCheck = this.validateUrlAgainstIssuer(url);\r\n        if (!httpsCheck) {\r\n            errors.push('https for all urls required. Also for urls received by discovery.');\r\n        }\r\n        if (!issuerCheck) {\r\n            errors.push('Every url in discovery document has to start with the issuer url.' +\r\n                'Also see property strictDiscoveryDocumentValidation.');\r\n        }\r\n        return errors;\r\n    }\r\n    validateUrlForHttps(url) {\r\n        if (!url) {\r\n            return true;\r\n        }\r\n        const lcUrl = url.toLowerCase();\r\n        if (this.requireHttps === false) {\r\n            return true;\r\n        }\r\n        if ((lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) ||\r\n            lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) &&\r\n            this.requireHttps === 'remoteOnly') {\r\n            return true;\r\n        }\r\n        return lcUrl.startsWith('https://');\r\n    }\r\n    assertUrlNotNullAndCorrectProtocol(url, description) {\r\n        if (!url) {\r\n            throw new Error(`'${description}' should not be null`);\r\n        }\r\n        if (!this.validateUrlForHttps(url)) {\r\n            throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\r\n        }\r\n    }\r\n    validateUrlAgainstIssuer(url) {\r\n        if (!this.strictDiscoveryDocumentValidation) {\r\n            return true;\r\n        }\r\n        if (!url) {\r\n            return true;\r\n        }\r\n        return url.toLowerCase().startsWith(this.issuer.toLowerCase());\r\n    }\r\n    setupRefreshTimer() {\r\n        if (typeof window === 'undefined') {\r\n            this.debug('timer not supported on this plattform');\r\n            return;\r\n        }\r\n        if (this.hasValidIdToken() || this.hasValidAccessToken()) {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        }\r\n        if (this.tokenReceivedSubscription)\r\n            this.tokenReceivedSubscription.unsubscribe();\r\n        this.tokenReceivedSubscription = this.events\r\n            .pipe(filter((e) => e.type === 'token_received'))\r\n            .subscribe((_) => {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        });\r\n    }\r\n    setupExpirationTimers() {\r\n        if (this.hasValidAccessToken()) {\r\n            this.setupAccessTokenTimer();\r\n        }\r\n        if (this.hasValidIdToken()) {\r\n            this.setupIdTokenTimer();\r\n        }\r\n    }\r\n    setupAccessTokenTimer() {\r\n        const expiration = this.getAccessTokenExpiration();\r\n        const storedAt = this.getAccessTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.accessTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'access_token'))\r\n                .pipe(delay(timeout))\r\n                .subscribe((e) => {\r\n                this.ngZone.run(() => {\r\n                    this.eventsSubject.next(e);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    setupIdTokenTimer() {\r\n        const expiration = this.getIdTokenExpiration();\r\n        const storedAt = this.getIdTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.idTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'id_token'))\r\n                .pipe(delay(timeout))\r\n                .subscribe((e) => {\r\n                this.ngZone.run(() => {\r\n                    this.eventsSubject.next(e);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Stops timers for automatic refresh.\r\n     * To restart it, call setupAutomaticSilentRefresh again.\r\n     */\r\n    stopAutomaticRefresh() {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n        this.clearAutomaticRefreshTimer();\r\n    }\r\n    clearAccessTokenTimer() {\r\n        if (this.accessTokenTimeoutSubscription) {\r\n            this.accessTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n    clearIdTokenTimer() {\r\n        if (this.idTokenTimeoutSubscription) {\r\n            this.idTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n    clearAutomaticRefreshTimer() {\r\n        if (this.automaticRefreshSubscription) {\r\n            this.automaticRefreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    calcTimeout(storedAt, expiration) {\r\n        const now = this.dateTimeService.now();\r\n        const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\r\n        return Math.max(0, delta);\r\n    }\r\n    /**\r\n     * DEPRECATED. Use a provider for OAuthStorage instead:\r\n     *\r\n     * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n     * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n     * Sets a custom storage used to store the received\r\n     * tokens on client side. By default, the browser's\r\n     * sessionStorage is used.\r\n     * @ignore\r\n     *\r\n     * @param storage\r\n     */\r\n    setStorage(storage) {\r\n        this._storage = storage;\r\n        this.configChanged();\r\n    }\r\n    /**\r\n     * Loads the discovery document to configure most\r\n     * properties of this service. The url of the discovery\r\n     * document is infered from the issuer's url according\r\n     * to the OpenId Connect spec. To use another url you\r\n     * can pass it to to optional parameter fullUrl.\r\n     *\r\n     * @param fullUrl\r\n     */\r\n    loadDiscoveryDocument(fullUrl = null) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!fullUrl) {\r\n                fullUrl = this.issuer || '';\r\n                if (!fullUrl.endsWith('/')) {\r\n                    fullUrl += '/';\r\n                }\r\n                fullUrl += '.well-known/openid-configuration';\r\n            }\r\n            if (!this.validateUrlForHttps(fullUrl)) {\r\n                reject(\"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n                return;\r\n            }\r\n            this.http.get(fullUrl).subscribe((doc) => {\r\n                if (!this.validateDiscoveryDocument(doc)) {\r\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\r\n                    reject('discovery_document_validation_error');\r\n                    return;\r\n                }\r\n                this.loginUrl = doc.authorization_endpoint;\r\n                this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\r\n                this.grantTypesSupported = doc.grant_types_supported;\r\n                this.issuer = doc.issuer;\r\n                this.tokenEndpoint = doc.token_endpoint;\r\n                this.userinfoEndpoint =\r\n                    doc.userinfo_endpoint || this.userinfoEndpoint;\r\n                this.jwksUri = doc.jwks_uri;\r\n                this.sessionCheckIFrameUrl =\r\n                    doc.check_session_iframe || this.sessionCheckIFrameUrl;\r\n                this.discoveryDocumentLoaded = true;\r\n                this.discoveryDocumentLoadedSubject.next(doc);\r\n                this.revocationEndpoint =\r\n                    doc.revocation_endpoint || this.revocationEndpoint;\r\n                if (this.sessionChecksEnabled) {\r\n                    this.restartSessionChecksIfStillLoggedIn();\r\n                }\r\n                this.loadJwks()\r\n                    .then((jwks) => {\r\n                    const result = {\r\n                        discoveryDocument: doc,\r\n                        jwks: jwks,\r\n                    };\r\n                    const event = new OAuthSuccessEvent('discovery_document_loaded', result);\r\n                    this.eventsSubject.next(event);\r\n                    resolve(event);\r\n                    return;\r\n                })\r\n                    .catch((err) => {\r\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\r\n                    reject(err);\r\n                    return;\r\n                });\r\n            }, (err) => {\r\n                this.logger.error('error loading discovery document', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    loadJwks() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.jwksUri) {\r\n                this.http.get(this.jwksUri).subscribe((jwks) => {\r\n                    this.jwks = jwks;\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('discovery_document_loaded'));\r\n                    resolve(jwks);\r\n                }, (err) => {\r\n                    this.logger.error('error loading jwks', err);\r\n                    this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\r\n                    reject(err);\r\n                });\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    }\r\n    validateDiscoveryDocument(doc) {\r\n        let errors;\r\n        if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\r\n            this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating authorization_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating end_session_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating token_endpoint in discovery document', errors);\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating revocation_endpoint in discovery document', errors);\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating userinfo_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating jwks_uri in discovery document', errors);\r\n            return false;\r\n        }\r\n        if (this.sessionChecksEnabled && !doc.check_session_iframe) {\r\n            this.logger.warn('sessionChecksEnabled is activated but discovery document' +\r\n                ' does not contain a check_session_iframe field');\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Uses password flow to exchange userName and password for an\r\n     * access_token. After receiving the access_token, this method\r\n     * uses it to query the userinfo endpoint in order to get information\r\n     * about the user in question.\r\n     *\r\n     * When using this, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take place that make this operation\r\n     * fail.\r\n     *\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password, headers = new HttpHeaders()) {\r\n        return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(() => this.loadUserProfile());\r\n    }\r\n    /**\r\n     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n     *\r\n     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take place that make this operation fail.\r\n     */\r\n    loadUserProfile() {\r\n        if (!this.hasValidAccessToken()) {\r\n            throw new Error('Can not load User Profile without access_token');\r\n        }\r\n        if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\r\n            throw new Error(\"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAccessToken());\r\n            this.http\r\n                .get(this.userinfoEndpoint, {\r\n                headers,\r\n                observe: 'response',\r\n                responseType: 'text',\r\n            })\r\n                .subscribe((response) => {\r\n                this.debug('userinfo received', JSON.stringify(response));\r\n                if (response.headers\r\n                    .get('content-type')\r\n                    .startsWith('application/json')) {\r\n                    let info = JSON.parse(response.body);\r\n                    const existingClaims = this.getIdentityClaims() || {};\r\n                    if (!this.skipSubjectCheck) {\r\n                        if (this.oidc &&\r\n                            (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {\r\n                            const err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' +\r\n                                'of the user that has logged in with oidc.\\n' +\r\n                                'if you are not using oidc but just oauth2 password flow set oidc to false';\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                    }\r\n                    info = Object.assign({}, existingClaims, info);\r\n                    this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\r\n                    resolve({ info });\r\n                }\r\n                else {\r\n                    this.debug('userinfo is not JSON, treating it as JWE/JWS');\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\r\n                    resolve(JSON.parse(response.body));\r\n                }\r\n            }, (err) => {\r\n                this.logger.error('error loading user info', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Uses password flow to exchange userName and password for an access_token.\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    fetchTokenUsingPasswordFlow(userName, password, headers = new HttpHeaders()) {\r\n        const parameters = {\r\n            username: userName,\r\n            password: password,\r\n        };\r\n        return this.fetchTokenUsingGrant('password', parameters, headers);\r\n    }\r\n    /**\r\n     * Uses a custom grant type to retrieve tokens.\r\n     * @param grantType Grant type.\r\n     * @param parameters Parameters to pass.\r\n     * @param headers Optional additional HTTP headers.\r\n     */\r\n    fetchTokenUsingGrant(grantType, parameters, headers = new HttpHeaders()) {\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        /**\r\n         * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n         * serialize and parse URL parameter keys and values.\r\n         *\r\n         * @stable\r\n         */\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n            .set('grant_type', grantType)\r\n            .set('scope', this.scope);\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                params = params.set(key, this.customQueryParams[key]);\r\n            }\r\n        }\r\n        // set explicit parameters last, to allow overwriting\r\n        for (const key of Object.keys(parameters)) {\r\n            params = params.set(key, parameters[key]);\r\n        }\r\n        headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n        return new Promise((resolve, reject) => {\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                if (this.oidc && tokenResponse.id_token) {\r\n                    this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then((result) => {\r\n                        this.storeIdToken(result);\r\n                        resolve(tokenResponse);\r\n                    });\r\n                }\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                resolve(tokenResponse);\r\n            }, (err) => {\r\n                this.logger.error('Error performing ${grantType} flow', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Refreshes the token using a refresh_token.\r\n     * This does not work for implicit flow, b/c\r\n     * there is no refresh_token in this flow.\r\n     * A solution for this is provided by the\r\n     * method silentRefresh.\r\n     */\r\n    refreshToken() {\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        return new Promise((resolve, reject) => {\r\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n                .set('grant_type', 'refresh_token')\r\n                .set('scope', this.scope)\r\n                .set('refresh_token', this._storage.getItem('refresh_token'));\r\n            let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n            if (this.useHttpBasicAuth) {\r\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n                headers = headers.set('Authorization', 'Basic ' + header);\r\n            }\r\n            if (!this.useHttpBasicAuth) {\r\n                params = params.set('client_id', this.clientId);\r\n            }\r\n            if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n                params = params.set('client_secret', this.dummyClientSecret);\r\n            }\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .pipe(switchMap((tokenResponse) => {\r\n                if (tokenResponse.id_token) {\r\n                    return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(tap((result) => this.storeIdToken(result)), map((_) => tokenResponse));\r\n                }\r\n                else {\r\n                    return of(tokenResponse);\r\n                }\r\n            }))\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('refresh tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                resolve(tokenResponse);\r\n            }, (err) => {\r\n                this.logger.error('Error refreshing token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    removeSilentRefreshEventListener() {\r\n        if (this.silentRefreshPostMessageEventListener) {\r\n            window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\r\n            this.silentRefreshPostMessageEventListener = null;\r\n        }\r\n    }\r\n    setupSilentRefreshEventListener() {\r\n        this.removeSilentRefreshEventListener();\r\n        this.silentRefreshPostMessageEventListener = (e) => {\r\n            const message = this.processMessageEventMessage(e);\r\n            this.tryLogin({\r\n                customHashFragment: message,\r\n                preventClearHashAfterLogin: true,\r\n                customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri,\r\n            }).catch((err) => this.debug('tryLogin during silent refresh failed', err));\r\n        };\r\n        window.addEventListener('message', this.silentRefreshPostMessageEventListener);\r\n    }\r\n    /**\r\n     * Performs a silent refresh for implicit flow.\r\n     * Use this method to get new tokens when/before\r\n     * the existing tokens expire.\r\n     */\r\n    silentRefresh(params = {}, noPrompt = true) {\r\n        const claims = this.getIdentityClaims() || {};\r\n        if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\r\n            params['id_token_hint'] = this.getIdToken();\r\n        }\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        if (typeof this.document === 'undefined') {\r\n            throw new Error('silent refresh is not supported on this platform');\r\n        }\r\n        const existingIframe = this.document.getElementById(this.silentRefreshIFrameName);\r\n        if (existingIframe) {\r\n            this.document.body.removeChild(existingIframe);\r\n        }\r\n        this.silentRefreshSubject = claims['sub'];\r\n        const iframe = this.document.createElement('iframe');\r\n        iframe.id = this.silentRefreshIFrameName;\r\n        this.setupSilentRefreshEventListener();\r\n        const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\r\n        this.createLoginUrl(null, null, redirectUri, noPrompt, params).then((url) => {\r\n            iframe.setAttribute('src', url);\r\n            if (!this.silentRefreshShowIFrame) {\r\n                iframe.style['display'] = 'none';\r\n            }\r\n            this.document.body.appendChild(iframe);\r\n        });\r\n        const errors = this.events.pipe(filter((e) => e instanceof OAuthErrorEvent), first());\r\n        const success = this.events.pipe(filter((e) => e.type === 'token_received'), first());\r\n        const timeout = of(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(delay(this.silentRefreshTimeout));\r\n        return race([errors, success, timeout])\r\n            .pipe(map((e) => {\r\n            if (e instanceof OAuthErrorEvent) {\r\n                if (e.type === 'silent_refresh_timeout') {\r\n                    this.eventsSubject.next(e);\r\n                }\r\n                else {\r\n                    e = new OAuthErrorEvent('silent_refresh_error', e);\r\n                    this.eventsSubject.next(e);\r\n                }\r\n                throw e;\r\n            }\r\n            else if (e.type === 'token_received') {\r\n                e = new OAuthSuccessEvent('silently_refreshed');\r\n                this.eventsSubject.next(e);\r\n            }\r\n            return e;\r\n        }))\r\n            .toPromise();\r\n    }\r\n    /**\r\n     * This method exists for backwards compatibility.\r\n     * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n     * and implicit flows.\r\n     */\r\n    initImplicitFlowInPopup(options) {\r\n        return this.initLoginFlowInPopup(options);\r\n    }\r\n    initLoginFlowInPopup(options) {\r\n        options = options || {};\r\n        return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\r\n            display: 'popup',\r\n        }).then((url) => {\r\n            return new Promise((resolve, reject) => {\r\n                /**\r\n                 * Error handling section\r\n                 */\r\n                const checkForPopupClosedInterval = 500;\r\n                let windowRef = null;\r\n                // If we got no window reference we open a window\r\n                // else we are using the window already opened\r\n                if (!options.windowRef) {\r\n                    windowRef = window.open(url, 'ngx-oauth2-oidc-login', this.calculatePopupFeatures(options));\r\n                }\r\n                else if (options.windowRef && !options.windowRef.closed) {\r\n                    windowRef = options.windowRef;\r\n                    windowRef.location.href = url;\r\n                }\r\n                let checkForPopupClosedTimer;\r\n                const tryLogin = (hash) => {\r\n                    this.tryLogin({\r\n                        customHashFragment: hash,\r\n                        preventClearHashAfterLogin: true,\r\n                        customRedirectUri: this.silentRefreshRedirectUri,\r\n                    }).then(() => {\r\n                        cleanup();\r\n                        resolve(true);\r\n                    }, (err) => {\r\n                        cleanup();\r\n                        reject(err);\r\n                    });\r\n                };\r\n                const checkForPopupClosed = () => {\r\n                    if (!windowRef || windowRef.closed) {\r\n                        cleanup();\r\n                        reject(new OAuthErrorEvent('popup_closed', {}));\r\n                    }\r\n                };\r\n                if (!windowRef) {\r\n                    reject(new OAuthErrorEvent('popup_blocked', {}));\r\n                }\r\n                else {\r\n                    checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\r\n                }\r\n                const cleanup = () => {\r\n                    window.clearInterval(checkForPopupClosedTimer);\r\n                    window.removeEventListener('storage', storageListener);\r\n                    window.removeEventListener('message', listener);\r\n                    if (windowRef !== null) {\r\n                        windowRef.close();\r\n                    }\r\n                    windowRef = null;\r\n                };\r\n                const listener = (e) => {\r\n                    const message = this.processMessageEventMessage(e);\r\n                    if (message && message !== null) {\r\n                        window.removeEventListener('storage', storageListener);\r\n                        tryLogin(message);\r\n                    }\r\n                    else {\r\n                        console.log('false event firing');\r\n                    }\r\n                };\r\n                const storageListener = (event) => {\r\n                    if (event.key === 'auth_hash') {\r\n                        window.removeEventListener('message', listener);\r\n                        tryLogin(event.newValue);\r\n                    }\r\n                };\r\n                window.addEventListener('message', listener);\r\n                window.addEventListener('storage', storageListener);\r\n            });\r\n        });\r\n    }\r\n    calculatePopupFeatures(options) {\r\n        // Specify an static height and width and calculate centered position\r\n        const height = options.height || 470;\r\n        const width = options.width || 500;\r\n        const left = window.screenLeft + (window.outerWidth - width) / 2;\r\n        const top = window.screenTop + (window.outerHeight - height) / 2;\r\n        return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\r\n    }\r\n    processMessageEventMessage(e) {\r\n        let expectedPrefix = '#';\r\n        if (this.silentRefreshMessagePrefix) {\r\n            expectedPrefix += this.silentRefreshMessagePrefix;\r\n        }\r\n        if (!e || !e.data || typeof e.data !== 'string') {\r\n            return;\r\n        }\r\n        const prefixedMessage = e.data;\r\n        if (!prefixedMessage.startsWith(expectedPrefix)) {\r\n            return;\r\n        }\r\n        return '#' + prefixedMessage.substr(expectedPrefix.length);\r\n    }\r\n    canPerformSessionCheck() {\r\n        if (!this.sessionChecksEnabled) {\r\n            return false;\r\n        }\r\n        if (!this.sessionCheckIFrameUrl) {\r\n            console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');\r\n            return false;\r\n        }\r\n        const sessionState = this.getSessionState();\r\n        if (!sessionState) {\r\n            console.warn('sessionChecksEnabled is activated but there is no session_state');\r\n            return false;\r\n        }\r\n        if (typeof this.document === 'undefined') {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    setupSessionCheckEventListener() {\r\n        this.removeSessionCheckEventListener();\r\n        this.sessionCheckEventListener = (e) => {\r\n            const origin = e.origin.toLowerCase();\r\n            const issuer = this.issuer.toLowerCase();\r\n            this.debug('sessionCheckEventListener');\r\n            if (!issuer.startsWith(origin)) {\r\n                this.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);\r\n                return;\r\n            }\r\n            // only run in Angular zone if it is 'changed' or 'error'\r\n            switch (e.data) {\r\n                case 'unchanged':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionUnchanged();\r\n                    });\r\n                    break;\r\n                case 'changed':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionChange();\r\n                    });\r\n                    break;\r\n                case 'error':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionError();\r\n                    });\r\n                    break;\r\n            }\r\n            this.debug('got info from session check inframe', e);\r\n        };\r\n        // prevent Angular from refreshing the view on every message (runs in intervals)\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.addEventListener('message', this.sessionCheckEventListener);\r\n        });\r\n    }\r\n    handleSessionUnchanged() {\r\n        this.debug('session check', 'session unchanged');\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_unchanged'));\r\n    }\r\n    handleSessionChange() {\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\r\n        this.stopSessionCheckTimer();\r\n        if (!this.useSilentRefresh && this.responseType === 'code') {\r\n            this.refreshToken()\r\n                .then((_) => {\r\n                this.debug('token refresh after session change worked');\r\n            })\r\n                .catch((_) => {\r\n                this.debug('token refresh did not work after session changed');\r\n                this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n                this.logOut(true);\r\n            });\r\n        }\r\n        else if (this.silentRefreshRedirectUri) {\r\n            this.silentRefresh().catch((_) => this.debug('silent refresh failed after session changed'));\r\n            this.waitForSilentRefreshAfterSessionChange();\r\n        }\r\n        else {\r\n            this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n            this.logOut(true);\r\n        }\r\n    }\r\n    waitForSilentRefreshAfterSessionChange() {\r\n        this.events\r\n            .pipe(filter((e) => e.type === 'silently_refreshed' ||\r\n            e.type === 'silent_refresh_timeout' ||\r\n            e.type === 'silent_refresh_error'), first())\r\n            .subscribe((e) => {\r\n            if (e.type !== 'silently_refreshed') {\r\n                this.debug('silent refresh did not work after session changed');\r\n                this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n                this.logOut(true);\r\n            }\r\n        });\r\n    }\r\n    handleSessionError() {\r\n        this.stopSessionCheckTimer();\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_error'));\r\n    }\r\n    removeSessionCheckEventListener() {\r\n        if (this.sessionCheckEventListener) {\r\n            window.removeEventListener('message', this.sessionCheckEventListener);\r\n            this.sessionCheckEventListener = null;\r\n        }\r\n    }\r\n    initSessionCheck() {\r\n        if (!this.canPerformSessionCheck()) {\r\n            return;\r\n        }\r\n        const existingIframe = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (existingIframe) {\r\n            this.document.body.removeChild(existingIframe);\r\n        }\r\n        const iframe = this.document.createElement('iframe');\r\n        iframe.id = this.sessionCheckIFrameName;\r\n        this.setupSessionCheckEventListener();\r\n        const url = this.sessionCheckIFrameUrl;\r\n        iframe.setAttribute('src', url);\r\n        iframe.style.display = 'none';\r\n        this.document.body.appendChild(iframe);\r\n        this.startSessionCheckTimer();\r\n    }\r\n    startSessionCheckTimer() {\r\n        this.stopSessionCheckTimer();\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.sessionCheckTimer = setInterval(this.checkSession.bind(this), this.sessionCheckIntervall);\r\n        });\r\n    }\r\n    stopSessionCheckTimer() {\r\n        if (this.sessionCheckTimer) {\r\n            clearInterval(this.sessionCheckTimer);\r\n            this.sessionCheckTimer = null;\r\n        }\r\n    }\r\n    checkSession() {\r\n        const iframe = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (!iframe) {\r\n            this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);\r\n        }\r\n        const sessionState = this.getSessionState();\r\n        if (!sessionState) {\r\n            this.stopSessionCheckTimer();\r\n        }\r\n        const message = this.clientId + ' ' + sessionState;\r\n        iframe.contentWindow.postMessage(message, this.issuer);\r\n    }\r\n    async createLoginUrl(state = '', loginHint = '', customRedirectUri = '', noPrompt = false, params = {}) {\r\n        const that = this;\r\n        let redirectUri;\r\n        if (customRedirectUri) {\r\n            redirectUri = customRedirectUri;\r\n        }\r\n        else {\r\n            redirectUri = this.redirectUri;\r\n        }\r\n        const nonce = await this.createAndSaveNonce();\r\n        if (state) {\r\n            state =\r\n                nonce + this.config.nonceStateSeparator + encodeURIComponent(state);\r\n        }\r\n        else {\r\n            state = nonce;\r\n        }\r\n        if (!this.requestAccessToken && !this.oidc) {\r\n            throw new Error('Either requestAccessToken or oidc or both must be true');\r\n        }\r\n        if (this.config.responseType) {\r\n            this.responseType = this.config.responseType;\r\n        }\r\n        else {\r\n            if (this.oidc && this.requestAccessToken) {\r\n                this.responseType = 'id_token token';\r\n            }\r\n            else if (this.oidc && !this.requestAccessToken) {\r\n                this.responseType = 'id_token';\r\n            }\r\n            else {\r\n                this.responseType = 'token';\r\n            }\r\n        }\r\n        const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\r\n        let scope = that.scope;\r\n        if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\r\n            scope = 'openid ' + scope;\r\n        }\r\n        let url = that.loginUrl +\r\n            seperationChar +\r\n            'response_type=' +\r\n            encodeURIComponent(that.responseType) +\r\n            '&client_id=' +\r\n            encodeURIComponent(that.clientId) +\r\n            '&state=' +\r\n            encodeURIComponent(state) +\r\n            '&redirect_uri=' +\r\n            encodeURIComponent(redirectUri) +\r\n            '&scope=' +\r\n            encodeURIComponent(scope);\r\n        if (this.responseType.includes('code') && !this.disablePKCE) {\r\n            const [challenge, verifier] = await this.createChallangeVerifierPairForPKCE();\r\n            if (this.saveNoncesInLocalStorage &&\r\n                typeof window['localStorage'] !== 'undefined') {\r\n                localStorage.setItem('PKCE_verifier', verifier);\r\n            }\r\n            else {\r\n                this._storage.setItem('PKCE_verifier', verifier);\r\n            }\r\n            url += '&code_challenge=' + challenge;\r\n            url += '&code_challenge_method=S256';\r\n        }\r\n        if (loginHint) {\r\n            url += '&login_hint=' + encodeURIComponent(loginHint);\r\n        }\r\n        if (that.resource) {\r\n            url += '&resource=' + encodeURIComponent(that.resource);\r\n        }\r\n        if (that.oidc) {\r\n            url += '&nonce=' + encodeURIComponent(nonce);\r\n        }\r\n        if (noPrompt) {\r\n            url += '&prompt=none';\r\n        }\r\n        for (const key of Object.keys(params)) {\r\n            url +=\r\n                '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n        }\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                url +=\r\n                    '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n    initImplicitFlowInternal(additionalState = '', params = '') {\r\n        if (this.inImplicitFlow) {\r\n            return;\r\n        }\r\n        this.inImplicitFlow = true;\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        let addParams = {};\r\n        let loginHint = null;\r\n        if (typeof params === 'string') {\r\n            loginHint = params;\r\n        }\r\n        else if (typeof params === 'object') {\r\n            addParams = params;\r\n        }\r\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n            .then(this.config.openUri)\r\n            .catch((error) => {\r\n            console.error('Error in initImplicitFlow', error);\r\n            this.inImplicitFlow = false;\r\n        });\r\n    }\r\n    /**\r\n     * Starts the implicit flow and redirects to user to\r\n     * the auth servers' login url.\r\n     *\r\n     * @param additionalState Optional state that is passed around.\r\n     *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n     * @param params Hash with additional parameter. If it is a string, it is used for the\r\n     *               parameter loginHint (for the sake of compatibility with former versions)\r\n     */\r\n    initImplicitFlow(additionalState = '', params = '') {\r\n        if (this.loginUrl !== '') {\r\n            this.initImplicitFlowInternal(additionalState, params);\r\n        }\r\n        else {\r\n            this.events\r\n                .pipe(filter((e) => e.type === 'discovery_document_loaded'))\r\n                .subscribe((_) => this.initImplicitFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n    /**\r\n     * Reset current implicit flow\r\n     *\r\n     * @description This method allows resetting the current implict flow in order to be initialized again.\r\n     */\r\n    resetImplicitFlow() {\r\n        this.inImplicitFlow = false;\r\n    }\r\n    callOnTokenReceivedIfExists(options) {\r\n        const that = this;\r\n        if (options.onTokenReceived) {\r\n            const tokenParams = {\r\n                idClaims: that.getIdentityClaims(),\r\n                idToken: that.getIdToken(),\r\n                accessToken: that.getAccessToken(),\r\n                state: that.state,\r\n            };\r\n            options.onTokenReceived(tokenParams);\r\n        }\r\n    }\r\n    storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {\r\n        this._storage.setItem('access_token', accessToken);\r\n        if (grantedScopes && !Array.isArray(grantedScopes)) {\r\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split(' ')));\r\n        }\r\n        else if (grantedScopes && Array.isArray(grantedScopes)) {\r\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\r\n        }\r\n        this._storage.setItem('access_token_stored_at', '' + this.dateTimeService.now());\r\n        if (expiresIn) {\r\n            const expiresInMilliSeconds = expiresIn * 1000;\r\n            const now = this.dateTimeService.new();\r\n            const expiresAt = now.getTime() + expiresInMilliSeconds;\r\n            this._storage.setItem('expires_at', '' + expiresAt);\r\n        }\r\n        if (refreshToken) {\r\n            this._storage.setItem('refresh_token', refreshToken);\r\n        }\r\n        if (customParameters) {\r\n            customParameters.forEach((value, key) => {\r\n                this._storage.setItem(key, value);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Delegates to tryLoginImplicitFlow for the sake of competability\r\n     * @param options Optional options.\r\n     */\r\n    tryLogin(options = null) {\r\n        if (this.config.responseType === 'code') {\r\n            return this.tryLoginCodeFlow(options).then((_) => true);\r\n        }\r\n        else {\r\n            return this.tryLoginImplicitFlow(options);\r\n        }\r\n    }\r\n    parseQueryString(queryString) {\r\n        if (!queryString || queryString.length === 0) {\r\n            return {};\r\n        }\r\n        if (queryString.charAt(0) === '?') {\r\n            queryString = queryString.substr(1);\r\n        }\r\n        return this.urlHelper.parseQueryString(queryString);\r\n    }\r\n    async tryLoginCodeFlow(options = null) {\r\n        options = options || {};\r\n        const querySource = options.customHashFragment\r\n            ? options.customHashFragment.substring(1)\r\n            : window.location.search;\r\n        const parts = this.getCodePartsFromUrl(querySource);\r\n        const code = parts['code'];\r\n        const state = parts['state'];\r\n        const sessionState = parts['session_state'];\r\n        if (!options.preventClearHashAfterLogin) {\r\n            const href = location.origin +\r\n                location.pathname +\r\n                location.search\r\n                    .replace(/code=[^&\\$]*/, '')\r\n                    .replace(/scope=[^&\\$]*/, '')\r\n                    .replace(/state=[^&\\$]*/, '')\r\n                    .replace(/session_state=[^&\\$]*/, '')\r\n                    .replace(/^\\?&/, '?')\r\n                    .replace(/&$/, '')\r\n                    .replace(/^\\?$/, '')\r\n                    .replace(/&+/g, '&')\r\n                    .replace(/\\?&/, '?')\r\n                    .replace(/\\?$/, '') +\r\n                location.hash;\r\n            history.replaceState(null, window.name, href);\r\n        }\r\n        let [nonceInState, userState] = this.parseState(state);\r\n        this.state = userState;\r\n        if (parts['error']) {\r\n            this.debug('error trying to login');\r\n            this.handleLoginError(options, parts);\r\n            const err = new OAuthErrorEvent('code_error', {}, parts);\r\n            this.eventsSubject.next(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!options.disableNonceCheck) {\r\n            if (!nonceInState) {\r\n                this.saveRequestedRoute();\r\n                return Promise.resolve();\r\n            }\r\n            if (!options.disableOAuth2StateCheck) {\r\n                const success = this.validateNonce(nonceInState);\r\n                if (!success) {\r\n                    const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n                    this.eventsSubject.next(event);\r\n                    return Promise.reject(event);\r\n                }\r\n            }\r\n            this.storeSessionState(sessionState);\r\n            if (code) {\r\n                await this.getTokenFromCode(code, options);\r\n                this.restoreRequestedRoute();\r\n                return Promise.resolve();\r\n            }\r\n            else {\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n        return Promise.reject();\r\n    }\r\n    saveRequestedRoute() {\r\n        if (this.config.preserveRequestedRoute) {\r\n            this._storage.setItem('requested_route', window.location.pathname + window.location.search);\r\n        }\r\n    }\r\n    restoreRequestedRoute() {\r\n        const requestedRoute = this._storage.getItem('requested_route');\r\n        if (requestedRoute) {\r\n            history.replaceState(null, '', window.location.origin + requestedRoute);\r\n        }\r\n    }\r\n    /**\r\n     * Retrieve the returned auth code from the redirect uri that has been called.\r\n     * If required also check hash, as we could use hash location strategy.\r\n     */\r\n    getCodePartsFromUrl(queryString) {\r\n        if (!queryString || queryString.length === 0) {\r\n            return this.urlHelper.getHashFragmentParams();\r\n        }\r\n        // normalize query string\r\n        if (queryString.charAt(0) === '?') {\r\n            queryString = queryString.substr(1);\r\n        }\r\n        return this.urlHelper.parseQueryString(queryString);\r\n    }\r\n    /**\r\n     * Get token using an intermediate code. Works for the Authorization Code flow.\r\n     */\r\n    getTokenFromCode(code, options) {\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n            .set('grant_type', 'authorization_code')\r\n            .set('code', code)\r\n            .set('redirect_uri', options.customRedirectUri || this.redirectUri);\r\n        if (!this.disablePKCE) {\r\n            let PKCEVerifier;\r\n            if (this.saveNoncesInLocalStorage &&\r\n                typeof window['localStorage'] !== 'undefined') {\r\n                PKCEVerifier = localStorage.getItem('PKCE_verifier');\r\n            }\r\n            else {\r\n                PKCEVerifier = this._storage.getItem('PKCE_verifier');\r\n            }\r\n            if (!PKCEVerifier) {\r\n                console.warn('No PKCE verifier found in oauth storage!');\r\n            }\r\n            else {\r\n                params = params.set('code_verifier', PKCEVerifier);\r\n            }\r\n        }\r\n        return this.fetchAndProcessToken(params, options);\r\n    }\r\n    fetchAndProcessToken(params, options) {\r\n        options = options || {};\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            if (this.customQueryParams) {\r\n                for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('refresh tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                if (this.oidc && tokenResponse.id_token) {\r\n                    this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, options.disableNonceCheck)\r\n                        .then((result) => {\r\n                        this.storeIdToken(result);\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                        resolve(tokenResponse);\r\n                    })\r\n                        .catch((reason) => {\r\n                        this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\r\n                        console.error('Error validating tokens');\r\n                        console.error(reason);\r\n                        reject(reason);\r\n                    });\r\n                }\r\n                else {\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                    resolve(tokenResponse);\r\n                }\r\n            }, (err) => {\r\n                console.error('Error getting token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Checks whether there are tokens in the hash fragment\r\n     * as a result of the implicit flow. These tokens are\r\n     * parsed, validated and used to sign the user in to the\r\n     * current client.\r\n     *\r\n     * @param options Optional options.\r\n     */\r\n    tryLoginImplicitFlow(options = null) {\r\n        options = options || {};\r\n        let parts;\r\n        if (options.customHashFragment) {\r\n            parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\r\n        }\r\n        else {\r\n            parts = this.urlHelper.getHashFragmentParams();\r\n        }\r\n        this.debug('parsed url', parts);\r\n        const state = parts['state'];\r\n        let [nonceInState, userState] = this.parseState(state);\r\n        this.state = userState;\r\n        if (parts['error']) {\r\n            this.debug('error trying to login');\r\n            this.handleLoginError(options, parts);\r\n            const err = new OAuthErrorEvent('token_error', {}, parts);\r\n            this.eventsSubject.next(err);\r\n            return Promise.reject(err);\r\n        }\r\n        const accessToken = parts['access_token'];\r\n        const idToken = parts['id_token'];\r\n        const sessionState = parts['session_state'];\r\n        const grantedScopes = parts['scope'];\r\n        if (!this.requestAccessToken && !this.oidc) {\r\n            return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');\r\n        }\r\n        if (this.requestAccessToken && !accessToken) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.oidc && !idToken) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.sessionChecksEnabled && !sessionState) {\r\n            this.logger.warn('session checks (Session Status Change Notification) ' +\r\n                'were activated in the configuration but the id_token ' +\r\n                'does not contain a session_state claim');\r\n        }\r\n        if (this.requestAccessToken && !options.disableNonceCheck) {\r\n            const success = this.validateNonce(nonceInState);\r\n            if (!success) {\r\n                const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n                this.eventsSubject.next(event);\r\n                return Promise.reject(event);\r\n            }\r\n        }\r\n        if (this.requestAccessToken) {\r\n            this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);\r\n        }\r\n        if (!this.oidc) {\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                this.clearLocationHash();\r\n            }\r\n            this.callOnTokenReceivedIfExists(options);\r\n            return Promise.resolve(true);\r\n        }\r\n        return this.processIdToken(idToken, accessToken, options.disableNonceCheck)\r\n            .then((result) => {\r\n            if (options.validationHandler) {\r\n                return options\r\n                    .validationHandler({\r\n                    accessToken: accessToken,\r\n                    idClaims: result.idTokenClaims,\r\n                    idToken: result.idToken,\r\n                    state: state,\r\n                })\r\n                    .then((_) => result);\r\n            }\r\n            return result;\r\n        })\r\n            .then((result) => {\r\n            this.storeIdToken(result);\r\n            this.storeSessionState(sessionState);\r\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                this.clearLocationHash();\r\n            }\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            this.callOnTokenReceivedIfExists(options);\r\n            this.inImplicitFlow = false;\r\n            return true;\r\n        })\r\n            .catch((reason) => {\r\n            this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\r\n            this.logger.error('Error validating tokens');\r\n            this.logger.error(reason);\r\n            return Promise.reject(reason);\r\n        });\r\n    }\r\n    parseState(state) {\r\n        let nonce = state;\r\n        let userState = '';\r\n        if (state) {\r\n            const idx = state.indexOf(this.config.nonceStateSeparator);\r\n            if (idx > -1) {\r\n                nonce = state.substr(0, idx);\r\n                userState = state.substr(idx + this.config.nonceStateSeparator.length);\r\n            }\r\n        }\r\n        return [nonce, userState];\r\n    }\r\n    validateNonce(nonceInState) {\r\n        let savedNonce;\r\n        if (this.saveNoncesInLocalStorage &&\r\n            typeof window['localStorage'] !== 'undefined') {\r\n            savedNonce = localStorage.getItem('nonce');\r\n        }\r\n        else {\r\n            savedNonce = this._storage.getItem('nonce');\r\n        }\r\n        if (savedNonce !== nonceInState) {\r\n            const err = 'Validating access_token failed, wrong state/nonce.';\r\n            console.error(err, savedNonce, nonceInState);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    storeIdToken(idToken) {\r\n        this._storage.setItem('id_token', idToken.idToken);\r\n        this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\r\n        this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\r\n        this._storage.setItem('id_token_stored_at', '' + this.dateTimeService.now());\r\n    }\r\n    storeSessionState(sessionState) {\r\n        this._storage.setItem('session_state', sessionState);\r\n    }\r\n    getSessionState() {\r\n        return this._storage.getItem('session_state');\r\n    }\r\n    handleLoginError(options, parts) {\r\n        if (options.onLoginError) {\r\n            options.onLoginError(parts);\r\n        }\r\n        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n            this.clearLocationHash();\r\n        }\r\n    }\r\n    getClockSkewInMsec(defaultSkewMsc = 600000) {\r\n        if (!this.clockSkewInSec) {\r\n            return defaultSkewMsc;\r\n        }\r\n        return this.clockSkewInSec * 1000;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processIdToken(idToken, accessToken, skipNonceCheck = false) {\r\n        const tokenParts = idToken.split('.');\r\n        const headerBase64 = this.padBase64(tokenParts[0]);\r\n        const headerJson = b64DecodeUnicode(headerBase64);\r\n        const header = JSON.parse(headerJson);\r\n        const claimsBase64 = this.padBase64(tokenParts[1]);\r\n        const claimsJson = b64DecodeUnicode(claimsBase64);\r\n        const claims = JSON.parse(claimsJson);\r\n        let savedNonce;\r\n        if (this.saveNoncesInLocalStorage &&\r\n            typeof window['localStorage'] !== 'undefined') {\r\n            savedNonce = localStorage.getItem('nonce');\r\n        }\r\n        else {\r\n            savedNonce = this._storage.getItem('nonce');\r\n        }\r\n        if (Array.isArray(claims.aud)) {\r\n            if (claims.aud.every((v) => v !== this.clientId)) {\r\n                const err = 'Wrong audience: ' + claims.aud.join(',');\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n        else {\r\n            if (claims.aud !== this.clientId) {\r\n                const err = 'Wrong audience: ' + claims.aud;\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n        if (!claims.sub) {\r\n            const err = 'No sub claim in id_token';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        /* For now, we only check whether the sub against\r\n         * silentRefreshSubject when sessionChecksEnabled is on\r\n         * We will reconsider in a later version to do this\r\n         * in every other case too.\r\n         */\r\n        if (this.sessionChecksEnabled &&\r\n            this.silentRefreshSubject &&\r\n            this.silentRefreshSubject !== claims['sub']) {\r\n            const err = 'After refreshing, we got an id_token for another user (sub). ' +\r\n                `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!claims.iat) {\r\n            const err = 'No iat claim in id_token';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\r\n            const err = 'Wrong issuer: ' + claims.iss;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!skipNonceCheck && claims.nonce !== savedNonce) {\r\n            const err = 'Wrong nonce: ' + claims.nonce;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        // at_hash is not applicable to authorization code flow\r\n        // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\r\n        // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\r\n        // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\r\n        if (this.hasOwnProperty('responseType') &&\r\n            (this.responseType === 'code' || this.responseType === 'id_token')) {\r\n            this.disableAtHashCheck = true;\r\n        }\r\n        if (!this.disableAtHashCheck &&\r\n            this.requestAccessToken &&\r\n            !claims['at_hash']) {\r\n            const err = 'An at_hash is needed!';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        const now = this.dateTimeService.now();\r\n        const issuedAtMSec = claims.iat * 1000;\r\n        const expiresAtMSec = claims.exp * 1000;\r\n        const clockSkewInMSec = this.getClockSkewInMsec(); // (this.getClockSkewInMsec() || 600) * 1000;\r\n        if (issuedAtMSec - clockSkewInMSec >= now ||\r\n            expiresAtMSec + clockSkewInMSec <= now) {\r\n            const err = 'Token has expired';\r\n            console.error(err);\r\n            console.error({\r\n                now: now,\r\n                issuedAtMSec: issuedAtMSec,\r\n                expiresAtMSec: expiresAtMSec,\r\n            });\r\n            return Promise.reject(err);\r\n        }\r\n        const validationParams = {\r\n            accessToken: accessToken,\r\n            idToken: idToken,\r\n            jwks: this.jwks,\r\n            idTokenClaims: claims,\r\n            idTokenHeader: header,\r\n            loadKeys: () => this.loadJwks(),\r\n        };\r\n        if (this.disableAtHashCheck) {\r\n            return this.checkSignature(validationParams).then((_) => {\r\n                const result = {\r\n                    idToken: idToken,\r\n                    idTokenClaims: claims,\r\n                    idTokenClaimsJson: claimsJson,\r\n                    idTokenHeader: header,\r\n                    idTokenHeaderJson: headerJson,\r\n                    idTokenExpiresAt: expiresAtMSec,\r\n                };\r\n                return result;\r\n            });\r\n        }\r\n        return this.checkAtHash(validationParams).then((atHashValid) => {\r\n            if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\r\n                const err = 'Wrong at_hash';\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n            return this.checkSignature(validationParams).then((_) => {\r\n                const atHashCheckEnabled = !this.disableAtHashCheck;\r\n                const result = {\r\n                    idToken: idToken,\r\n                    idTokenClaims: claims,\r\n                    idTokenClaimsJson: claimsJson,\r\n                    idTokenHeader: header,\r\n                    idTokenHeaderJson: headerJson,\r\n                    idTokenExpiresAt: expiresAtMSec,\r\n                };\r\n                if (atHashCheckEnabled) {\r\n                    return this.checkAtHash(validationParams).then((atHashValid) => {\r\n                        if (this.requestAccessToken && !atHashValid) {\r\n                            const err = 'Wrong at_hash';\r\n                            this.logger.warn(err);\r\n                            return Promise.reject(err);\r\n                        }\r\n                        else {\r\n                            return result;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return result;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Returns the received claims about the user.\r\n     */\r\n    getIdentityClaims() {\r\n        const claims = this._storage.getItem('id_token_claims_obj');\r\n        if (!claims) {\r\n            return null;\r\n        }\r\n        return JSON.parse(claims);\r\n    }\r\n    /**\r\n     * Returns the granted scopes from the server.\r\n     */\r\n    getGrantedScopes() {\r\n        const scopes = this._storage.getItem('granted_scopes');\r\n        if (!scopes) {\r\n            return null;\r\n        }\r\n        return JSON.parse(scopes);\r\n    }\r\n    /**\r\n     * Returns the current id_token.\r\n     */\r\n    getIdToken() {\r\n        return this._storage ? this._storage.getItem('id_token') : null;\r\n    }\r\n    padBase64(base64data) {\r\n        while (base64data.length % 4 !== 0) {\r\n            base64data += '=';\r\n        }\r\n        return base64data;\r\n    }\r\n    /**\r\n     * Returns the current access_token.\r\n     */\r\n    getAccessToken() {\r\n        return this._storage ? this._storage.getItem('access_token') : null;\r\n    }\r\n    getRefreshToken() {\r\n        return this._storage ? this._storage.getItem('refresh_token') : null;\r\n    }\r\n    /**\r\n     * Returns the expiration date of the access_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    getAccessTokenExpiration() {\r\n        if (!this._storage.getItem('expires_at')) {\r\n            return null;\r\n        }\r\n        return parseInt(this._storage.getItem('expires_at'), 10);\r\n    }\r\n    getAccessTokenStoredAt() {\r\n        return parseInt(this._storage.getItem('access_token_stored_at'), 10);\r\n    }\r\n    getIdTokenStoredAt() {\r\n        return parseInt(this._storage.getItem('id_token_stored_at'), 10);\r\n    }\r\n    /**\r\n     * Returns the expiration date of the id_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    getIdTokenExpiration() {\r\n        if (!this._storage.getItem('id_token_expires_at')) {\r\n            return null;\r\n        }\r\n        return parseInt(this._storage.getItem('id_token_expires_at'), 10);\r\n    }\r\n    /**\r\n     * Checkes, whether there is a valid access_token.\r\n     */\r\n    hasValidAccessToken() {\r\n        if (this.getAccessToken()) {\r\n            const expiresAt = this._storage.getItem('expires_at');\r\n            const now = this.dateTimeService.new();\r\n            if (expiresAt &&\r\n                parseInt(expiresAt, 10) < now.getTime() - this.getClockSkewInMsec()) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Checks whether there is a valid id_token.\r\n     */\r\n    hasValidIdToken() {\r\n        if (this.getIdToken()) {\r\n            const expiresAt = this._storage.getItem('id_token_expires_at');\r\n            const now = this.dateTimeService.new();\r\n            if (expiresAt &&\r\n                parseInt(expiresAt, 10) < now.getTime() - this.getClockSkewInMsec()) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\r\n     */\r\n    getCustomTokenResponseProperty(requestedProperty) {\r\n        return this._storage &&\r\n            this.config.customTokenParameters &&\r\n            this.config.customTokenParameters.indexOf(requestedProperty) >= 0 &&\r\n            this._storage.getItem(requestedProperty) !== null\r\n            ? JSON.parse(this._storage.getItem(requestedProperty))\r\n            : null;\r\n    }\r\n    /**\r\n     * Returns the auth-header that can be used\r\n     * to transmit the access_token to a service\r\n     */\r\n    authorizationHeader() {\r\n        return 'Bearer ' + this.getAccessToken();\r\n    }\r\n    logOut(customParameters = {}, state = '') {\r\n        let noRedirectToLogoutUrl = false;\r\n        if (typeof customParameters === 'boolean') {\r\n            noRedirectToLogoutUrl = customParameters;\r\n            customParameters = {};\r\n        }\r\n        const id_token = this.getIdToken();\r\n        this._storage.removeItem('access_token');\r\n        this._storage.removeItem('id_token');\r\n        this._storage.removeItem('refresh_token');\r\n        if (this.saveNoncesInLocalStorage) {\r\n            localStorage.removeItem('nonce');\r\n            localStorage.removeItem('PKCE_verifier');\r\n        }\r\n        else {\r\n            this._storage.removeItem('nonce');\r\n            this._storage.removeItem('PKCE_verifier');\r\n        }\r\n        this._storage.removeItem('expires_at');\r\n        this._storage.removeItem('id_token_claims_obj');\r\n        this._storage.removeItem('id_token_expires_at');\r\n        this._storage.removeItem('id_token_stored_at');\r\n        this._storage.removeItem('access_token_stored_at');\r\n        this._storage.removeItem('granted_scopes');\r\n        this._storage.removeItem('session_state');\r\n        if (this.config.customTokenParameters) {\r\n            this.config.customTokenParameters.forEach((customParam) => this._storage.removeItem(customParam));\r\n        }\r\n        this.silentRefreshSubject = null;\r\n        this.eventsSubject.next(new OAuthInfoEvent('logout'));\r\n        if (!this.logoutUrl) {\r\n            return;\r\n        }\r\n        if (noRedirectToLogoutUrl) {\r\n            return;\r\n        }\r\n        if (!id_token && !this.postLogoutRedirectUri) {\r\n            return;\r\n        }\r\n        let logoutUrl;\r\n        if (!this.validateUrlForHttps(this.logoutUrl)) {\r\n            throw new Error(\"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        // For backward compatibility\r\n        if (this.logoutUrl.indexOf('{{') > -1) {\r\n            logoutUrl = this.logoutUrl\r\n                .replace(/\\{\\{id_token\\}\\}/, encodeURIComponent(id_token))\r\n                .replace(/\\{\\{client_id\\}\\}/, encodeURIComponent(this.clientId));\r\n        }\r\n        else {\r\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() });\r\n            if (id_token) {\r\n                params = params.set('id_token_hint', id_token);\r\n            }\r\n            const postLogoutUrl = this.postLogoutRedirectUri ||\r\n                (this.redirectUriAsPostLogoutRedirectUriFallback && this.redirectUri) ||\r\n                '';\r\n            if (postLogoutUrl) {\r\n                params = params.set('post_logout_redirect_uri', postLogoutUrl);\r\n                if (state) {\r\n                    params = params.set('state', state);\r\n                }\r\n            }\r\n            for (let key in customParameters) {\r\n                params = params.set(key, customParameters[key]);\r\n            }\r\n            logoutUrl =\r\n                this.logoutUrl +\r\n                    (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\r\n                    params.toString();\r\n        }\r\n        this.config.openUri(logoutUrl);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createAndSaveNonce() {\r\n        const that = this;\r\n        return this.createNonce().then(function (nonce) {\r\n            // Use localStorage for nonce if possible\r\n            // localStorage is the only storage who survives a\r\n            // redirect in ALL browsers (also IE)\r\n            // Otherwiese we'd force teams who have to support\r\n            // IE into using localStorage for everything\r\n            if (that.saveNoncesInLocalStorage &&\r\n                typeof window['localStorage'] !== 'undefined') {\r\n                localStorage.setItem('nonce', nonce);\r\n            }\r\n            else {\r\n                that._storage.setItem('nonce', nonce);\r\n            }\r\n            return nonce;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnDestroy() {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n        this.removeSilentRefreshEventListener();\r\n        const silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);\r\n        if (silentRefreshFrame) {\r\n            silentRefreshFrame.remove();\r\n        }\r\n        this.stopSessionCheckTimer();\r\n        this.removeSessionCheckEventListener();\r\n        const sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (sessionCheckFrame) {\r\n            sessionCheckFrame.remove();\r\n        }\r\n    }\r\n    createNonce() {\r\n        return new Promise((resolve) => {\r\n            if (this.rngUrl) {\r\n                throw new Error('createNonce with rng-web-api has not been implemented so far');\r\n            }\r\n            /*\r\n             * This alphabet is from:\r\n             * https://tools.ietf.org/html/rfc7636#section-4.1\r\n             *\r\n             * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n             */\r\n            const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n            let size = 45;\r\n            let id = '';\r\n            const crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\r\n            if (crypto) {\r\n                let bytes = new Uint8Array(size);\r\n                crypto.getRandomValues(bytes);\r\n                // Needed for IE\r\n                if (!bytes.map) {\r\n                    bytes.map = Array.prototype.map;\r\n                }\r\n                bytes = bytes.map((x) => unreserved.charCodeAt(x % unreserved.length));\r\n                id = String.fromCharCode.apply(null, bytes);\r\n            }\r\n            else {\r\n                while (0 < size--) {\r\n                    id += unreserved[(Math.random() * unreserved.length) | 0];\r\n                }\r\n            }\r\n            resolve(base64UrlEncode(id));\r\n        });\r\n    }\r\n    async checkAtHash(params) {\r\n        if (!this.tokenValidationHandler) {\r\n            this.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');\r\n            return true;\r\n        }\r\n        return this.tokenValidationHandler.validateAtHash(params);\r\n    }\r\n    checkSignature(params) {\r\n        if (!this.tokenValidationHandler) {\r\n            this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.tokenValidationHandler.validateSignature(params);\r\n    }\r\n    /**\r\n     * Start the implicit flow or the code flow,\r\n     * depending on your configuration.\r\n     */\r\n    initLoginFlow(additionalState = '', params = {}) {\r\n        if (this.responseType === 'code') {\r\n            return this.initCodeFlow(additionalState, params);\r\n        }\r\n        else {\r\n            return this.initImplicitFlow(additionalState, params);\r\n        }\r\n    }\r\n    /**\r\n     * Starts the authorization code flow and redirects to user to\r\n     * the auth servers login url.\r\n     */\r\n    initCodeFlow(additionalState = '', params = {}) {\r\n        if (this.loginUrl !== '') {\r\n            this.initCodeFlowInternal(additionalState, params);\r\n        }\r\n        else {\r\n            this.events\r\n                .pipe(filter((e) => e.type === 'discovery_document_loaded'))\r\n                .subscribe((_) => this.initCodeFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n    initCodeFlowInternal(additionalState = '', params = {}) {\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        let addParams = {};\r\n        let loginHint = null;\r\n        if (typeof params === 'string') {\r\n            loginHint = params;\r\n        }\r\n        else if (typeof params === 'object') {\r\n            addParams = params;\r\n        }\r\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n            .then(this.config.openUri)\r\n            .catch((error) => {\r\n            console.error('Error in initAuthorizationCodeFlow');\r\n            console.error(error);\r\n        });\r\n    }\r\n    async createChallangeVerifierPairForPKCE() {\r\n        if (!this.crypto) {\r\n            throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\r\n        }\r\n        const verifier = await this.createNonce();\r\n        const challengeRaw = await this.crypto.calcHash(verifier, 'sha-256');\r\n        const challenge = base64UrlEncode(challengeRaw);\r\n        return [challenge, verifier];\r\n    }\r\n    extractRecognizedCustomParameters(tokenResponse) {\r\n        let foundParameters = new Map();\r\n        if (!this.config.customTokenParameters) {\r\n            return foundParameters;\r\n        }\r\n        this.config.customTokenParameters.forEach((recognizedParameter) => {\r\n            if (tokenResponse[recognizedParameter]) {\r\n                foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\r\n            }\r\n        });\r\n        return foundParameters;\r\n    }\r\n    /**\r\n     * Revokes the auth token to secure the vulnarability\r\n     * of the token issued allowing the authorization server to clean\r\n     * up any security credentials associated with the authorization\r\n     */\r\n    revokeTokenAndLogout(customParameters = {}, ignoreCorsIssues = false) {\r\n        let revokeEndpoint = this.revocationEndpoint;\r\n        let accessToken = this.getAccessToken();\r\n        let refreshToken = this.getRefreshToken();\r\n        if (!accessToken) {\r\n            return;\r\n        }\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() });\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                params = params.set(key, this.customQueryParams[key]);\r\n            }\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let revokeAccessToken;\r\n            let revokeRefreshToken;\r\n            if (accessToken) {\r\n                let revokationParams = params\r\n                    .set('token', accessToken)\r\n                    .set('token_type_hint', 'access_token');\r\n                revokeAccessToken = this.http.post(revokeEndpoint, revokationParams, { headers });\r\n            }\r\n            else {\r\n                revokeAccessToken = of(null);\r\n            }\r\n            if (refreshToken) {\r\n                let revokationParams = params\r\n                    .set('token', refreshToken)\r\n                    .set('token_type_hint', 'refresh_token');\r\n                revokeRefreshToken = this.http.post(revokeEndpoint, revokationParams, { headers });\r\n            }\r\n            else {\r\n                revokeRefreshToken = of(null);\r\n            }\r\n            if (ignoreCorsIssues) {\r\n                revokeAccessToken = revokeAccessToken.pipe(catchError((err) => {\r\n                    if (err.status === 0) {\r\n                        return of(null);\r\n                    }\r\n                    return throwError(err);\r\n                }));\r\n                revokeRefreshToken = revokeRefreshToken.pipe(catchError((err) => {\r\n                    if (err.status === 0) {\r\n                        return of(null);\r\n                    }\r\n                    return throwError(err);\r\n                }));\r\n            }\r\n            combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe((res) => {\r\n                this.logOut(customParameters);\r\n                resolve(res);\r\n                this.logger.info('Token successfully revoked');\r\n            }, (err) => {\r\n                this.logger.error('Error revoking token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Clear location.hash if it's present\r\n     */\r\n    clearLocationHash() {\r\n        // Checking for empty hash is necessary for Firefox\r\n        // as setting an empty hash to an empty string adds # to the URL\r\n        if (location.hash != '') {\r\n            location.hash = '';\r\n        }\r\n    }\r\n}\r\nOAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthService, deps: [{ token: i0.NgZone }, { token: i1.HttpClient }, { token: OAuthStorage, optional: true }, { token: ValidationHandler, optional: true }, { token: AuthConfig, optional: true }, { token: UrlHelperService }, { token: OAuthLogger }, { token: HashHandler, optional: true }, { token: DOCUMENT }, { token: DateTimeProvider }], target: i0.ɵɵFactoryTarget.Injectable });\r\nOAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.HttpClient }, { type: OAuthStorage, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: ValidationHandler, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: AuthConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: UrlHelperService }, { type: OAuthLogger }, { type: HashHandler, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: DateTimeProvider }]; } });\n\nclass OAuthModuleConfig {\r\n}\r\nclass OAuthResourceServerConfig {\r\n}\n\nclass OAuthResourceServerErrorHandler {\r\n}\r\nclass OAuthNoopResourceServerErrorHandler {\r\n    handleError(err) {\r\n        return throwError(err);\r\n    }\r\n}\n\nclass DefaultOAuthInterceptor {\r\n    constructor(oAuthService, errorHandler, moduleConfig) {\r\n        this.oAuthService = oAuthService;\r\n        this.errorHandler = errorHandler;\r\n        this.moduleConfig = moduleConfig;\r\n    }\r\n    checkUrl(url) {\r\n        if (this.moduleConfig.resourceServer.customUrlValidation) {\r\n            return this.moduleConfig.resourceServer.customUrlValidation(url);\r\n        }\r\n        if (this.moduleConfig.resourceServer.allowedUrls) {\r\n            return !!this.moduleConfig.resourceServer.allowedUrls.find((u) => url.toLowerCase().startsWith(u.toLowerCase()));\r\n        }\r\n        return true;\r\n    }\r\n    intercept(req, next) {\r\n        const url = req.url.toLowerCase();\r\n        if (!this.moduleConfig ||\r\n            !this.moduleConfig.resourceServer ||\r\n            !this.checkUrl(url)) {\r\n            return next.handle(req);\r\n        }\r\n        const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\r\n        if (!sendAccessToken) {\r\n            return next\r\n                .handle(req)\r\n                .pipe(catchError((err) => this.errorHandler.handleError(err)));\r\n        }\r\n        return merge(of(this.oAuthService.getAccessToken()).pipe(filter((token) => !!token)), this.oAuthService.events.pipe(filter((e) => e.type === 'token_received'), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError((_) => of(null)), // timeout is not an error\r\n        map((_) => this.oAuthService.getAccessToken()))).pipe(take(1), mergeMap((token) => {\r\n            if (token) {\r\n                const header = 'Bearer ' + token;\r\n                const headers = req.headers.set('Authorization', header);\r\n                req = req.clone({ headers });\r\n            }\r\n            return next\r\n                .handle(req)\r\n                .pipe(catchError((err) => this.errorHandler.handleError(err)));\r\n        }));\r\n    }\r\n}\r\nDefaultOAuthInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultOAuthInterceptor, deps: [{ token: OAuthService }, { token: OAuthResourceServerErrorHandler }, { token: OAuthModuleConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nDefaultOAuthInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultOAuthInterceptor });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultOAuthInterceptor, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: OAuthService }, { type: OAuthResourceServerErrorHandler }, { type: OAuthModuleConfig, decorators: [{\r\n                    type: Optional\r\n                }] }]; } });\n\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\r\nclass NullValidationHandler {\r\n    validateSignature(validationParams) {\r\n        return Promise.resolve(null);\r\n    }\r\n    validateAtHash(validationParams) {\r\n        return Promise.resolve(true);\r\n    }\r\n}\n\nfunction createDefaultLogger() {\r\n    return console;\r\n}\r\nfunction createDefaultStorage() {\r\n    return typeof sessionStorage !== 'undefined'\r\n        ? sessionStorage\r\n        : new MemoryStorage();\r\n}\n\nclass OAuthModule {\r\n    static forRoot(config = null, validationHandlerClass = NullValidationHandler) {\r\n        return {\r\n            ngModule: OAuthModule,\r\n            providers: [\r\n                OAuthService,\r\n                UrlHelperService,\r\n                { provide: OAuthLogger, useFactory: createDefaultLogger },\r\n                { provide: OAuthStorage, useFactory: createDefaultStorage },\r\n                { provide: ValidationHandler, useClass: validationHandlerClass },\r\n                { provide: HashHandler, useClass: DefaultHashHandler },\r\n                {\r\n                    provide: OAuthResourceServerErrorHandler,\r\n                    useClass: OAuthNoopResourceServerErrorHandler,\r\n                },\r\n                { provide: OAuthModuleConfig, useValue: config },\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: DefaultOAuthInterceptor,\r\n                    multi: true,\r\n                },\r\n                { provide: DateTimeProvider, useClass: SystemDateTimeProvider },\r\n            ],\r\n        };\r\n    }\r\n}\r\nOAuthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nOAuthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthModule, imports: [CommonModule] });\r\nOAuthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthModule, imports: [[CommonModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: OAuthModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [],\r\n                    exports: [],\r\n                }]\r\n        }] });\n\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\r\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\r\nclass JwksValidationHandler extends NullValidationHandler {\r\n    constructor() {\r\n        super();\r\n        console.error(err);\r\n    }\r\n}\n\nconst AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DateTimeProvider, DefaultHashHandler, DefaultOAuthInterceptor, HashHandler, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, SystemDateTimeProvider, UrlHelperService, ValidationHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}