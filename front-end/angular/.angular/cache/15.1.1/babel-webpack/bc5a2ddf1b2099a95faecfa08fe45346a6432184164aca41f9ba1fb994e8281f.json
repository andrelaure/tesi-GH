{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Pipe } from '@angular/core';\n/*\r\n * Raise the value exponentially\r\n * Takes an exponent argument that defaults to 1.\r\n * Usage:\r\n *   value | exponentialStrength:exponent\r\n * Example:\r\n *   {{ 2 | exponentialStrength:10 }}\r\n *   formats to: 1024\r\n*/\nlet DurationPipe = class DurationPipe {\n  transform(value, exponent = 1) {\n    const numberOfSecondsPerHour = 3600;\n    const numericValue = value === null || value === undefined ? 0 : typeof value === 'number' ? value : Number.parseInt(value);\n    if (numericValue > numberOfSecondsPerHour) {\n      return new Date(numericValue * 1000).toISOString().substr(11, 8);\n    } else {\n      return new Date(numericValue * 1000).toISOString().substr(14, 5);\n    }\n  }\n};\nDurationPipe = __decorate([Pipe({\n  name: 'dur'\n})], DurationPipe);\nexport { DurationPipe };","map":{"version":3,"mappings":";AAAA,SAASA,IAAI,QAAuB,eAAe;AACnD;;;;;;;;;AAUO,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EACvBC,SAAS,CAACC,KAAyC,EAAEC,QAAQ,GAAG,CAAC;IAC/D,MAAMC,sBAAsB,GAAW,IAAI;IAC3C,MAAMC,YAAY,GAAGH,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKI,SAAS,GAAG,CAAC,GAAG,OAAOJ,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGK,MAAM,CAACC,QAAQ,CAACN,KAAK,CAAC;IAC3H,IAAGG,YAAY,GAAGD,sBAAsB,EAAG;MACvC,OAAO,IAAIK,IAAI,CAACJ,YAAY,GAAG,IAAI,CAAC,CAACK,WAAW,EAAE,CAACC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;KACnE,MAAM;MACH,OAAO,IAAIF,IAAI,CAACJ,YAAY,GAAG,IAAI,CAAC,CAACK,WAAW,EAAE,CAACC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;;EAEtE;CACD;AAVYX,YAAY,eADxBD,IAAI,CAAC;EAACa,IAAI,EAAE;AAAK,CAAC,CAAC,GACPZ,YAAY,CAUxB;SAVYA,YAAY","names":["Pipe","DurationPipe","transform","value","exponent","numberOfSecondsPerHour","numericValue","undefined","Number","parseInt","Date","toISOString","substr","name"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\pipes\\duration.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * Raise the value exponentially\r\n * Takes an exponent argument that defaults to 1.\r\n * Usage:\r\n *   value | exponentialStrength:exponent\r\n * Example:\r\n *   {{ 2 | exponentialStrength:10 }}\r\n *   formats to: 1024\r\n*/\r\n@Pipe({name: 'dur'})\r\nexport class DurationPipe implements PipeTransform {\r\n  transform(value: number | string | null | undefined, exponent = 1): string {\r\n    const numberOfSecondsPerHour: number = 3600;\r\n    const numericValue = value === null || value === undefined ? 0 : typeof value === 'number' ? value : Number.parseInt(value);\r\n    if(numericValue > numberOfSecondsPerHour ) {\r\n        return new Date(numericValue * 1000).toISOString().substr(11, 8);\r\n    } else {\r\n        return new Date(numericValue * 1000).toISOString().substr(14, 5);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}