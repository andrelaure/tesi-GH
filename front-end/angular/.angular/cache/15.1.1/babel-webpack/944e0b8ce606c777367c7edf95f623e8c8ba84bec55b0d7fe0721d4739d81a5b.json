{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { initialOfficesDataState, initialOfficesDataFiltersState } from \"./offices.state\";\nimport { addOfficesDataError, addOfficesDataSuccess, changeOfficesDataFilters, deleteOfficesDataError, deleteOfficesDataSuccess, searchOfficesDataError, searchOfficesDataSuccess, updateOfficesDataError, updateOfficesDataSuccess } from \"./offices.actions\";\n//search filters OfficeData\nconst _officesDataFiltersReducer = createReducer(initialOfficesDataFiltersState, on(changeOfficesDataFilters, (_, a) => Object.assign(Object.assign({}, a.queryParams), {\n  _id: a._id\n})));\nexport function officesDataFiltersReducer(state, action) {\n  return _officesDataFiltersReducer(state, action);\n}\nconst _officesDataReducer = createReducer(initialOfficesDataState, on(searchOfficesDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(searchOfficesDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function officesDataReducer(state, action) {\n  return _officesDataReducer(state, action);\n}\n//ADD\nconst _addOfficesDataReducer = createReducer(initialOfficesDataState, on(addOfficesDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(addOfficesDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function addOfficesDataReducer(state, action) {\n  return _addOfficesDataReducer(state, action);\n}\n//DELETE\nconst _deleteOfficesDataReducer = createReducer(initialOfficesDataState, on(deleteOfficesDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(deleteOfficesDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function deleteOfficesDataReducer(state, action) {\n  return _deleteOfficesDataReducer(state, action);\n}\n//UPDATE\nconst _updateOfficesDataReducer = createReducer(initialOfficesDataState, on(updateOfficesDataSuccess, (state, action) => Object.assign(Object.assign({}, state), {\n  _id: action._id,\n  officesData: action.result\n})), on(updateOfficesDataError, (state, action) => Object.assign(Object.assign({}, state), {\n  _id: action._id,\n  error: action.error\n})));\nexport function updateOfficesDataReducer(state, action) {\n  return _updateOfficesDataReducer(state, action);\n}","map":{"version":3,"mappings":"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","names":["createReducer","on","initialOfficesDataState","initialOfficesDataFiltersState","addOfficesDataError","addOfficesDataSuccess","changeOfficesDataFilters","deleteOfficesDataError","deleteOfficesDataSuccess","searchOfficesDataError","searchOfficesDataSuccess","updateOfficesDataError","updateOfficesDataSuccess","_officesDataFiltersReducer","_","a","Object","queryParams","_id","officesDataFiltersReducer","state","action","_officesDataReducer","assign","result","_1","officesDataReducer","_addOfficesDataReducer","addOfficesDataReducer","_deleteOfficesDataReducer","deleteOfficesDataReducer","_updateOfficesDataReducer","officesData","error","updateOfficesDataReducer"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\TESI\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\redux\\offices\\offices.reducers.ts"],"sourcesContent":["import { createReducer, on, Action } from \"@ngrx/store\";\r\nimport { OfficesData, initialOfficesDataState as initialOfficesDataState, initialOfficesDataFiltersState as initialOfficesDataFiltersState } from \"./offices.state\";\r\nimport { DynamicQueryPart, WithId } from \"../state\";\r\nimport { addOfficesDataError, addOfficesDataSuccess, changeOfficesDataFilters, deleteOfficesDataError, deleteOfficesDataSuccess, searchOfficesDataError, searchOfficesDataSuccess, updateOfficesDataError, updateOfficesDataSuccess } from \"./offices.actions\";\r\n\r\n\r\n//search filters OfficeData\r\nconst _officesDataFiltersReducer = createReducer(\r\n    initialOfficesDataFiltersState,\r\n    on(changeOfficesDataFilters, (_, a) => ({...a.queryParams, _id: a._id}))\r\n);\r\nexport function officesDataFiltersReducer(state: DynamicQueryPart & WithId, action: Action): DynamicQueryPart & WithId{\r\n    return _officesDataFiltersReducer(state, action);\r\n}\r\n\r\n\r\nconst  _officesDataReducer = createReducer(\r\n    initialOfficesDataState,\r\n    on(searchOfficesDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(searchOfficesDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n  );\r\n\r\nexport function officesDataReducer(state: OfficesData[] & WithId, action: Action): OfficesData[] & WithId{\r\n    return _officesDataReducer(state, action);\r\n}\r\n\r\n//ADD\r\nconst  _addOfficesDataReducer = createReducer(\r\n    initialOfficesDataState,\r\n    on(addOfficesDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(addOfficesDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n  );\r\n\r\nexport function addOfficesDataReducer(state: OfficesData[] & WithId, action: Action): OfficesData[] & WithId{\r\n    return _addOfficesDataReducer(state, action);\r\n}\r\n\r\n//DELETE\r\nconst  _deleteOfficesDataReducer = createReducer(\r\n    initialOfficesDataState,\r\n    on(deleteOfficesDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(deleteOfficesDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n  );\r\n\r\nexport function deleteOfficesDataReducer(state: OfficesData[] & WithId, action: Action): OfficesData[] & WithId{\r\n    return _deleteOfficesDataReducer(state, action);\r\n}\r\n\r\n//UPDATE\r\nconst  _updateOfficesDataReducer = createReducer(\r\n    initialOfficesDataState,\r\n    on(updateOfficesDataSuccess, (state, action) => ({ ...state, _id: action._id, officesData: action.result })),\r\n    on(updateOfficesDataError, (state, action) => ({ ...state, _id: action._id, error: action.error }))\r\n);\r\n\r\nexport function updateOfficesDataReducer(state: OfficesData[] & WithId, action: Action): OfficesData[] & WithId{\r\n    return _updateOfficesDataReducer(state, action);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}