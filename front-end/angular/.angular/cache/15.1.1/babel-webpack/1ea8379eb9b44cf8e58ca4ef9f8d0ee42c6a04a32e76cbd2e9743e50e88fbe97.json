{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./notice.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./notice.component.scss?ngResource\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Store } from \"@ngrx/store\";\nimport { of, Subject } from \"rxjs\";\nlet NoticeComponent = class NoticeComponent {\n  constructor(store, router, route) {\n    this.store = store;\n    this.router = router;\n    this.route = route;\n    this.lastSearch$ = of(null);\n    this.noticeData$ = of([]);\n    this.noticeDataFilters$ = of({});\n    this.totalRecords$ = of(0);\n    this._dummy = {\n      noticeId: 0,\n      noticeState: \"dummy\",\n      noticeDateTime: \"dummy\",\n      noticeTitle: \"dummy\",\n      noticeText: \"dummy\"\n    };\n    this.globalFiltersFields = Object.keys(this._dummy);\n    this.filtersSubj$ = new Subject();\n  }\n  ngOnInit() {}\n};\nNoticeComponent.ctorParameters = () => [{\n  type: Store\n}, {\n  type: Router\n}, {\n  type: ActivatedRoute\n}];\nNoticeComponent = __decorate([Component({\n  selector: \"app-notice\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], NoticeComponent);\nexport { NoticeComponent };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAASC,cAAc,EAAEC,MAAM,QAAQ,iBAAiB;AACxD,SAAiBC,KAAK,QAAQ,aAAa;AAC3C,SAAqCC,EAAE,EAAEC,OAAO,QAAsB,MAAM;AAoBrE,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAkBxBC,YACYC,KAAsB,EACtBC,MAAc,EACdC,KAAqB;IAFrB,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IApBjB,gBAAW,GAAuBN,EAAE,CAAC,IAAI,CAAC;IAC1C,gBAAW,GAA6BA,EAAE,CAAC,EAAE,CAAC;IAC9C,uBAAkB,GAAiCA,EAAE,CAAC,EAAE,CAAC;IAEzD,kBAAa,GAAuBA,EAAE,CAAC,CAAC,CAAC;IAEjC,WAAM,GAAwB;MAClCO,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,OAAO;MACpBC,cAAc,EAAE,OAAO;MACvBC,WAAW,EAAE,OAAO;MACpBC,UAAU,EAAE;KACf;IACD,wBAAmB,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAAC;IAC9C,iBAAY,GAAG,IAAIb,OAAO,EAAU;EASpC;EAGAc,QAAQ,IAAU;;;;;;;;;AA3BTb,eAAe,eAN3BN,SAAS,CAAC;EACPoB,QAAQ,EAAE,YAAY;EACtBC,8BAAsC;;CAEzC,CAAC,GAEWf,eAAe,CA4B3B;SA5BYA,eAAe","names":["Component","ActivatedRoute","Router","Store","of","Subject","NoticeComponent","constructor","store","router","route","noticeId","noticeState","noticeDateTime","noticeTitle","noticeText","Object","keys","_dummy","ngOnInit","selector","template"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\components\\notice\\notice.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\nimport { firstValueFrom, Observable, of, Subject, Subscription } from \"rxjs\";\r\nimport { debounceTime, distinctUntilChanged, map, startWith, take } from \"rxjs/operators\";\r\nimport { LazyLoadEvent } from \"primeng/api\";\r\n\r\n\r\nimport { AppState, DynamicQueryPart, Filtering } from \"src/app/redux/state\";\r\nimport { getRandomId } from \"src/app/redux/actions\";\r\nimport { selectIsLoading } from \"src/app/redux/awaiter/awaiter.selectors\";\r\n//import { SampleData } from \"src/app/redux/sample/sample.state\";\r\n//import { selectSampleData, selectSampleDataFilters } from \"src/app/redux/sample/sample.selectors\";\r\n//import { changeSampleDataFilters } from \"src/app/redux/sample/sample.actions\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n@Component({\r\n    selector: \"app-notice\",\r\n    templateUrl: \"./notice.component.html\",\r\n    styleUrls: [\"./notice.component.scss\"],\r\n})\r\n\r\nexport class NoticeComponent implements OnInit{ //onDestroy\r\n    lastSearch$: Observable<string> = of(null);\r\n    noticeData$: Observable<NoticeData[]> = of([]);\r\n    noticeDataFilters$: Observable<DynamicQueryPart> = of({});\r\n    isLoading$: Observable<boolean>;\r\n    totalRecords$: Observable<number> = of(0);\r\n\r\n    private _dummy: Partial<NoticeData> = {\r\n        noticeId: 0,\r\n        noticeState: \"dummy\",\r\n        noticeDateTime: \"dummy\",\r\n        noticeTitle: \"dummy\",\r\n        noticeText: \"dummy\",\r\n    };\r\n    globalFiltersFields = Object.keys(this._dummy);\r\n    filtersSubj$ = new Subject<Action>();\r\n    filtersSub: Subscription;\r\n\r\n    constructor(\r\n        private store: Store<AppState>,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ){\r\n\r\n    }\r\n\r\n\r\n    ngOnInit(): void {}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}