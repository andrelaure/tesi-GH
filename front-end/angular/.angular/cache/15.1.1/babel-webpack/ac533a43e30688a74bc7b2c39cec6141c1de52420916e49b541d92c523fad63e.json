{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { CustomOAuthService } from \"../services/custom-oauth.service\";\nlet VipUserGuard = class VipUserGuard {\n  constructor(oauthService) {\n    this.oauthService = oauthService;\n  }\n  canActivate(route, state) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const isVipUser = yield this.oauthService.isVipUser();\n      if (!isVipUser) {\n        console.error(\"You should be 'vip-user' to activate this route!\");\n      }\n      return isVipUser;\n    });\n  }\n};\nVipUserGuard.ctorParameters = () => [{\n  type: CustomOAuthService\n}];\nVipUserGuard = __decorate([Injectable({\n  providedIn: \"any\"\n})], VipUserGuard);\nexport { VipUserGuard };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,kBAAkB,QAAQ,kCAAkC;AAG9D,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EACrBC,YAAoBC,YAAgC;IAAhC,iBAAY,GAAZA,YAAY;EAAuB;EAEjDC,WAAW,CACbC,KAA6B,EAC7BC,KAA0B;;MAE1B,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACJ,YAAY,CAACI,SAAS,EAAE;MACrD,IAAI,CAACA,SAAS,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;;MAErE,OAAOF,SAAS;IACpB,CAAC;;;;;;AAZQN,YAAY,eADxBF,UAAU,CAAC;EAAEW,UAAU,EAAE;AAAK,CAAE,CAAC,GACrBT,YAAY,CAaxB;SAbYA,YAAY","names":["Injectable","CustomOAuthService","VipUserGuard","constructor","oauthService","canActivate","route","state","isVipUser","console","error","providedIn"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\guards\\vip-user.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { CustomOAuthService } from \"../services/custom-oauth.service\";\r\n\r\n@Injectable({ providedIn: \"any\" })\r\nexport class VipUserGuard implements CanActivate {\r\n    constructor(private oauthService: CustomOAuthService) {}\r\n\r\n    async canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Promise<boolean | UrlTree> {\r\n        const isVipUser = await this.oauthService.isVipUser();\r\n        if (!isVipUser) {\r\n            console.error(\"You should be 'vip-user' to activate this route!\");\r\n        }\r\n        return isVipUser;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}