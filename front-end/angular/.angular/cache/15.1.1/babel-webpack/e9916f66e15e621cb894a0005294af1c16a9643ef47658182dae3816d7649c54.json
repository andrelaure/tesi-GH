{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./noticesManagement.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./noticesManagement.component.scss?ngResource\";\nimport { Component } from \"@angular/core\";\nimport { of } from \"rxjs\";\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nlet NoticesManagementComponent = class NoticesManagementComponent {\n  constructor() {\n    this.noticeData$ = of([]);\n    this.defaultNoticeData = {\n      noticeId: 0,\n      noticeState: false,\n      noticeDateTime: new Date(),\n      noticeTitle: '',\n      noticeObject: '',\n      noticeDesc: '',\n      userId: null\n    };\n    this.usersIdAsString = \"\";\n    this.notification = {\n      title: \"\",\n      object: \"\",\n      description: \"\"\n    };\n    this.usersId = [{\n      usersId: \"Utente 1\"\n    }, {\n      usersId: \"Utente 2\"\n    }, {\n      usersId: \"Utente 3\"\n    }, {\n      usersId: \"Utente 4\"\n    }, {\n      usersId: \"Utente 5\"\n    }, {\n      usersId: \"Utente 6\"\n    }];\n    this.selectedUsers = [];\n  }\n  /*onSubmit() {\r\n      console.log(\"Notifica aggiunta:\", this.notification);\r\n  }*/\n  addNotice(notice) {\n    notice.noticeTitle = this.notification.title;\n    notice.noticeObject = this.notification.object;\n    notice.noticeDesc = this.notification.description;\n    if (this.selectedUsers) {\n      for (let id in this.selectedUsers) {\n        this.usersIdAsString += id;\n      }\n    }\n    notice.userId = this.usersIdAsString;\n    console.log(\"Notifica aggiunta:\", notice);\n  }\n  deleteNotice(notice) {\n    // onCascade a tutti quelli a cui è stata inviata\n  }\n};\nNoticesManagementComponent = __decorate([Component({\n  selector: \"app-noticesManagement\",\n  template: __NG_CLI_RESOURCE__0,\n  imports: [InputTextModule, InputTextareaModule],\n  styles: [__NG_CLI_RESOURCE__1]\n})], NoticesManagementComponent);\nexport { NoticesManagementComponent };","map":{"version":3,"mappings":";;;AAAA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAA8BC,EAAE,QAAQ,MAAM;AAC9C,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,mBAAmB,QAAQ,uBAAuB;AAcpD,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAAhCC;IAEH,gBAAW,GAA6BJ,EAAE,CAAC,EAAE,CAAC;IAE9C,sBAAiB,GAAwB;MACrCK,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE,IAAIC,IAAI,EAAE;MAC1BC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE;KACT;IAEK,oBAAe,GAAG,EAAE;IAE5B,iBAAY,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE;KAChB;IAED,YAAO,GAAU,CACb;MAAEC,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,EACvB;MAAEA,OAAO,EAAE;IAAU,CAAE,CAC1B;IAED,kBAAa,GAAU,EAAE;EA2B7B;EAzBI;;;EAIAC,SAAS,CAACC,MAAiB;IACvBA,MAAM,CAACT,WAAW,GAAG,IAAI,CAACU,YAAY,CAACN,KAAK;IAC5CK,MAAM,CAACR,YAAY,GAAG,IAAI,CAACS,YAAY,CAACL,MAAM;IAC9CI,MAAM,CAACP,UAAU,GAAG,IAAI,CAACQ,YAAY,CAACJ,WAAW;IAEjD,IAAI,IAAI,CAACK,aAAa,EAAC;MACnB,KAAK,IAAIC,EAAE,IAAI,IAAI,CAACD,aAAa,EAAC;QAC9B,IAAI,CAACE,eAAe,IAAID,EAAE;;;IAGlCH,MAAM,CAACN,MAAM,GAAG,IAAI,CAACU,eAAe;IAEpCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,MAAM,CAAC;EAC7C;EAEAO,YAAY,CAACP,MAAiB;IAC1B;EAAA;CAKP;AA1DYf,0BAA0B,eARtCJ,SAAS,CAAC;EACP2B,QAAQ,EAAE,uBAAuB;EACjCC,8BAAiD;EAEjDC,OAAO,EAAC,CAAC3B,eAAe,EAAEC,mBAAmB,CAAC;;CAEjD,CAAC,GAEWC,0BAA0B,CA0DtC;SA1DYA,0BAA0B","names":["Component","of","InputTextModule","InputTextareaModule","NoticesManagementComponent","constructor","noticeId","noticeState","noticeDateTime","Date","noticeTitle","noticeObject","noticeDesc","userId","title","object","description","usersId","addNotice","notice","notification","selectedUsers","id","usersIdAsString","console","log","deleteNotice","selector","template","imports"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\components\\admin\\noticesManagement\\noticesManagement.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Observable, isEmpty, of } from \"rxjs\";\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea'\r\n\r\nimport { NoticeData } from \"src/app/redux/notice/notice.state\";\r\nimport {FormControl, Validators, FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    selector: \"app-noticesManagement\",\r\n    templateUrl: \"./noticesManagement.component.html\",\r\n    styleUrls: [\"./noticesManagement.component.scss\"],\r\n    imports:[InputTextModule, InputTextareaModule],\r\n    \r\n})\r\n\r\nexport class NoticesManagementComponent  { \r\n\r\n    noticeData$: Observable<NoticeData[]> = of([]);\r\n\r\n    defaultNoticeData: Partial<NoticeData> = {\r\n        noticeId: 0, // Questo valore sarà sovrascritto se l'ID è una colonna Identity nel database.\r\n        noticeState: false,\r\n        noticeDateTime: new Date(), // DateTime.Now equivale a new Date() in TypeScript\r\n        noticeTitle: '',\r\n        noticeObject: '',\r\n        noticeDesc: '',\r\n        userId: null,\r\n      };\r\n\r\n    private usersIdAsString = \"\";\r\n\r\n    notification = {\r\n        title: \"\",\r\n        object: \"\",\r\n        description: \"\"\r\n    };    \r\n\r\n    usersId: any[] = [  \r\n        { usersId: \"Utente 1\" },\r\n        { usersId: \"Utente 2\" },\r\n        { usersId: \"Utente 3\" },\r\n        { usersId: \"Utente 4\" },\r\n        { usersId: \"Utente 5\" },\r\n        { usersId: \"Utente 6\" },\r\n    ];\r\n\r\n    selectedUsers: any[] = [];\r\n\r\n    /*onSubmit() {\r\n        console.log(\"Notifica aggiunta:\", this.notification);\r\n    }*/\r\n\r\n    addNotice(notice:NoticeData){\r\n        notice.noticeTitle = this.notification.title;\r\n        notice.noticeObject = this.notification.object;\r\n        notice.noticeDesc = this.notification.description;\r\n\r\n        if (this.selectedUsers){\r\n            for (let id in this.selectedUsers){\r\n                this.usersIdAsString += id;\r\n            }\r\n        }\r\n        notice.userId = this.usersIdAsString;\r\n\r\n        console.log(\"Notifica aggiunta:\", notice);\r\n    }\r\n\r\n    deleteNotice(notice:NoticeData){\r\n        // onCascade a tutti quelli a cui è stata inviata\r\n    }\r\n\r\n\r\n      \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}