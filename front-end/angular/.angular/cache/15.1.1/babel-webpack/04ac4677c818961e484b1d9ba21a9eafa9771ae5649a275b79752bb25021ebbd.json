{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { initialSampleDataFiltersState, initialSampleDataState } from './sample.state';\nimport { changeSampleDataFilters, searchSampleDataError, searchSampleDataSuccess } from './sample.actions';\nconst _sampleDataReducer = createReducer(initialSampleDataState, on(searchSampleDataSuccess, (_, a) => Object.assign([...(a.result ? a.result : [])], {\n  _id: a._id\n})), on(searchSampleDataError, (_1, a) => Object.assign([], {\n  _id: a._id\n})));\nexport function sampleDataReducer(state, action) {\n  return _sampleDataReducer(state, action);\n}\nconst _sampleDataFiltersReducer = createReducer(initialSampleDataFiltersState, on(changeSampleDataFilters, (_, a) => Object.assign(Object.assign({}, a.queryParams), {\n  _id: a._id\n})));\nexport function sampleDataFiltersReducer(state, action) {\n  return _sampleDataFiltersReducer(state, action);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAgB,aAAa;AACvD,SAAqBC,6BAA8D,EAAEC,sBAAgD,QAAQ,gBAAgB;AAC7J,SAASC,uBAAuB,EAAEC,qBAAqB,EAAEC,uBAAuB,QAAQ,kBAAkB;AAG1G,MAAOC,kBAAkB,GAAGP,aAAa,CACrCG,sBAAsB,EACtBF,EAAE,CAACK,uBAAuB,EAAE,CAACE,CAAC,EAAEC,CAAC,KAC7BC,MAAM,CAACC,MAAM,CAAC,CAAC,IAAGF,CAAC,CAACG,MAAM,GAAGH,CAAC,CAACG,MAAM,GAAG,EAAE,EAAC,EAAE;EAAEC,GAAG,EAAEJ,CAAC,CAACI;AAAG,CAAC,CAAC,CAAC,EAChEZ,EAAE,CAACI,qBAAqB,EAAE,CAACS,EAAE,EAAEL,CAAC,KAAKC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE;EAACE,GAAG,EAAEJ,CAAC,CAACI;AAAG,CAAC,CAAC,CAAC,CACtE;AAED,OAAM,SAAUE,iBAAiB,CAACC,KAA4B,EAAEC,MAAc;EAC5E,OAAOV,kBAAkB,CAACS,KAAK,EAAEC,MAAM,CAAC;AAC1C;AAGF,MAAMC,yBAAyB,GAAGlB,aAAa,CAC3CE,6BAA6B,EAC7BD,EAAE,CAACG,uBAAuB,EAAE,CAACI,CAAC,EAAEC,CAAC,KAAKC,gCAAKD,CAAC,CAACU,WAAW;EAAEN,GAAG,EAAEJ,CAAC,CAACI;AAAG,EAAE,CAAC,CAC1E;AAED,OAAM,SAAUO,wBAAwB,CAACJ,KAAgC,EAAEC,MAAc;EACrF,OAAOC,yBAAyB,CAACF,KAAK,EAAEC,MAAM,CAAC;AACjD","names":["createReducer","on","initialSampleDataFiltersState","initialSampleDataState","changeSampleDataFilters","searchSampleDataError","searchSampleDataSuccess","_sampleDataReducer","_","a","Object","assign","result","_id","_1","sampleDataReducer","state","action","_sampleDataFiltersReducer","queryParams","sampleDataFiltersReducer"],"sourceRoot":"","sources":["C:\\Users\\andrea\\Desktop\\SIGLA\\tesi\\tesi-andrea-lauretta\\front-end\\angular\\src\\app\\redux\\sample\\sample.reducers.ts"],"sourcesContent":["import { createReducer, on, Action } from '@ngrx/store';\r\nimport { SampleData, initialSampleDataFiltersState as initialSampleDataFiltersState, initialSampleDataState as initialSampleDataState } from './sample.state';\r\nimport { changeSampleDataFilters, searchSampleDataError, searchSampleDataSuccess } from './sample.actions';\r\nimport { DynamicQueryPart, WithId } from '../state';\r\n\r\nconst  _sampleDataReducer = createReducer(\r\n    initialSampleDataState,\r\n    on(searchSampleDataSuccess, (_, a) =>\r\n        Object.assign([...a.result ? a.result : []], { _id: a._id})),\r\n    on(searchSampleDataError, (_1, a) => Object.assign([], {_id: a._id})),\r\n  );\r\n\r\n  export function sampleDataReducer(state: SampleData[] & WithId, action: Action): SampleData[] & WithId {\r\n    return _sampleDataReducer(state, action);\r\n  }\r\n\r\n\r\nconst _sampleDataFiltersReducer = createReducer(\r\n    initialSampleDataFiltersState,\r\n    on(changeSampleDataFilters, (_, a) => ({...a.queryParams, _id: a._id}))\r\n);\r\n\r\nexport function sampleDataFiltersReducer(state: DynamicQueryPart & WithId, action: Action): DynamicQueryPart & WithId {\r\n    return _sampleDataFiltersReducer(state, action);\r\n  }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}